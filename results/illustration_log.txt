----------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Users/wichman/Dropbox/IHS/results/illustration_log.txt
  log type:  text
 opened on:   4 Jun 2018, 09:27:36

. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_re78_re75

.         qui estadd local semielas = e_re78_treat

.         qui estadd local semielas_ihs = "---"   

.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_re78

. 
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_re78_ihsre75

.         qui estadd local semielas = e_re78_treat

.         qui estadd local semielas_ihs = "---"

.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         (sinh(_b[_cons] + _b[re75]*mean_re75t + _b[treat] + mean_res) 
>         / sinh(_b[_cons] + _b[re75]*mean_re75c + mean_res)) - 1 ;

.         #delimit cr
delimiter now cr
.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_ihsre78_re75

.         qui estadd local semielas =  e_ihsre78_treat_exp

.         qui estadd local semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
. ********************************************
. ** IHS(re78), dummy treat, asinh(re75)
. ********************************************
. est use "results/ihs_ihs"

. 
.         * save predicted ihs(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         sum yhat if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         local enum = mean_re75*sqrt(mean_re78^2+1)

.         local eden = mean_re78*sqrt(mean_re75^2+1)

.         scalar e_ihsre78_ihsre75 = _b[ihsre75]*(`enum'/`eden')

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * semi-elasticity using exact calculations
.         scalar e_ihsre78_treat_exact = (sinh(mean_yhat_t) / sinh(mean_yhat_c)) - 1

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_ihsre78_ihsre75, 0.001)
option 0.001 not allowed
r(198);

end of do-file

r(198);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_re78_re75

.         qui estadd local semielas = e_re78_treat

.         qui estadd local semielas_ihs = "---"   

.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_re78

. 
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_re78_ihsre75

.         qui estadd local semielas = e_re78_treat

.         qui estadd local semielas_ihs = "---"

.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         (sinh(_b[_cons] + _b[re75]*mean_re75t + _b[treat] + mean_res) 
>         / sinh(_b[_cons] + _b[re75]*mean_re75c + mean_res)) - 1 ;

.         #delimit cr
delimiter now cr
.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_ihsre78_re75

.         qui estadd local semielas =  e_ihsre78_treat_exp

.         qui estadd local semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
. ********************************************
. ** IHS(re78), dummy treat, asinh(re75)
. ********************************************
. est use "results/ihs_ihs"

. 
.         * save predicted ihs(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         sum yhat if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         local enum = mean_re75*sqrt(mean_re78^2+1)

.         local eden = mean_re78*sqrt(mean_re75^2+1)

.         scalar e_ihsre78_ihsre75 = _b[ihsre75]*(`enum'/`eden')

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * semi-elasticity using exact calculations
.         scalar e_ihsre78_treat_exact = (sinh(mean_yhat_t) / sinh(mean_yhat_c)) - 1

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_ihsre78_ihsre75

.         qui estadd local semielas = e_ihsre78_treat_exp

.         qui estadd local semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
.         
. ********************************************
. ** log(re78), dummy treat, linear re75
. ********************************************
. est use "results/log_lin"

.                 
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[re75] * mean_re75

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_lnre78_re75

.         qui estadd local semielas =  e_lnre78_treat_exp

.         qui estadd local semielas_ihs = "---"

.         qui eststo

.         
.         
.         
. ********************************************
. ** log(re78), dummy treat, log(re75)
. ********************************************
. est use "results/log_log"

.         
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[lnre75] 

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_lnre78_re75

.         qui estadd local semielas =  e_lnre78_treat_exp

.         qui estadd local semielas_ihs = "---"

.         qui eststo

.         
.         
. 
. ******************************************      
. * write table to file   
. ******************************************
. #delimit ;
delimiter now ;
. esttab using "results/reg1.tex", replace nonotes substitute(\_ _)
> nogaps compress b(4) se(4) star(* 0.10 ** 0.05 *** 0.01) 
> eqlabel(none) nodep label noobs nomtitles
> mgroups("$\text{Earnings}_{78}$" "$\text{arcsinh(Earnings}_{78}\text{)}$" 
> "$\ln\text{(Earnings}_{78}+1\text{)}$", pattern(1 0 1 0 1 0) 
> prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
> scalars("N Observations"
>                 "mean78t $\text{Earnings}_{78}\text{ (treatment mean)}$"
>                 "mean78c $\text{Earnings}_{78}\text{ (control mean)}$"
>                 "mean75t $\text{Earnings}_{75}\text{ (treatment mean)}$"
>                 "mean75c $\text{Earnings}_{75}\text{ (control mean)}$"
>                 "a $\phantom{whitespace}$"
>                 "b $\text{\textbf{Calculated (semi-)elasticities:}}$"
>                 "elas $\xi(\text{Earnings}_{78},\text{ Earnings}_{75})$"
>                 "semielas $\tilde{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "semielas_ihs $\bar{P}(\text{Earnings}_{78},\text{ NSW})/100$") 
> sfmt(a3);
(output written to results/reg1.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. *log close
. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_re78_re75

.         qui estadd local semielas = e_re78_treat

.         qui estadd local semielas_ihs = "---"   

.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_re78

. 
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_re78_ihsre75

.         qui estadd local semielas = e_re78_treat

.         qui estadd local semielas_ihs = "---"

.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         (sinh(_b[_cons] + _b[re75]*mean_re75t + _b[treat] + mean_res) 
>         / sinh(_b[_cons] + _b[re75]*mean_re75c + mean_res)) - 1 ;

.         #delimit cr
delimiter now cr
.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_ihsre78_re75

.         qui estadd local semielas =  e_ihsre78_treat_exp

.         qui estadd local semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
. ********************************************
. ** IHS(re78), dummy treat, asinh(re75)
. ********************************************
. est use "results/ihs_ihs"

. 
.         * save predicted ihs(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         sum yhat if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         local enum = mean_re75*sqrt(mean_re78^2+1)

.         local eden = mean_re78*sqrt(mean_re75^2+1)

.         scalar e_ihsre78_ihsre75 = _b[ihsre75]*(`enum'/`eden')

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * semi-elasticity using exact calculations
.         scalar e_ihsre78_treat_exact = (sinh(mean_yhat_t) / sinh(mean_yhat_c)) - 1

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_ihsre78_ihsre75

.         qui estadd local semielas = e_ihsre78_treat_exp

.         qui estadd local semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
.         
. ********************************************
. ** log(re78), dummy treat, linear re75
. ********************************************
. est use "results/log_lin"

.                 
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[re75] * mean_re75

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_lnre78_re75

.         qui estadd local semielas =  e_lnre78_treat_exp

.         qui estadd local semielas_ihs = "---"

.         qui eststo

.         
.         
.         
. ********************************************
. ** log(re78), dummy treat, log(re75)
. ********************************************
. est use "results/log_log"

.         
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[lnre75] 

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_lnre78_re75

.         qui estadd local semielas =  e_lnre78_treat_exp

.         qui estadd local semielas_ihs = "---"

.         qui eststo

.         
.         
. 
. ******************************************      
. * write table to file   
. ******************************************
. #delimit ;
delimiter now ;
. esttab using "results/reg1.tex", replace nonotes substitute(\_ _)
> nogaps compress b(4) se(4) star(* 0.10 ** 0.05 *** 0.01) 
> eqlabel(none) nodep label noobs nomtitles
> mgroups("$\text{Earnings}_{78}$" "$\text{arcsinh(Earnings}_{78}\text{)}$" 
> "$\ln\text{(Earnings}_{78}+1\text{)}$", pattern(1 0 1 0 1 0) 
> prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
> scalars("N Observations"
>                 "mean78t $\text{Earnings}_{78}\text{ (treatment mean)}$"
>                 "mean78c $\text{Earnings}_{78}\text{ (control mean)}$"
>                 "mean75t $\text{Earnings}_{75}\text{ (treatment mean)}$"
>                 "mean75c $\text{Earnings}_{75}\text{ (control mean)}$"
>                 "a $\phantom{whitespace}$"
>                 "b $\text{\textbf{Calculated (semi-)elasticities:}}$"
>                 "elas $\xi(\text{Earnings}_{78},\text{ Earnings}_{75})$"
>                 "semielas $\tilde{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "semielas_ihs $\bar{P}(\text{Earnings}_{78},\text{ NSW})/100$",
>                 sfmt(a3)) 
>                 ;
invalid syntax
r(198);

end of do-file

r(198);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_re78_re75

.         qui estadd local semielas = e_re78_treat

.         qui estadd local semielas_ihs = "---"   

.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_re78

. 
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_re78_ihsre75

.         qui estadd local semielas = e_re78_treat

.         qui estadd local semielas_ihs = "---"

.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         (sinh(_b[_cons] + _b[re75]*mean_re75t + _b[treat] + mean_res) 
>         / sinh(_b[_cons] + _b[re75]*mean_re75c + mean_res)) - 1 ;

.         #delimit cr
delimiter now cr
.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_ihsre78_re75

.         qui estadd local semielas =  e_ihsre78_treat_exp

.         qui estadd local semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
. ********************************************
. ** IHS(re78), dummy treat, asinh(re75)
. ********************************************
. est use "results/ihs_ihs"

. 
.         * save predicted ihs(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         sum yhat if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         local enum = mean_re75*sqrt(mean_re78^2+1)

.         local eden = mean_re78*sqrt(mean_re75^2+1)

.         scalar e_ihsre78_ihsre75 = _b[ihsre75]*(`enum'/`eden')

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * semi-elasticity using exact calculations
.         scalar e_ihsre78_treat_exact = (sinh(mean_yhat_t) / sinh(mean_yhat_c)) - 1

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_ihsre78_ihsre75

.         qui estadd local semielas = e_ihsre78_treat_exp

.         qui estadd local semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
.         
. ********************************************
. ** log(re78), dummy treat, linear re75
. ********************************************
. est use "results/log_lin"

.                 
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[re75] * mean_re75

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_lnre78_re75

.         qui estadd local semielas =  e_lnre78_treat_exp

.         qui estadd local semielas_ihs = "---"

.         qui eststo

.         
.         
.         
. ********************************************
. ** log(re78), dummy treat, log(re75)
. ********************************************
. est use "results/log_log"

.         
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[lnre75] 

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_lnre78_re75

.         qui estadd local semielas =  e_lnre78_treat_exp

.         qui estadd local semielas_ihs = "---"

.         qui eststo

.         
.         
. 
. ******************************************      
. * write table to file   
. ******************************************
. #delimit ;
delimiter now ;
. esttab using "results/reg1.tex", replace nonotes substitute(\_ _)
> nogaps compress b(4) se(4) star(* 0.10 ** 0.05 *** 0.01) 
> eqlabel(none) nodep label noobs nomtitles
> mgroups("$\text{Earnings}_{78}$" "$\text{arcsinh(Earnings}_{78}\text{)}$" 
> "$\ln\text{(Earnings}_{78}+1\text{)}$", pattern(1 0 1 0 1 0) 
> prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
> scalars("N Observations"
>                 "mean78t $\text{Earnings}_{78}\text{ (treatment mean)}$"
>                 "mean78c $\text{Earnings}_{78}\text{ (control mean)}$"
>                 "mean75t $\text{Earnings}_{75}\text{ (treatment mean)}$"
>                 "mean75c $\text{Earnings}_{75}\text{ (control mean)}$"
>                 "a $\phantom{whitespace}$"
>                 "b $\text{\textbf{Calculated (semi-)elasticities:}}$"
>                 "elas $\xi(\text{Earnings}_{78},\text{ Earnings}_{75})$"
>                 "semielas $\tilde{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "semielas_ihs $\bar{P}(\text{Earnings}_{78},\text{ NSW})/100$",
>                 sfmt(%9.3f)) 
>                 ;
invalid syntax
r(198);

end of do-file

r(198);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_re78_re75

.         qui estadd local semielas = e_re78_treat

.         qui estadd local semielas_ihs = "---"   

.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_re78

. 
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_re78_ihsre75

.         qui estadd local semielas = e_re78_treat

.         qui estadd local semielas_ihs = "---"

.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         (sinh(_b[_cons] + _b[re75]*mean_re75t + _b[treat] + mean_res) 
>         / sinh(_b[_cons] + _b[re75]*mean_re75c + mean_res)) - 1 ;

.         #delimit cr
delimiter now cr
.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_ihsre78_re75

.         qui estadd local semielas =  e_ihsre78_treat_exp

.         qui estadd local semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
. ********************************************
. ** IHS(re78), dummy treat, asinh(re75)
. ********************************************
. est use "results/ihs_ihs"

. 
.         * save predicted ihs(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         sum yhat if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         local enum = mean_re75*sqrt(mean_re78^2+1)

.         local eden = mean_re78*sqrt(mean_re75^2+1)

.         scalar e_ihsre78_ihsre75 = _b[ihsre75]*(`enum'/`eden')

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * semi-elasticity using exact calculations
.         scalar e_ihsre78_treat_exact = (sinh(mean_yhat_t) / sinh(mean_yhat_c)) - 1

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_ihsre78_ihsre75

.         qui estadd local semielas = e_ihsre78_treat_exp

.         qui estadd local semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
.         
. ********************************************
. ** log(re78), dummy treat, linear re75
. ********************************************
. est use "results/log_lin"

.                 
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[re75] * mean_re75

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_lnre78_re75

.         qui estadd local semielas =  e_lnre78_treat_exp

.         qui estadd local semielas_ihs = "---"

.         qui eststo

.         
.         
.         
. ********************************************
. ** log(re78), dummy treat, log(re75)
. ********************************************
. est use "results/log_log"

.         
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[lnre75] 

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_lnre78_re75

.         qui estadd local semielas =  e_lnre78_treat_exp

.         qui estadd local semielas_ihs = "---"

.         qui eststo

.         
.         
. 
. ******************************************      
. * write table to file   
. ******************************************
. #delimit ;
delimiter now ;
. esttab using "results/reg1.tex", replace nonotes substitute(\_ _)
> nogaps compress b(4) se(4) star(* 0.10 ** 0.05 *** 0.01) 
> eqlabel(none) nodep label noobs nomtitles
> mgroups("$\text{Earnings}_{78}$" "$\text{arcsinh(Earnings}_{78}\text{)}$" 
> "$\ln\text{(Earnings}_{78}+1\text{)}$", pattern(1 0 1 0 1 0) 
> prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
> scalars("N Observations"
>                 "mean78t $\text{Earnings}_{78}\text{ (treatment mean)}$"
>                 "mean78c $\text{Earnings}_{78}\text{ (control mean)}$"
>                 "mean75t $\text{Earnings}_{75}\text{ (treatment mean)}$"
>                 "mean75c $\text{Earnings}_{75}\text{ (control mean)}$"
>                 "a $\phantom{whitespace}$"
>                 "b $\text{\textbf{Calculated (semi-)elasticities:}}$"
>                 "elas $\xi(\text{Earnings}_{78},\text{ Earnings}_{75})$"
>                 "semielas $\tilde{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "semielas_ihs $\bar{P}(\text{Earnings}_{78},\text{ NSW})/100$")
>                 sfmt(%9.3f);
(output written to results/reg1.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. *log close
. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_re78_re75

.         qui estadd local semielas = e_re78_treat

.         qui estadd local semielas_ihs = "---"   

.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_re78

. 
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_re78_ihsre75

.         qui estadd local semielas = e_re78_treat

.         qui estadd local semielas_ihs = "---"

.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         (sinh(_b[_cons] + _b[re75]*mean_re75t + _b[treat] + mean_res) 
>         / sinh(_b[_cons] + _b[re75]*mean_re75c + mean_res)) - 1 ;

.         #delimit cr
delimiter now cr
.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_ihsre78_re75

.         qui estadd local semielas =  e_ihsre78_treat_exp

.         qui estadd local semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
. ********************************************
. ** IHS(re78), dummy treat, asinh(re75)
. ********************************************
. est use "results/ihs_ihs"

. 
.         * save predicted ihs(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         sum yhat if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         local enum = mean_re75*sqrt(mean_re78^2+1)

.         local eden = mean_re78*sqrt(mean_re75^2+1)

.         scalar e_ihsre78_ihsre75 = _b[ihsre75]*(`enum'/`eden')

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * semi-elasticity using exact calculations
.         scalar e_ihsre78_treat_exact = (sinh(mean_yhat_t) / sinh(mean_yhat_c)) - 1

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_ihsre78_ihsre75

.         qui estadd local semielas = e_ihsre78_treat_exp

.         qui estadd local semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
.         
. ********************************************
. ** log(re78), dummy treat, linear re75
. ********************************************
. est use "results/log_lin"

.                 
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[re75] * mean_re75

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_lnre78_re75

.         qui estadd local semielas =  e_lnre78_treat_exp

.         qui estadd local semielas_ihs = "---"

.         qui eststo

.         
.         
.         
. ********************************************
. ** log(re78), dummy treat, log(re75)
. ********************************************
. est use "results/log_log"

.         
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[lnre75] 

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd local mean75t = mean_re75t

.         qui estadd local mean78t = mean_re78t

.         qui estadd local mean75c = mean_re75c

.         qui estadd local mean78c = mean_re78c

.         qui estadd local elas = e_lnre78_re75

.         qui estadd local semielas =  e_lnre78_treat_exp

.         qui estadd local semielas_ihs = "---"

.         qui eststo

.         
.         
. 
. ******************************************      
. * write table to file   
. ******************************************
. #delimit ;
delimiter now ;
. esttab using "results/reg1.tex", replace nonotes substitute(\_ _)
> nogaps compress b(a3) se(a3) star(* 0.10 ** 0.05 *** 0.01) 
> eqlabel(none) nodep label noobs nomtitles
> mgroups("$\text{Earnings}_{78}$" "$\text{arcsinh(Earnings}_{78}\text{)}$" 
> "$\ln\text{(Earnings}_{78}+1\text{)}$", pattern(1 0 1 0 1 0) 
> prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
> scalars("N Observations"
>                 "mean78t $\text{Earnings}_{78}\text{ (treatment mean)}$"
>                 "mean78c $\text{Earnings}_{78}\text{ (control mean)}$"
>                 "mean75t $\text{Earnings}_{75}\text{ (treatment mean)}$"
>                 "mean75c $\text{Earnings}_{75}\text{ (control mean)}$"
>                 "a $\phantom{whitespace}$"
>                 "b $\text{\textbf{Calculated (semi-)elasticities:}}$"
>                 "elas $\xi(\text{Earnings}_{78},\text{ Earnings}_{75})$"
>                 "semielas $\tilde{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "semielas_ihs $\bar{P}(\text{Earnings}_{78},\text{ NSW})/100$")
>                 sfmt(%9.3f);
(output written to results/reg1.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. *log close
. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_re75

.         qui estadd scalar semielas = e_re78_treat

.         qui estadd scalar semielas_ihs = "---"  
type mismatch
r(109);

end of do-file

r(109);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_re75

.         qui estadd scalar semielas = e_re78_treat

.         qui estadd scalar semielas_ihs = "---"  
type mismatch
r(109);

end of do-file

r(109);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_re75

.         qui estadd scalar semielas = e_re78_treat

.         qui estadd scalar semielas_ihs = .

.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_re78

. 
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_ihsre75

.         qui estadd scalar semielas = e_re78_treat

.         qui estadd scalar semielas_ihs = .

.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         (sinh(_b[_cons] + _b[re75]*mean_re75t + _b[treat] + mean_res) 
>         / sinh(_b[_cons] + _b[re75]*mean_re75c + mean_res)) - 1 ;

.         #delimit cr
delimiter now cr
.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_re75

.         qui estadd scalar semielas =  e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
. ********************************************
. ** IHS(re78), dummy treat, asinh(re75)
. ********************************************
. est use "results/ihs_ihs"

. 
.         * save predicted ihs(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         sum yhat if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         local enum = mean_re75*sqrt(mean_re78^2+1)

.         local eden = mean_re78*sqrt(mean_re75^2+1)

.         scalar e_ihsre78_ihsre75 = _b[ihsre75]*(`enum'/`eden')

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * semi-elasticity using exact calculations
.         scalar e_ihsre78_treat_exact = (sinh(mean_yhat_t) / sinh(mean_yhat_c)) - 1

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_ihsre75

.         qui estadd scalar semielas = e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
.         
. ********************************************
. ** log(re78), dummy treat, linear re75
. ********************************************
. est use "results/log_lin"

.                 
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[re75] * mean_re75

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui estadd scalar semielas_ihs = .

.         qui eststo

.         
.         
.         
. ********************************************
. ** log(re78), dummy treat, log(re75)
. ********************************************
. est use "results/log_log"

.         
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[lnre75] 

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui estadd scalar semielas_ihs = .

.         qui eststo

.         
.         
. 
. ******************************************      
. * write table to file   
. ******************************************
. #delimit ;
delimiter now ;
. esttab using "results/reg1.tex", replace nonotes substitute(\_ _)
> nogaps compress b(a3) se(a3) star(* 0.10 ** 0.05 *** 0.01) 
> eqlabel(none) nodep label noobs nomtitles
> mgroups("$\text{Earnings}_{78}$" "$\text{arcsinh(Earnings}_{78}\text{)}$" 
> "$\ln\text{(Earnings}_{78}+1\text{)}$", pattern(1 0 1 0 1 0) 
> prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
> scalars("N Observations"
>                 "mean78t $\text{Earnings}_{78}\text{ (treatment mean)}$"
>                 "mean78c $\text{Earnings}_{78}\text{ (control mean)}$"
>                 "mean75t $\text{Earnings}_{75}\text{ (treatment mean)}$"
>                 "mean75c $\text{Earnings}_{75}\text{ (control mean)}$"
>                 "a $\phantom{whitespace}$"
>                 "b $\text{\textbf{Calculated (semi-)elasticities:}}$"
>                 "elas $\xi(\text{Earnings}_{78},\text{ Earnings}_{75})$"
>                 "semielas $\tilde{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "semielas_ihs $\bar{P}(\text{Earnings}_{78},\text{ NSW})/100$")
>                 sfmt(%9.3f);
(output written to results/reg1.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. *log close
. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_re75

.         qui estadd scalar semielas = e_re78_treat

.         *qui estadd scalar semielas_ihs = .
.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_re78

. 
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_ihsre75

.         qui estadd scalar semielas = e_re78_treat

.         *qui estadd scalar semielas_ihs = .
.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         (sinh(_b[_cons] + _b[re75]*mean_re75t + _b[treat] + mean_res) 
>         / sinh(_b[_cons] + _b[re75]*mean_re75c + mean_res)) - 1 ;

.         #delimit cr
delimiter now cr
.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_re75

.         qui estadd scalar semielas =  e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
. ********************************************
. ** IHS(re78), dummy treat, asinh(re75)
. ********************************************
. est use "results/ihs_ihs"

. 
.         * save predicted ihs(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         sum yhat if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         local enum = mean_re75*sqrt(mean_re78^2+1)

.         local eden = mean_re78*sqrt(mean_re75^2+1)

.         scalar e_ihsre78_ihsre75 = _b[ihsre75]*(`enum'/`eden')

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * semi-elasticity using exact calculations
.         scalar e_ihsre78_treat_exact = (sinh(mean_yhat_t) / sinh(mean_yhat_c)) - 1

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_ihsre75

.         qui estadd scalar semielas = e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
.         
. ********************************************
. ** log(re78), dummy treat, linear re75
. ********************************************
. est use "results/log_lin"

.                 
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[re75] * mean_re75

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         *qui estadd scalar semielas_ihs = .
.         qui eststo

.         
.         
.         
. ********************************************
. ** log(re78), dummy treat, log(re75)
. ********************************************
. est use "results/log_log"

.         
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[lnre75] 

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         *qui estadd scalar semielas_ihs = .
.         qui eststo

.         
.         
. 
. ******************************************      
. * write table to file   
. ******************************************
. #delimit ;
delimiter now ;
. esttab using "results/reg1.tex", replace nonotes substitute(\_ _)
> nogaps compress b(a3) se(a3) star(* 0.10 ** 0.05 *** 0.01) 
> eqlabel(none) nodep label noobs nomtitles
> mgroups("$\text{Earnings}_{78}$" "$\text{arcsinh(Earnings}_{78}\text{)}$" 
> "$\ln\text{(Earnings}_{78}+1\text{)}$", pattern(1 0 1 0 1 0) 
> prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
> scalars("N Observations"
>                 "mean78t $\text{Earnings}_{78}\text{ (treatment mean)}$"
>                 "mean78c $\text{Earnings}_{78}\text{ (control mean)}$"
>                 "mean75t $\text{Earnings}_{75}\text{ (treatment mean)}$"
>                 "mean75c $\text{Earnings}_{75}\text{ (control mean)}$"
>                 "a $\phantom{whitespace}$"
>                 "b $\text{\textbf{Calculated (semi-)elasticities:}}$"
>                 "elas $\xi(\text{Earnings}_{78},\text{ Earnings}_{75})$"
>                 "semielas $\tilde{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "semielas_ihs $\bar{P}(\text{Earnings}_{78},\text{ NSW})/100$")
>                 sfmt(%9.3f);
(output written to results/reg1.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. *log close
. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_re75

.         qui estadd scalar semielas = e_re78_treat

.         *qui estadd scalar semielas_ihs = .
.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_re78

. 
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_ihsre75

.         qui estadd scalar semielas = e_re78_treat

.         *qui estadd scalar semielas_ihs = .
.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         (sinh(_b[_cons] + _b[re75]*mean_re75t + _b[treat] + mean_res) 
>         / sinh(_b[_cons] + _b[re75]*mean_re75c + mean_res)) - 1 ;

.         #delimit cr
delimiter now cr
.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_re75

.         qui estadd scalar semielas =  e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
. ********************************************
. ** IHS(re78), dummy treat, asinh(re75)
. ********************************************
. est use "results/ihs_ihs"

. 
.         * save predicted ihs(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         sum yhat if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         local enum = mean_re75*sqrt(mean_re78^2+1)

.         local eden = mean_re78*sqrt(mean_re75^2+1)

.         scalar e_ihsre78_ihsre75 = _b[ihsre75]*(`enum'/`eden')

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * semi-elasticity using exact calculations
.         scalar e_ihsre78_treat_exact = (sinh(mean_yhat_t) / sinh(mean_yhat_c)) - 1

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_ihsre75

.         qui estadd scalar semielas = e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
.         
. ********************************************
. ** log(re78), dummy treat, linear re75
. ********************************************
. est use "results/log_lin"

.                 
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[re75] * mean_re75

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         *qui estadd scalar semielas_ihs = .
.         qui eststo

.         
.         
.         
. ********************************************
. ** log(re78), dummy treat, log(re75)
. ********************************************
. est use "results/log_log"

.         
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[lnre75] 

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         *qui estadd scalar semielas_ihs = .
.         qui eststo

.         
.         
. 
. ******************************************      
. * write table to file   
. ******************************************
. #delimit ;
delimiter now ;
. esttab using "results/reg1.tex", replace nonotes substitute(\_ _)
> nogaps compress b(a3) se(a3) star(* 0.10 ** 0.05 *** 0.01) 
> eqlabel(none) nodep label noobs nomtitles
> mgroups("$\text{Earnings}_{78}$" "$\text{arcsinh(Earnings}_{78}\text{)}$" 
> "$\ln\text{(Earnings}_{78}+1\text{)}$", pattern(1 0 1 0 1 0) 
> prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
> scalars("N Observations"
>                 "mean78t $\text{Earnings}_{78}\text{ (treatment mean)}$"
>                 "mean78c $\text{Earnings}_{78}\text{ (control mean)}$"
>                 "mean75t $\text{Earnings}_{75}\text{ (treatment mean)}$"
>                 "mean75c $\text{Earnings}_{75}\text{ (control mean)}$"
>                 "a $\phantom{whitespace}$"
>                 "b $\text{\textbf{Calculated (semi-)elasticities:}}$"
>                 "elas $\xi(\text{Earnings}_{78},\text{ Earnings}_{75})$"
>                 "semielas $\tilde{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "semielas_ihs $\bar{P}(\text{Earnings}_{78},\text{ NSW})/100$")
>                 sfmt(a3);
(output written to results/reg1.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. *log close
. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions + save estimates
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. estpost

Linear regression                               Number of obs     =        445
                                                F(   2,    442)   =       4.43
                                                Prob > F          =     0.0125
                                                R-squared         =     0.0196
                                                Adj R-squared     =     0.0152
                                                Root MSE          =     4.0095
------------------------------------------------------------------------------
      lnre78 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       treat |   .9602777   .3872079     2.48   0.014     .1992803    1.721275
      lnre75 |   .0722161   .0510286     1.42   0.158    -.0280727    .1725049
       _cons |    5.32306   .2775518    19.18   0.000     4.777575    5.868545
------------------------------------------------------------------------------

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. esttab

------------------------------------------------------------------------------------------------------------
                      (1)             (2)             (3)             (4)             (5)             (6)   
                     re78            re78         ihsre78         ihsre78          lnre78          lnre78   
------------------------------------------------------------------------------------------------------------
treat              1750.2**        1694.3**         1.056*          1.034*          0.982*          0.960*  
                   (2.77)          (2.67)          (2.54)          (2.48)          (2.55)          (2.48)   

re75                0.167                        0.000112                        0.000105                   
                   (1.68)                          (1.72)                          (1.74)                   

ihsre75                             135.5                          0.0705                                   
                                   (1.76)                          (1.39)                                   

lnre75                                                                                             0.0722   
                                                                                                   (1.42)   

_cons              4343.6***       4197.8***        5.803***        5.759***        5.365***        5.323***
                  (10.19)          (9.23)         (20.72)         (19.24)         (20.64)         (19.18)   
------------------------------------------------------------------------------------------------------------
N                     445             445             445             445             445             445   
------------------------------------------------------------------------------------------------------------
t statistics in parentheses
* p<0.05, ** p<0.01, *** p<0.001

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. esttab, label

--------------------------------------------------------------------------------------------------------------------
                              (1)             (2)             (3)             (4)             (5)             (6)   
                     $\text{Ear~$    $\text{Ear~$    $\text{arc~e    $\text{arc~e    $\ln(\text~$    $\ln(\text~$   
--------------------------------------------------------------------------------------------------------------------
NSW                        1750.2**        1694.3**         1.056*          1.034*          0.982*          0.960*  
                           (2.77)          (2.67)          (2.54)          (2.48)          (2.55)          (2.48)   

$\text{Earnings}_{~$        0.167                        0.000112                        0.000105                   
                           (1.68)                          (1.72)                          (1.74)                   

$\text{arcsinh(Ear~e                        135.5                          0.0705                                   
                                           (1.76)                          (1.39)                                   

$\ln(\text{Earning~$                                                                                       0.0722   
                                                                                                           (1.42)   

Constant                   4343.6***       4197.8***        5.803***        5.759***        5.365***        5.323***
                          (10.19)          (9.23)         (20.72)         (19.24)         (20.64)         (19.18)   
--------------------------------------------------------------------------------------------------------------------
Observations                  445             445             445             445             445             445   
--------------------------------------------------------------------------------------------------------------------
t statistics in parentheses
* p<0.05, ** p<0.01, *** p<0.001

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. reg re78 treat re75

      Source |       SS           df       MS      Number of obs   =       445
-------------+----------------------------------   F(2, 442)       =      5.45
       Model |   470256643         2   235128321   Prob > F        =    0.0046
    Residual |  1.9055e+10       442  43111742.4   R-squared       =    0.0241
-------------+----------------------------------   Adj R-squared   =    0.0197
       Total |  1.9526e+10       444  43976681.9   Root MSE        =      6566

------------------------------------------------------------------------------
        re78 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       treat |   1750.151   632.0914     2.77   0.006     507.8728    2992.429
        re75 |   .1666683   .0989778     1.68   0.093    -.0278574    .3611939
       _cons |   4343.648   426.0734    10.19   0.000     3506.266    5181.029
------------------------------------------------------------------------------

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. margins, eydx(re75) atmeans

Conditional marginal effects                    Number of obs     =        445
Model VCE    : OLS

Expression   : Linear prediction, predict()
ey/dx w.r.t. : re75
at           : treat           =    .4157303 (mean)
               re75            =    1377.138 (mean)

------------------------------------------------------------------------------
             |            Delta-method
             |      ey/dx   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        re75 |   .0000314   .0000188     1.68   0.094    -5.43e-06    .0000683
------------------------------------------------------------------------------

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. margins, eydx(treat) atmeans

Conditional marginal effects                    Number of obs     =        445
Model VCE    : OLS

Expression   : Linear prediction, predict()
ey/dx w.r.t. : treat
at           : treat           =    .4157303 (mean)
               re75            =    1377.138 (mean)

------------------------------------------------------------------------------
             |            Delta-method
             |      ey/dx   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       treat |   .3301696   .1208111     2.73   0.007      .092734    .5676051
------------------------------------------------------------------------------

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

.         scalar e_re78_treat = _b[treat] / mean_yhat

.         dis e_re78_treat
.33016958

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

.         disp _b[treat] / mean_re78
mean_re78 not found
r(111);

end of do-file

r(111);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions + save estimates
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. * view results
. esttab

------------------------------------------------------------------------------------------------------------
                      (1)             (2)             (3)             (4)             (5)             (6)   
                     re78            re78         ihsre78         ihsre78          lnre78          lnre78   
------------------------------------------------------------------------------------------------------------
treat              1750.2**        1694.3**         1.056*          1.034*          0.982*          0.960*  
                   (2.77)          (2.67)          (2.54)          (2.48)          (2.55)          (2.48)   

re75                0.167                        0.000112                        0.000105                   
                   (1.68)                          (1.72)                          (1.74)                   

ihsre75                             135.5                          0.0705                                   
                                   (1.76)                          (1.39)                                   

lnre75                                                                                             0.0722   
                                                                                                   (1.42)   

_cons              4343.6***       4197.8***        5.803***        5.759***        5.365***        5.323***
                  (10.19)          (9.23)         (20.72)         (19.24)         (20.64)         (19.18)   
------------------------------------------------------------------------------------------------------------
N                     445             445             445             445             445             445   
------------------------------------------------------------------------------------------------------------
t statistics in parentheses
* p<0.05, ** p<0.01, *** p<0.001

. 
. 
. reg re78 treat re75

      Source |       SS           df       MS      Number of obs   =       445
-------------+----------------------------------   F(2, 442)       =      5.45
       Model |   470256643         2   235128321   Prob > F        =    0.0046
    Residual |  1.9055e+10       442  43111742.4   R-squared       =    0.0241
-------------+----------------------------------   Adj R-squared   =    0.0197
       Total |  1.9526e+10       444  43976681.9   Root MSE        =      6566

------------------------------------------------------------------------------
        re78 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       treat |   1750.151   632.0914     2.77   0.006     507.8728    2992.429
        re75 |   .1666683   .0989778     1.68   0.093    -.0278574    .3611939
       _cons |   4343.648   426.0734    10.19   0.000     3506.266    5181.029
------------------------------------------------------------------------------

. margins, eydx(treat) atmeans

Conditional marginal effects                    Number of obs     =        445
Model VCE    : OLS

Expression   : Linear prediction, predict()
ey/dx w.r.t. : treat
at           : treat           =    .4157303 (mean)
               re75            =    1377.138 (mean)

------------------------------------------------------------------------------
             |            Delta-method
             |      ey/dx   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       treat |   .3301696   .1208111     2.73   0.007      .092734    .5676051
------------------------------------------------------------------------------

. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * predict yhat
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_yhat

.         dis e_re78_treat
.33016958

.         
.         disp _b[treat] / mean_re78
.33016958

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions + save estimates
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. * view results
. esttab

------------------------------------------------------------------------------------------------------------
                      (1)             (2)             (3)             (4)             (5)             (6)   
                     re78            re78         ihsre78         ihsre78          lnre78          lnre78   
------------------------------------------------------------------------------------------------------------
treat              1750.2**        1694.3**         1.056*          1.034*          0.982*          0.960*  
                   (2.77)          (2.67)          (2.54)          (2.48)          (2.55)          (2.48)   

re75                0.167                        0.000112                        0.000105                   
                   (1.68)                          (1.72)                          (1.74)                   

ihsre75                             135.5                          0.0705                                   
                                   (1.76)                          (1.39)                                   

lnre75                                                                                             0.0722   
                                                                                                   (1.42)   

_cons              4343.6***       4197.8***        5.803***        5.759***        5.365***        5.323***
                  (10.19)          (9.23)         (20.72)         (19.24)         (20.64)         (19.18)   
------------------------------------------------------------------------------------------------------------
N                     445             445             445             445             445             445   
------------------------------------------------------------------------------------------------------------
t statistics in parentheses
* p<0.05, ** p<0.01, *** p<0.001

. 
. 
. reg re78 treat re75

      Source |       SS           df       MS      Number of obs   =       445
-------------+----------------------------------   F(2, 442)       =      5.45
       Model |   470256643         2   235128321   Prob > F        =    0.0046
    Residual |  1.9055e+10       442  43111742.4   R-squared       =    0.0241
-------------+----------------------------------   Adj R-squared   =    0.0197
       Total |  1.9526e+10       444  43976681.9   Root MSE        =      6566

------------------------------------------------------------------------------
        re78 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       treat |   1750.151   632.0914     2.77   0.006     507.8728    2992.429
        re75 |   .1666683   .0989778     1.68   0.093    -.0278574    .3611939
       _cons |   4343.648   426.0734    10.19   0.000     3506.266    5181.029
------------------------------------------------------------------------------

. margins, eydx(treat) atmeans

Conditional marginal effects                    Number of obs     =        445
Model VCE    : OLS

Expression   : Linear prediction, predict()
ey/dx w.r.t. : treat
at           : treat           =    .4157303 (mean)
               re75            =    1377.138 (mean)

------------------------------------------------------------------------------
             |            Delta-method
             |      ey/dx   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       treat |   .3301696   .1208111     2.73   0.007      .092734    .5676051
------------------------------------------------------------------------------

. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * predict yhat
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_yhat

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_re75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * predict yhat
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_yhat

. 
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_ihsre75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         (sinh(_b[_cons] + _b[re75]*mean_re75t + _b[treat] + mean_res) 
>         / sinh(_b[_cons] + _b[re75]*mean_re75c + mean_res)) - 1 ;

.         #delimit cr
delimiter now cr
.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_re75

.         qui estadd scalar semielas =  e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
. ********************************************
. ** IHS(re78), dummy treat, asinh(re75)
. ********************************************
. est use "results/ihs_ihs"

. 
.         * save predicted ihs(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         sum yhat if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         local enum = mean_re75*sqrt(mean_re78^2+1)

.         local eden = mean_re78*sqrt(mean_re75^2+1)

.         scalar e_ihsre78_ihsre75 = _b[ihsre75]*(`enum'/`eden')

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * semi-elasticity using exact calculations
.         scalar e_ihsre78_treat_exact = (sinh(mean_yhat_t) / sinh(mean_yhat_c)) - 1

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_ihsre75

.         qui estadd scalar semielas = e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
.         
. ********************************************
. ** log(re78), dummy treat, linear re75
. ********************************************
. est use "results/log_lin"

.                 
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[re75] * mean_re75

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui eststo

.         
.         
.         
. ********************************************
. ** log(re78), dummy treat, log(re75)
. ********************************************
. est use "results/log_log"

.         
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[lnre75] 

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui eststo

.         
.         
. 
. ******************************************      
. * write table to file   
. ******************************************
. #delimit ;
delimiter now ;
. esttab using "results/reg1.tex", replace nonotes substitute(\_ _)
> nogaps compress b(a3) se(a3) star(* 0.10 ** 0.05 *** 0.01) 
> eqlabel(none) nodep label noobs nomtitles
> mgroups("$\text{Earnings}_{78}$" "$\text{arcsinh(Earnings}_{78}\text{)}$" 
> "$\ln\text{(Earnings}_{78}+1\text{)}$", pattern(1 0 1 0 1 0) 
> prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
> scalars("N Observations"
>                 "mean78t $\text{Earnings}_{78}\text{ (treatment mean)}$"
>                 "mean78c $\text{Earnings}_{78}\text{ (control mean)}$"
>                 "mean75t $\text{Earnings}_{75}\text{ (treatment mean)}$"
>                 "mean75c $\text{Earnings}_{75}\text{ (control mean)}$"
>                 "a $\phantom{whitespace}$"
>                 "b $\text{\textbf{Calculated (semi-)elasticities:}}$"
>                 "elas $\xi(\text{Earnings}_{78},\text{ Earnings}_{75})$"
>                 "semielas $\tilde{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "semielas_ihs $\bar{P}(\text{Earnings}_{78},\text{ NSW})/100$")
>                 sfmt(a3);
(output written to results/reg1.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. *log close
. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions + save estimates
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. * view results
. esttab

------------------------------------------------------------------------------------------------------------
                      (1)             (2)             (3)             (4)             (5)             (6)   
                     re78            re78         ihsre78         ihsre78          lnre78          lnre78   
------------------------------------------------------------------------------------------------------------
treat              1750.2**        1694.3**         1.056*          1.034*          0.982*          0.960*  
                   (2.77)          (2.67)          (2.54)          (2.48)          (2.55)          (2.48)   

re75                0.167                        0.000112                        0.000105                   
                   (1.68)                          (1.72)                          (1.74)                   

ihsre75                             135.5                          0.0705                                   
                                   (1.76)                          (1.39)                                   

lnre75                                                                                             0.0722   
                                                                                                   (1.42)   

_cons              4343.6***       4197.8***        5.803***        5.759***        5.365***        5.323***
                  (10.19)          (9.23)         (20.72)         (19.24)         (20.64)         (19.18)   
------------------------------------------------------------------------------------------------------------
N                     445             445             445             445             445             445   
------------------------------------------------------------------------------------------------------------
t statistics in parentheses
* p<0.05, ** p<0.01, *** p<0.001

. 
. 
. reg re78 treat re75

      Source |       SS           df       MS      Number of obs   =       445
-------------+----------------------------------   F(2, 442)       =      5.45
       Model |   470256643         2   235128321   Prob > F        =    0.0046
    Residual |  1.9055e+10       442  43111742.4   R-squared       =    0.0241
-------------+----------------------------------   Adj R-squared   =    0.0197
       Total |  1.9526e+10       444  43976681.9   Root MSE        =      6566

------------------------------------------------------------------------------
        re78 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       treat |   1750.151   632.0914     2.77   0.006     507.8728    2992.429
        re75 |   .1666683   .0989778     1.68   0.093    -.0278574    .3611939
       _cons |   4343.648   426.0734    10.19   0.000     3506.266    5181.029
------------------------------------------------------------------------------

. margins, eydx(treat) atmeans

Conditional marginal effects                    Number of obs     =        445
Model VCE    : OLS

Expression   : Linear prediction, predict()
ey/dx w.r.t. : treat
at           : treat           =    .4157303 (mean)
               re75            =    1377.138 (mean)

------------------------------------------------------------------------------
             |            Delta-method
             |      ey/dx   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       treat |   .3301696   .1208111     2.73   0.007      .092734    .5676051
------------------------------------------------------------------------------

. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_re75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_re78

. 
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_ihsre75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         
.         * save predicted asinh(y) by treatment status
.         qui predict yhat_t if treat==1, xb

.         sum yhat_t, meanonly

.         scalar mean_yhat_t = r(mean)

.         qui predict yhat_c if treat==0, xb

.         sum yhat_c, meanonly

.         scalar mean_yhat_c = r(mean)

.         
.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         (sinh(mean_yhat_t) / sinh(mean_yhat_c) - 1 ;
too few ')' or ']'
r(132);

end of do-file

r(132);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions + save estimates
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. * view results
. esttab

------------------------------------------------------------------------------------------------------------
                      (1)             (2)             (3)             (4)             (5)             (6)   
                     re78            re78         ihsre78         ihsre78          lnre78          lnre78   
------------------------------------------------------------------------------------------------------------
treat              1750.2**        1694.3**         1.056*          1.034*          0.982*          0.960*  
                   (2.77)          (2.67)          (2.54)          (2.48)          (2.55)          (2.48)   

re75                0.167                        0.000112                        0.000105                   
                   (1.68)                          (1.72)                          (1.74)                   

ihsre75                             135.5                          0.0705                                   
                                   (1.76)                          (1.39)                                   

lnre75                                                                                             0.0722   
                                                                                                   (1.42)   

_cons              4343.6***       4197.8***        5.803***        5.759***        5.365***        5.323***
                  (10.19)          (9.23)         (20.72)         (19.24)         (20.64)         (19.18)   
------------------------------------------------------------------------------------------------------------
N                     445             445             445             445             445             445   
------------------------------------------------------------------------------------------------------------
t statistics in parentheses
* p<0.05, ** p<0.01, *** p<0.001

. 
. 
. reg re78 treat re75

      Source |       SS           df       MS      Number of obs   =       445
-------------+----------------------------------   F(2, 442)       =      5.45
       Model |   470256643         2   235128321   Prob > F        =    0.0046
    Residual |  1.9055e+10       442  43111742.4   R-squared       =    0.0241
-------------+----------------------------------   Adj R-squared   =    0.0197
       Total |  1.9526e+10       444  43976681.9   Root MSE        =      6566

------------------------------------------------------------------------------
        re78 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       treat |   1750.151   632.0914     2.77   0.006     507.8728    2992.429
        re75 |   .1666683   .0989778     1.68   0.093    -.0278574    .3611939
       _cons |   4343.648   426.0734    10.19   0.000     3506.266    5181.029
------------------------------------------------------------------------------

. margins, eydx(treat) atmeans

Conditional marginal effects                    Number of obs     =        445
Model VCE    : OLS

Expression   : Linear prediction, predict()
ey/dx w.r.t. : treat
at           : treat           =    .4157303 (mean)
               re75            =    1377.138 (mean)

------------------------------------------------------------------------------
             |            Delta-method
             |      ey/dx   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       treat |   .3301696   .1208111     2.73   0.007      .092734    .5676051
------------------------------------------------------------------------------

. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_re75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_re78

. 
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_ihsre75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         
.         * save predicted asinh(y) by treatment status
.         qui predict yhat_t if treat==1, xb

.         sum yhat_t, meanonly

.         scalar mean_yhat_t = r(mean)

.         qui predict yhat_c if treat==0, xb

.         sum yhat_c, meanonly

.         scalar mean_yhat_c = r(mean)

.         
.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         [sinh(mean_yhat_t) / sinh(mean_yhat_c)] - 1 ;

.         #delimit cr
delimiter now cr
.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_re75

.         qui estadd scalar semielas =  e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
. ********************************************
. ** IHS(re78), dummy treat, asinh(re75)
. ********************************************
. est use "results/ihs_ihs"

. 
.         * save predicted ihs(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         sum yhat if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         local enum = mean_re75*sqrt(mean_re78^2+1)

.         local eden = mean_re78*sqrt(mean_re75^2+1)

.         scalar e_ihsre78_ihsre75 = _b[ihsre75]*(`enum'/`eden')

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * semi-elasticity using exact calculations
.         scalar e_ihsre78_treat_exact = (sinh(mean_yhat_t) / sinh(mean_yhat_c)) - 1

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_ihsre75

.         qui estadd scalar semielas = e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
.         
. ********************************************
. ** log(re78), dummy treat, linear re75
. ********************************************
. est use "results/log_lin"

.                 
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[re75] * mean_re75

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui eststo

.         
.         
.         
. ********************************************
. ** log(re78), dummy treat, log(re75)
. ********************************************
. est use "results/log_log"

.         
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[lnre75] 

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui eststo

.         
.         
. 
. ******************************************      
. * write table to file   
. ******************************************
. #delimit ;
delimiter now ;
. esttab using "results/reg1.tex", replace nonotes substitute(\_ _)
> nogaps compress b(a3) se(a3) star(* 0.10 ** 0.05 *** 0.01) 
> eqlabel(none) nodep label noobs nomtitles
> mgroups("$\text{Earnings}_{78}$" "$\text{arcsinh(Earnings}_{78}\text{)}$" 
> "$\ln\text{(Earnings}_{78}+1\text{)}$", pattern(1 0 1 0 1 0) 
> prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
> scalars("N Observations"
>                 "mean78t $\text{Earnings}_{78}\text{ (treatment mean)}$"
>                 "mean78c $\text{Earnings}_{78}\text{ (control mean)}$"
>                 "mean75t $\text{Earnings}_{75}\text{ (treatment mean)}$"
>                 "mean75c $\text{Earnings}_{75}\text{ (control mean)}$"
>                 "a $\phantom{whitespace}$"
>                 "b $\text{\textbf{Calculated (semi-)elasticities:}}$"
>                 "elas $\xi(\text{Earnings}_{78},\text{ Earnings}_{75})$"
>                 "semielas $\tilde{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "semielas_ihs $\bar{P}(\text{Earnings}_{78},\text{ NSW})/100$")
>                 sfmt(a3);
(output written to results/reg1.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. *log close
. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions + save estimates
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. * view results
. esttab

------------------------------------------------------------------------------------------------------------
                      (1)             (2)             (3)             (4)             (5)             (6)   
                     re78            re78         ihsre78         ihsre78          lnre78          lnre78   
------------------------------------------------------------------------------------------------------------
treat              1750.2**        1694.3**         1.056*          1.034*          0.982*          0.960*  
                   (2.77)          (2.67)          (2.54)          (2.48)          (2.55)          (2.48)   

re75                0.167                        0.000112                        0.000105                   
                   (1.68)                          (1.72)                          (1.74)                   

ihsre75                             135.5                          0.0705                                   
                                   (1.76)                          (1.39)                                   

lnre75                                                                                             0.0722   
                                                                                                   (1.42)   

_cons              4343.6***       4197.8***        5.803***        5.759***        5.365***        5.323***
                  (10.19)          (9.23)         (20.72)         (19.24)         (20.64)         (19.18)   
------------------------------------------------------------------------------------------------------------
N                     445             445             445             445             445             445   
------------------------------------------------------------------------------------------------------------
t statistics in parentheses
* p<0.05, ** p<0.01, *** p<0.001

. 
. 
. reg re78 treat re75

      Source |       SS           df       MS      Number of obs   =       445
-------------+----------------------------------   F(2, 442)       =      5.45
       Model |   470256643         2   235128321   Prob > F        =    0.0046
    Residual |  1.9055e+10       442  43111742.4   R-squared       =    0.0241
-------------+----------------------------------   Adj R-squared   =    0.0197
       Total |  1.9526e+10       444  43976681.9   Root MSE        =      6566

------------------------------------------------------------------------------
        re78 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       treat |   1750.151   632.0914     2.77   0.006     507.8728    2992.429
        re75 |   .1666683   .0989778     1.68   0.093    -.0278574    .3611939
       _cons |   4343.648   426.0734    10.19   0.000     3506.266    5181.029
------------------------------------------------------------------------------

. margins, eydx(treat) atmeans

Conditional marginal effects                    Number of obs     =        445
Model VCE    : OLS

Expression   : Linear prediction, predict()
ey/dx w.r.t. : treat
at           : treat           =    .4157303 (mean)
               re75            =    1377.138 (mean)

------------------------------------------------------------------------------
             |            Delta-method
             |      ey/dx   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       treat |   .3301696   .1208111     2.73   0.007      .092734    .5676051
------------------------------------------------------------------------------

. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_re75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_re78

. 
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_ihsre75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         
.         * save predicted asinh(y) by treatment status
.         qui predict yhat_t if treat==1, xb

.         sum yhat_t if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         qui predict yhat_c if treat==0, xb

.         sum yhat_c if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         
.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         [sinh(mean_yhat_t) / sinh(mean_yhat_c)] - 1 ;

.         #delimit cr
delimiter now cr
.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_re75

.         qui estadd scalar semielas =  e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
. ********************************************
. ** IHS(re78), dummy treat, asinh(re75)
. ********************************************
. est use "results/ihs_ihs"

. 
.         * save predicted ihs(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         sum yhat if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         local enum = mean_re75*sqrt(mean_re78^2+1)

.         local eden = mean_re78*sqrt(mean_re75^2+1)

.         scalar e_ihsre78_ihsre75 = _b[ihsre75]*(`enum'/`eden')

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * semi-elasticity using exact calculations
.         scalar e_ihsre78_treat_exact = (sinh(mean_yhat_t) / sinh(mean_yhat_c)) - 1

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_ihsre75

.         qui estadd scalar semielas = e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
.         
. ********************************************
. ** log(re78), dummy treat, linear re75
. ********************************************
. est use "results/log_lin"

.                 
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[re75] * mean_re75

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui eststo

.         
.         
.         
. ********************************************
. ** log(re78), dummy treat, log(re75)
. ********************************************
. est use "results/log_log"

.         
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[lnre75] 

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui eststo

.         
.         
. 
. ******************************************      
. * write table to file   
. ******************************************
. #delimit ;
delimiter now ;
. esttab using "results/reg1.tex", replace nonotes substitute(\_ _)
> nogaps compress b(a3) se(a3) star(* 0.10 ** 0.05 *** 0.01) 
> eqlabel(none) nodep label noobs nomtitles
> mgroups("$\text{Earnings}_{78}$" "$\text{arcsinh(Earnings}_{78}\text{)}$" 
> "$\ln\text{(Earnings}_{78}+1\text{)}$", pattern(1 0 1 0 1 0) 
> prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
> scalars("N Observations"
>                 "mean78t $\text{Earnings}_{78}\text{ (treatment mean)}$"
>                 "mean78c $\text{Earnings}_{78}\text{ (control mean)}$"
>                 "mean75t $\text{Earnings}_{75}\text{ (treatment mean)}$"
>                 "mean75c $\text{Earnings}_{75}\text{ (control mean)}$"
>                 "a $\phantom{whitespace}$"
>                 "b $\text{\textbf{Calculated (semi-)elasticities:}}$"
>                 "elas $\xi(\text{Earnings}_{78},\text{ Earnings}_{75})$"
>                 "semielas $\tilde{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "semielas_ihs $\bar{P}(\text{Earnings}_{78},\text{ NSW})/100$")
>                 sfmt(a3);
(output written to results/reg1.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. *log close
. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. reg ihsre78 treat re75

      Source |       SS           df       MS      Number of obs   =       445
-------------+----------------------------------   F(2, 442)       =      4.91
       Model |  182.933546         2   91.466773   Prob > F        =    0.0078
    Residual |   8234.0286       442   18.629024   R-squared       =    0.0217
-------------+----------------------------------   Adj R-squared   =    0.0173
       Total |  8416.96215       444  18.9571219   Root MSE        =    4.3161

------------------------------------------------------------------------------
     ihsre78 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       treat |   1.056334   .4155059     2.54   0.011     .2397216    1.872947
        re75 |   .0001122   .0000651     1.72   0.085    -.0000156    .0002401
       _cons |   5.802942   .2800797    20.72   0.000     5.252489    6.353396
------------------------------------------------------------------------------

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. reg ihsre78 treat re75

      Source |       SS           df       MS      Number of obs   =       445
-------------+----------------------------------   F(2, 442)       =      4.91
       Model |  182.933546         2   91.466773   Prob > F        =    0.0078
    Residual |   8234.0286       442   18.629024   R-squared       =    0.0217
-------------+----------------------------------   Adj R-squared   =    0.0173
       Total |  8416.96215       444  18.9571219   Root MSE        =    4.3161

------------------------------------------------------------------------------
     ihsre78 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       treat |   1.056334   .4155059     2.54   0.011     .2397216    1.872947
        re75 |   .0001122   .0000651     1.72   0.085    -.0000156    .0002401
       _cons |   5.802942   .2800797    20.72   0.000     5.252489    6.353396
------------------------------------------------------------------------------

.         * save predicted asinh(y)
.         capture drop yhat

.         predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         * save predicted asinh(y) by treatment status
.         predict yhat_t if treat==1, xb
variable yhat_t already defined
r(110);

end of do-file

r(110);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. reg ihsre78 treat re75

      Source |       SS           df       MS      Number of obs   =       445
-------------+----------------------------------   F(2, 442)       =      4.91
       Model |  182.933546         2   91.466773   Prob > F        =    0.0078
    Residual |   8234.0286       442   18.629024   R-squared       =    0.0217
-------------+----------------------------------   Adj R-squared   =    0.0173
       Total |  8416.96215       444  18.9571219   Root MSE        =    4.3161

------------------------------------------------------------------------------
     ihsre78 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       treat |   1.056334   .4155059     2.54   0.011     .2397216    1.872947
        re75 |   .0001122   .0000651     1.72   0.085    -.0000156    .0002401
       _cons |   5.802942   .2800797    20.72   0.000     5.252489    6.353396
------------------------------------------------------------------------------

.         * save predicted asinh(y)
.         capture drop yhat yhat_t yhat_c

.         predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         * save predicted asinh(y) by treatment status
.         predict yhat_t if treat==1, xb
(260 missing values generated)

.         sum yhat_t if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         predict yhat_c if treat==0, xb
(185 missing values generated)

.         sum yhat_c if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum mean_yhat*
variable mean_yhat* not found
r(111);

end of do-file

r(111);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum yhat*

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
        yhat |        445    6.396652    .6418821   5.802942   9.681043
      yhat_t |        185    7.031222    .3613032   6.859277   9.681043
      yhat_c |        260     5.94513    .3482542   5.802942    8.38787

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. disp mean_yhat_t - mean_yhat_c
1.0860923

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. disp mean_yhat_t - mean_yhat_c - 1
.08609233

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. disp mean_yhat_t / mean_yhat_c 
1.182686

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. disp mean_yhat_t / mean_yhat_c -1
.18268605

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. disp sinh(mean_yhat_t)
565.706

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. disp sinh(mean_yhat_c)
190.94322

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. disp sinh(mean_yhat_t) / sinh(mean_yhat_c)
2.9626923

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. disp mean_yhat_t / mean_yhat_c
1.182686

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. disp mean_yhat_t / mean_yhat_c - 1
.18268605

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. disp _sinh(mean_yhat_t) / sinh(mean_yhat_c) - 1
unknown function _sinh()
r(133);

end of do-file

r(133);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. disp sinh(mean_yhat_t) / sinh(mean_yhat_c) - 1
1.9626923

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. disp 0.5*(sinh(mean_yhat_t) / sinh(mean_yhat_c) - 1)
.98134614

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. disp sinh(mean_yhat_c + _b[treat]) / sinh(mean_yhat_c)
2.8758269

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. disp sinh(mean_yhat + _b[treat]) / sinh(mean_yhat)
2.8758166

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. disp sinh(mean_yhat + _b[treat]) / sinh(mean_yhat) -1
1.8758166

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. disp sinh(_b[treat]) -1
.26404072

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. disp sinh(_b[treat])/sinh(mean_yhat) -1
-.99578535

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions + save estimates
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. * view results
. esttab

------------------------------------------------------------------------------------------------------------
                      (1)             (2)             (3)             (4)             (5)             (6)   
                     re78            re78         ihsre78         ihsre78          lnre78          lnre78   
------------------------------------------------------------------------------------------------------------
treat              1750.2**        1694.3**         1.056*          1.034*          0.982*          0.960*  
                   (2.77)          (2.67)          (2.54)          (2.48)          (2.55)          (2.48)   

re75                0.167                        0.000112                        0.000105                   
                   (1.68)                          (1.72)                          (1.74)                   

ihsre75                             135.5                          0.0705                                   
                                   (1.76)                          (1.39)                                   

lnre75                                                                                             0.0722   
                                                                                                   (1.42)   

_cons              4343.6***       4197.8***        5.803***        5.759***        5.365***        5.323***
                  (10.19)          (9.23)         (20.72)         (19.24)         (20.64)         (19.18)   
------------------------------------------------------------------------------------------------------------
N                     445             445             445             445             445             445   
------------------------------------------------------------------------------------------------------------
t statistics in parentheses
* p<0.05, ** p<0.01, *** p<0.001

. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_re75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_re78

. 
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_ihsre75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         
.         * save predicted asinh(y) by treatment status
.         qui predict yhat_t if treat==1, xb

.         sum yhat_t if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         qui predict yhat_c if treat==0, xb

.         sum yhat_c if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         
.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         [sinh(mean_yhat_t) / sinh(mean_yhat_c)] - 1 ;

.         #delimit cr
delimiter now cr
.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_re75

.         qui estadd scalar semielas =  e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
. ********************************************
. ** IHS(re78), dummy treat, asinh(re75)
. ********************************************
. est use "results/ihs_ihs"

. 
.         * save predicted ihs(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         sum yhat if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         local e1 = sqrt(mean_re78^2+1) / mean_re78 

.         local e2 = mean_re75 / sqrt(mean_re75^2+1)

.         scalar e_ihsre78_ihsre75 = _b[ihsre75]*`e1'*`e2'

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * semi-elasticity using exact calculations
.         scalar e_ihsre78_treat_exact = (sinh(mean_yhat_t) / sinh(mean_yhat_c)) - 1

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_ihsre75

.         qui estadd scalar semielas = e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
.         
. ********************************************
. ** log(re78), dummy treat, linear re75
. ********************************************
. est use "results/log_lin"

.                 
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[re75] * mean_re75

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui eststo

.         
.         
.         
. ********************************************
. ** log(re78), dummy treat, log(re75)
. ********************************************
. est use "results/log_log"

.         
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[lnre75] 

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui eststo

.         
.         
. 
. ******************************************      
. * write table to file   
. ******************************************
. #delimit ;
delimiter now ;
. esttab using "results/reg1.tex", replace nonotes substitute(\_ _)
> nogaps compress b(a3) se(a3) star(* 0.10 ** 0.05 *** 0.01) 
> eqlabel(none) nodep label noobs nomtitles
> mgroups("$\text{Earnings}_{78}$" "$\text{arcsinh(Earnings}_{78}\text{)}$" 
> "$\ln\text{(Earnings}_{78}+1\text{)}$", pattern(1 0 1 0 1 0) 
> prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
> scalars("N Observations"
>                 "mean78t $\text{Earnings}_{78}\text{ (treatment mean)}$"
>                 "mean78c $\text{Earnings}_{78}\text{ (control mean)}$"
>                 "mean75t $\text{Earnings}_{75}\text{ (treatment mean)}$"
>                 "mean75c $\text{Earnings}_{75}\text{ (control mean)}$"
>                 "a $\phantom{whitespace}$"
>                 "b $\text{\textbf{Calculated (semi-)elasticities:}}$"
>                 "elas $\xi(\text{Earnings}_{78},\text{ Earnings}_{75})$"
>                 "semielas $\tilde{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "semielas_ihs $\bar{P}(\text{Earnings}_{78},\text{ NSW})/100$")
>                 sfmt(a3);
(output written to results/reg1.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. *log close
. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions + save estimates
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. * view results
. esttab

------------------------------------------------------------------------------------------------------------
                      (1)             (2)             (3)             (4)             (5)             (6)   
                     re78            re78         ihsre78         ihsre78          lnre78          lnre78   
------------------------------------------------------------------------------------------------------------
treat              1750.2**        1694.3**         1.056*          1.034*          0.982*          0.960*  
                   (2.77)          (2.67)          (2.54)          (2.48)          (2.55)          (2.48)   

re75                0.167                        0.000112                        0.000105                   
                   (1.68)                          (1.72)                          (1.74)                   

ihsre75                             135.5                          0.0705                                   
                                   (1.76)                          (1.39)                                   

lnre75                                                                                             0.0722   
                                                                                                   (1.42)   

_cons              4343.6***       4197.8***        5.803***        5.759***        5.365***        5.323***
                  (10.19)          (9.23)         (20.72)         (19.24)         (20.64)         (19.18)   
------------------------------------------------------------------------------------------------------------
N                     445             445             445             445             445             445   
------------------------------------------------------------------------------------------------------------
t statistics in parentheses
* p<0.05, ** p<0.01, *** p<0.001

. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_re75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_re78

. 
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_ihsre75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         
.         * save predicted asinh(y) by treatment status
.         qui predict yhat_t if treat==1, xb

.         sum yhat_t if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         qui predict yhat_c if treat==0, xb

.         sum yhat_c if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         
.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         [sinh(mean_yhat_t) / sinh(mean_yhat_c)] - 1 ;

.         #delimit cr
delimiter now cr
.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_re75

.         qui estadd scalar semielas =  e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
. ********************************************
. ** IHS(re78), dummy treat, asinh(re75)
. ********************************************
. est use "results/ihs_ihs"

. 
.         * save predicted ihs(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         sum yhat if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         local e1 = sqrt(mean_re78^2+1) / mean_re78 

.         local e2 = mean_re75 / sqrt(mean_re75^2+1)

.         scalar e_ihsre78_ihsre75 = _b[ihsre75]*`e1'*`e2'

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * semi-elasticity using exact calculations
.         scalar e_ihsre78_treat_exact = (sinh(mean_yhat_t) / sinh(mean_yhat_c)) - 1

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_ihsre75

.         qui estadd scalar semielas = e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
.         
. ********************************************
. ** log(re78), dummy treat, linear re75
. ********************************************
. est use "results/log_lin"

.                 
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[re75] * mean_re75

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui eststo

.         
.         
.         
. ********************************************
. ** log(re78), dummy treat, log(re75)
. ********************************************
. est use "results/log_log"

.         
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[lnre75] 

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui eststo

.         
.         
. 
. ******************************************      
. * write table to file   
. ******************************************
. #delimit ;
delimiter now ;
. esttab using "results/reg1.tex", replace nonotes substitute(\_ _)
> nogaps compress b(a3) se(a3) star(* 0.10 ** 0.05 *** 0.01) 
> eqlabel(none) nodep label noobs nomtitles
> mgroups("$\text{Earnings}_{78}$" "$\text{arcsinh(Earnings}_{78}\text{)}$" 
> "$\ln\text{(Earnings}_{78}+1\text{)}$", pattern(1 0 1 0 1 0) 
> prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
> scalars("N Observations"
>                 "mean78t $\text{Earnings}_{78}\text{ (treatment mean)}$"
>                 "mean78c $\text{Earnings}_{78}\text{ (control mean)}$"
>                 "mean75t $\text{Earnings}_{75}\text{ (treatment mean)}$"
>                 "mean75c $\text{Earnings}_{75}\text{ (control mean)}$"
>                 "a $\phantom{whitespace}$"
>                 "b $\text{\textbf{Calculated (semi-)elasticities:}}$"
>                 "semielas $\tilde{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "semielas_ihs $\bar{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "elas $\xi(\text{Earnings}_{78},\text{ Earnings}_{75})$")
>                 sfmt(a3);
(output written to results/reg1.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. *log close
. 
end of do-file

. help esttab

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions + save estimates
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. * view results
. esttab

------------------------------------------------------------------------------------------------------------
                      (1)             (2)             (3)             (4)             (5)             (6)   
                     re78            re78         ihsre78         ihsre78          lnre78          lnre78   
------------------------------------------------------------------------------------------------------------
treat              1750.2**        1694.3**         1.056*          1.034*          0.982*          0.960*  
                   (2.77)          (2.67)          (2.54)          (2.48)          (2.55)          (2.48)   

re75                0.167                        0.000112                        0.000105                   
                   (1.68)                          (1.72)                          (1.74)                   

ihsre75                             135.5                          0.0705                                   
                                   (1.76)                          (1.39)                                   

lnre75                                                                                             0.0722   
                                                                                                   (1.42)   

_cons              4343.6***       4197.8***        5.803***        5.759***        5.365***        5.323***
                  (10.19)          (9.23)         (20.72)         (19.24)         (20.64)         (19.18)   
------------------------------------------------------------------------------------------------------------
N                     445             445             445             445             445             445   
------------------------------------------------------------------------------------------------------------
t statistics in parentheses
* p<0.05, ** p<0.01, *** p<0.001

. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_re75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_re78

. 
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_ihsre75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         
.         * save predicted asinh(y) by treatment status
.         qui predict yhat_t if treat==1, xb

.         sum yhat_t if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         qui predict yhat_c if treat==0, xb

.         sum yhat_c if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         
.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         [sinh(mean_yhat_t) / sinh(mean_yhat_c)] - 1 ;

.         #delimit cr
delimiter now cr
.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_re75

.         qui estadd scalar semielas =  e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
. ********************************************
. ** IHS(re78), dummy treat, asinh(re75)
. ********************************************
. est use "results/ihs_ihs"

. 
.         * save predicted ihs(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         sum yhat if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         local e1 = sqrt(mean_re78^2+1) / mean_re78 

.         local e2 = mean_re75 / sqrt(mean_re75^2+1)

.         scalar e_ihsre78_ihsre75 = _b[ihsre75]*`e1'*`e2'

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * semi-elasticity using exact calculations
.         scalar e_ihsre78_treat_exact = (sinh(mean_yhat_t) / sinh(mean_yhat_c)) - 1

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_ihsre75

.         qui estadd scalar semielas = e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
.         
. ********************************************
. ** log(re78), dummy treat, linear re75
. ********************************************
. est use "results/log_lin"

.                 
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[re75] * mean_re75

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui eststo

.         
.         
.         
. ********************************************
. ** log(re78), dummy treat, log(re75)
. ********************************************
. est use "results/log_log"

.         
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[lnre75] 

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui eststo

.         
.         
. 
. ******************************************      
. * write table to file   
. ******************************************
. #delimit ;
delimiter now ;
. esttab using "results/reg1.tex", replace nonotes substitute(\_ _)
> nogaps compress b(a3) se(a3) ar2(a3) star(* 0.10 ** 0.05 *** 0.01) 
> eqlabel(none) nodep label noobs nomtitles
> mgroups("$\text{Earnings}_{78}$" "$\text{arcsinh(Earnings}_{78}\text{)}$" 
> "$\ln\text{(Earnings}_{78}+1\text{)}$", pattern(1 0 1 0 1 0) 
> prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
> scalars("N Observations"
>                 "mean78t $\text{Earnings}_{78}\text{ (treatment mean)}$"
>                 "mean78c $\text{Earnings}_{78}\text{ (control mean)}$"
>                 "mean75t $\text{Earnings}_{75}\text{ (treatment mean)}$"
>                 "mean75c $\text{Earnings}_{75}\text{ (control mean)}$"
>                 "a $\phantom{whitespace}$"
>                 "b $\text{\textbf{Calculated (semi-)elasticities:}}$"
>                 "semielas $\tilde{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "semielas_ihs $\bar{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "elas $\xi(\text{Earnings}_{78},\text{ Earnings}_{75})$")
>                 sfmt(a3);
(output written to results/reg1.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. *log close
. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions + save estimates
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. * view results
. esttab

------------------------------------------------------------------------------------------------------------
                      (1)             (2)             (3)             (4)             (5)             (6)   
                     re78            re78         ihsre78         ihsre78          lnre78          lnre78   
------------------------------------------------------------------------------------------------------------
treat              1750.2**        1694.3**         1.056*          1.034*          0.982*          0.960*  
                   (2.77)          (2.67)          (2.54)          (2.48)          (2.55)          (2.48)   

re75                0.167                        0.000112                        0.000105                   
                   (1.68)                          (1.72)                          (1.74)                   

ihsre75                             135.5                          0.0705                                   
                                   (1.76)                          (1.39)                                   

lnre75                                                                                             0.0722   
                                                                                                   (1.42)   

_cons              4343.6***       4197.8***        5.803***        5.759***        5.365***        5.323***
                  (10.19)          (9.23)         (20.72)         (19.24)         (20.64)         (19.18)   
------------------------------------------------------------------------------------------------------------
N                     445             445             445             445             445             445   
------------------------------------------------------------------------------------------------------------
t statistics in parentheses
* p<0.05, ** p<0.01, *** p<0.001

. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_re75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_re78

. 
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_ihsre75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         
.         * save predicted asinh(y) by treatment status
.         qui predict yhat_t if treat==1, xb

.         sum yhat_t if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         qui predict yhat_c if treat==0, xb

.         sum yhat_c if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         
.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         [sinh(mean_yhat_t) / sinh(mean_yhat_c)] - 1 ;

.         #delimit cr
delimiter now cr
.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_re75

.         qui estadd scalar semielas =  e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
. ********************************************
. ** IHS(re78), dummy treat, asinh(re75)
. ********************************************
. est use "results/ihs_ihs"

. 
.         * save predicted ihs(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         sum yhat if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         local e1 = sqrt(mean_re78^2+1) / mean_re78 

.         local e2 = mean_re75 / sqrt(mean_re75^2+1)

.         scalar e_ihsre78_ihsre75 = _b[ihsre75]*`e1'*`e2'

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * semi-elasticity using exact calculations
.         scalar e_ihsre78_treat_exact = (sinh(mean_yhat_t) / sinh(mean_yhat_c)) - 1

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_ihsre75

.         qui estadd scalar semielas = e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
.         
. ********************************************
. ** log(re78), dummy treat, linear re75
. ********************************************
. est use "results/log_lin"

.                 
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[re75] * mean_re75

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui eststo

.         
.         
.         
. ********************************************
. ** log(re78), dummy treat, log(re75)
. ********************************************
. est use "results/log_log"

.         
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[lnre75] 

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui eststo

.         
.         
. 
. ******************************************      
. * write table to file   
. ******************************************
. #delimit ;
delimiter now ;
. esttab using "results/reg1.tex", replace nonotes substitute(\_ _)
> nogaps compress b(a3) se(a3) ar2(a3) star(* 0.10 ** 0.05 *** 0.01) 
> eqlabel(none) nodep label noobs nomtitles
> mgroups("$\text{Earnings}_{78}$" "$\text{arcsinh(Earnings}_{78}\text{)}$" 
> "$\ln\text{(Earnings}_{78}+1\text{)}$", pattern(1 0 1 0 1 0) 
> prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
> scalars("r2_a Adjusted R-squared"
>                 "N Observations"
>                 "mean78t $\text{Earnings}_{78}\text{ (treatment mean)}$"
>                 "mean78c $\text{Earnings}_{78}\text{ (control mean)}$"
>                 "mean75t $\text{Earnings}_{75}\text{ (treatment mean)}$"
>                 "mean75c $\text{Earnings}_{75}\text{ (control mean)}$"
>                 "a $\phantom{whitespace}$"
>                 "b $\text{\textbf{Calculated (semi-)elasticities:}}$"
>                 "semielas $\tilde{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "semielas_ihs $\bar{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "elas $\xi(\text{Earnings}_{78},\text{ Earnings}_{75})$")
>                 sfmt(a3);
(output written to results/reg1.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. *log close
. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. 
. clear all

. 
. 
. global dir = "/Users/wichman/Dropbox/IHS"

. cd $dir
/Users/wichman/Dropbox/IHS

. 
. 
. 
. *log using "results/illustration_log.txt", text replace
. 
. 
. 
. * Data downloaded from: https://economics.mit.edu/faculty/angrist/data1/mhe/dehejia
. use "data/nswre74.dta", clear

. 
. 
. 
. * generate IHS transformations transformations [and log(x+1) for comparison]
. ** check -help(trig_functions)- for trigonometric functions in Stata
. g ihsre75 = asinh(re75)

. g ihsre78 = asinh(re78)

. 
. g lnre75 = ln(re75+1)

. g lnre78 = ln(re78+1)

. 
. #delimit ;
delimiter now ;
. label var re78 "$\text{Earnings}_{78}$";

. label var re75 "$\text{Earnings}_{75}$";

. label var treat "NSW";

. label var ihsre78 "$\text{arcsinh(Earnings}_{78}\text{)}$";

. label var ihsre75 "$\text{arcsinh(Earnings}_{75}\text{)}$";

. label var lnre75 "$\ln(\text{Earnings}_{75}+1)$";

. label var lnre78 "$\ln(\text{Earnings}_{78}+1)$";

. #delimit cr
delimiter now cr
. 
. 
. * save number of zero obs per var/treatment group
. qui count if re78==0 & treat==1

. local re78_tz = r(N)

. qui count if re75==0 & treat==1

. local re75_tz = r(N)

. qui count if re78==0 & treat==0

. local re78_cz = r(N)

. qui count if re75==0 & treat==0

. local re75_cz = r(N)

. 
. 
. ** generate summary statistics table
. #delimit ;
delimiter now ;
. eststo clear ;

. eststo treat: quietly estpost sum re78 re75 if treat==1;

.         qui estadd local re78z = `re78_tz';

.         qui estadd local re75z = `re75_tz';

. eststo ctrl: quietly estpost sum re78 re75 if treat==0;

.         qui estadd local re78z = `re78_cz';

.         qui estadd local re75z = `re75_cz';

. esttab treat ctrl using "results/sumstats.tex", replace nogaps label substitute(\_ _)
> cells("mean(pattern(1 1) fmt(1)) sd(pattern(1 1) fmt(1))") 
> mgroups("Treatment Group" "Control Group", pattern(0 1)               
> prefix(\multicolumn{@span}{c}{) suffix(})   
> span erepeat(\cmidrule(lr){@span})) 
> nonumbers collabels("Mean" "SD")
> scalars("re78z $\text{Earnings}_{78}=0$" "re75z $\text{Earnings}_{75}=0$")
> ;
(output written to results/sumstats.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. 
. 
. * Run primary regressions + save estimates
. #delimit ;
delimiter now ;
. eststo clear;

. qui: eststo: reg re78 treat re75;

.  qui estimates save "results/lin_lin", replace;

. qui: eststo: reg re78 treat ihsre75;

.  qui estimates save "results/lin_ihs", replace;

. qui: eststo: reg ihsre78 treat re75;

.  qui estimates save "results/ihs_lin", replace;

. qui: eststo: reg ihsre78 treat ihsre75;

.  qui estimates save "results/ihs_ihs", replace;

. qui: eststo: reg lnre78 treat re75;

.  qui estimates save "results/log_lin", replace;

. qui: eststo: reg lnre78 treat lnre75;

.  qui estimates save "results/log_log", replace;

. #delimit cr
delimiter now cr
. 
. * view results
. esttab

------------------------------------------------------------------------------------------------------------
                      (1)             (2)             (3)             (4)             (5)             (6)   
                     re78            re78         ihsre78         ihsre78          lnre78          lnre78   
------------------------------------------------------------------------------------------------------------
treat              1750.2**        1694.3**         1.056*          1.034*          0.982*          0.960*  
                   (2.77)          (2.67)          (2.54)          (2.48)          (2.55)          (2.48)   

re75                0.167                        0.000112                        0.000105                   
                   (1.68)                          (1.72)                          (1.74)                   

ihsre75                             135.5                          0.0705                                   
                                   (1.76)                          (1.39)                                   

lnre75                                                                                             0.0722   
                                                                                                   (1.42)   

_cons              4343.6***       4197.8***        5.803***        5.759***        5.365***        5.323***
                  (10.19)          (9.23)         (20.72)         (19.24)         (20.64)         (19.18)   
------------------------------------------------------------------------------------------------------------
N                     445             445             445             445             445             445   
------------------------------------------------------------------------------------------------------------
t statistics in parentheses
* p<0.05, ** p<0.01, *** p<0.001

. 
. 
. 
. ***************************
. *** generate results table
. ***************************
. eststo clear

. scalar drop _all

. 
. 
. * calculate sample means, store as locals for calculating elasticities.
. * calculate sample means for re75 and re78
.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         
. * calculate sample means for re78 & re75 by treatment status
.         qui sum re75 if treat==1, meanonly

.         scalar mean_re75t = r(mean)

.         qui sum re78 if treat==1, meanonly

.         scalar mean_re78t = r(mean)

.         qui sum re75 if treat==0, meanonly

.         scalar mean_re75c = r(mean)

.         qui sum re78 if treat==0, meanonly

.         scalar mean_re78c = r(mean)

.         
. * calculate sample mean treatment status
.         qui sum treat, meanonly

.         scalar mean_treat = r(mean)

. 
. 
. ********************************************
. ** linear re78, dummy treat, linear re75
. ********************************************
. est use "results/lin_lin"

. 
.         * elasticity b/w re78 and re75
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         qui sum re75, meanonly

.         scalar mean_re75 = r(mean)

.         scalar e_re78_re75 = _b[re75] * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         qui sum re78, meanonly

.         scalar mean_re78 = r(mean)

.         scalar e_re78_treat = _b[treat] / mean_re78

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_re75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. ********************************************
. ** linear re78, dummy treat, IHS(re75)
. ********************************************
. est use "results/lin_ihs"

. 
.         * elasticity b/w re78 and re75
.         scalar e_re78_ihsre75 = (_b[ihsre75] / sqrt(mean_re75^2 +1)) * (mean_re75 / mean_re78)

.         
.         * semi-elasticity for treat
.         scalar e_re78_treat = _b[treat] / mean_re78

. 
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_re78_ihsre75

.         qui estadd scalar semielas = e_re78_treat

.         qui eststo

. 
. 
. ********************************************
. ** IHS(re78), dummy treat, linear re75
. ********************************************
. est use "results/ihs_lin"

.         
.         * save predicted asinh(y)
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat, meanonly

.         scalar mean_yhat = r(mean)

.         
.         * save predicted asinh(y) by treatment status
.         qui predict yhat_t if treat==1, xb

.         sum yhat_t if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         qui predict yhat_c if treat==0, xb

.         sum yhat_c if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         
.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         scalar e_ihsre78_re75 = _b[re75]*mean_re75*(sqrt(mean_re78^2+1)/mean_re78)

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

. 
.         * semi-elasticity using exact calculations
.         #delimit ;
delimiter now ;
.         scalar e_ihsre78_treat_exact = 
>         [sinh(mean_yhat_t) / sinh(mean_yhat_c)] - 1 ;

.         #delimit cr
delimiter now cr
.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_re75

.         qui estadd scalar semielas =  e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
. ********************************************
. ** IHS(re78), dummy treat, asinh(re75)
. ********************************************
. est use "results/ihs_ihs"

. 
.         * save predicted ihs(y)*
.         capture drop yhat

.         qui predict yhat, xb

.         sum yhat if treat==1, meanonly

.         scalar mean_yhat_t = r(mean)

.         sum yhat if treat==0, meanonly

.         scalar mean_yhat_c = r(mean)

.         * save residuals
.         capture drop res

.         qui predict res, resid

.         sum res, meanonly

.         scalar mean_res = r(mean)

. 
.         * calculate elasticity b/w re78 and re75
.         local e1 = sqrt(mean_re78^2+1) / mean_re78 

.         local e2 = mean_re75 / sqrt(mean_re75^2+1)

.         scalar e_ihsre78_ihsre75 = _b[ihsre75]*`e1'*`e2'

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_ihsre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * semi-elasticity using exact calculations
.         scalar e_ihsre78_treat_exact = (sinh(mean_yhat_t) / sinh(mean_yhat_c)) - 1

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_ihsre78_ihsre75

.         qui estadd scalar semielas = e_ihsre78_treat_exp

.         qui estadd scalar semielas_ihs = e_ihsre78_treat_exact

.         qui eststo

. 
.         
.         
. ********************************************
. ** log(re78), dummy treat, linear re75
. ********************************************
. est use "results/log_lin"

.                 
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[re75] * mean_re75

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui eststo

.         
.         
.         
. ********************************************
. ** log(re78), dummy treat, log(re75)
. ********************************************
. est use "results/log_log"

.         
.         * calculate elasticity b/w re78 and re75
.         scalar e_lnre78_re75 = _b[lnre75] 

.         
.         * semi-elasticity for treat using exponential approximation
.         scalar e_lnre78_treat_exp = exp(_b[treat] - 0.5*_se[treat]^2 - 1)

.         
.         * store variables
.         qui estadd scalar mean75t = mean_re75t

.         qui estadd scalar mean78t = mean_re78t

.         qui estadd scalar mean75c = mean_re75c

.         qui estadd scalar mean78c = mean_re78c

.         qui estadd scalar elas = e_lnre78_re75

.         qui estadd scalar semielas =  e_lnre78_treat_exp

.         qui eststo

.         
.         
. 
. ******************************************      
. * write table to file   
. ******************************************
. #delimit ;
delimiter now ;
. esttab using "results/reg1.tex", replace nonotes substitute(\_ _)
> nogaps compress b(a3) se(a3) ar2(a3) star(* 0.10 ** 0.05 *** 0.01) 
> eqlabel(none) nodep label noobs nomtitles
> mgroups("$\text{Earnings}_{78}$" "$\text{arcsinh(Earnings}_{78}\text{)}$" 
> "$\ln\text{(Earnings}_{78}+1\text{)}$", pattern(1 0 1 0 1 0) 
> prefix(\multicolumn{@span}{c}{) suffix(}) span erepeat(\cmidrule(lr){@span}))
> scalars("N Observations"
>                 "mean78t $\text{Earnings}_{78}\text{ (treatment mean)}$"
>                 "mean78c $\text{Earnings}_{78}\text{ (control mean)}$"
>                 "mean75t $\text{Earnings}_{75}\text{ (treatment mean)}$"
>                 "mean75c $\text{Earnings}_{75}\text{ (control mean)}$"
>                 "a $\phantom{whitespace}$"
>                 "b $\text{\textbf{Calculated (semi-)elasticities:}}$"
>                 "semielas $\tilde{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "semielas_ihs $\bar{P}(\text{Earnings}_{78},\text{ NSW})/100$"
>                 "elas $\xi(\text{Earnings}_{78},\text{ Earnings}_{75})$")
>                 sfmt(a3);
(output written to results/reg1.tex)

. #delimit cr
delimiter now cr
. 
. 
. 
. 
. *log close
. 
end of do-file

. disp 0.043 / 0.026
1.6538462

. disp 0.026 / .043
.60465116

. .043 * .6
043 * .6: class type not found
r(4018);

. disp .043 * .6
.0258

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. global dir = "/Users/wichman/Dropbox/WaterSubsidy"

. 
. 
. 
. 
. cd "$dir"
/Users/wichman/Dropbox/WaterSubsidy

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. global datadir = "$dir/data"

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * clean AWWA data
. 
. 
. 
. global dir = "/Users/wichman/Dropbox/WaterSubsidy"

. global dataDir = "$dir/data"

. 
. 
. cd "$dir"
/Users/wichman/Dropbox/WaterSubsidy

. 
. 
. import excel "$dataDir/AWWA/2017_AWWA_RFC_Rate_Survey_Data_Analysis_Tool.xlsm"
no; data in memory would be lost
r(4);

end of do-file

r(4);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. clear all

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. import excel "$dataDir/AWWA/2017_AWWA_RFC_Rate_Survey_Data_Analysis_Tool.xlsm", replace
option replace not allowed
r(198);

end of do-file

r(198);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * clean AWWA data
. 
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/WaterSubsidy"

. global dataDir = "$dir/data"

. 
. 
. cd "$dir"
/Users/wichman/Dropbox/WaterSubsidy

. 
. 
. import excel "$dataDir/AWWA/2017_AWWA_RFC_Rate_Survey_Data_Analysis_Tool.xlsm"

. 
end of do-file

. help import excel

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. import excel "$dataDir/AWWA/2017_AWWA_RFC_Rate_Survey_Data_Analysis_Tool.xlsm", sheet("WaterMaster")
no; data in memory would be lost
r(4);

end of do-file

r(4);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * clean AWWA data
. 
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/WaterSubsidy"

. global dataDir = "$dir/data"

. 
. 
. cd "$dir"
/Users/wichman/Dropbox/WaterSubsidy

. 
. 
. import excel "$dataDir/AWWA/2017_AWWA_RFC_Rate_Survey_Data_Analysis_Tool.xlsm", sheet("WaterMaster")

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * clean AWWA data
. 
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/WaterSubsidy"

. global dataDir = "$dir/data"

. 
. 
. cd "$dir"
/Users/wichman/Dropbox/WaterSubsidy

. 
. 
. import excel "$dataDir/AWWA/2017_AWWA_RFC_Rate_Survey_Data_Analysis_Tool.xlsm", ///
>         sheet("WaterMaster") first

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. destring PIncomeExpAnnualNetIncome, replace     
PIncomeExpAnnualNetIncome: contains nonnumeric characters; no replace

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. drop if _n>264
(51 observations deleted)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * clean AWWA data
. 
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/WaterSubsidy"

. global dataDir = "$dir/data"

. 
. 
. cd "$dir"
/Users/wichman/Dropbox/WaterSubsidy

. 
. 
. import excel "$dataDir/AWWA/2017_AWWA_RFC_Rate_Survey_Data_Analysis_Tool.xlsm", ///
>         sheet("WaterMaster") first

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * drop excel pivot table buried at the bottom of the data
. drop if _n>264
(51 observations deleted)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. destring PIncomeExpAnnualNetIncome, replace     
PIncomeExpAnnualNetIncome: all characters numeric; replaced as double

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum PIncomeExpAnnualNetIncome

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
PIncomeExp~e |        264     5391193    2.08e+07  -1.28e+08   1.50e+08

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum PIncomeExpAnnualNetIncome, d

                 P-IncomeExpAnnualNetIncome
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -5.44e+07      -1.28e+08
 5%     -4017612      -8.61e+07
10%     -1118193      -5.44e+07       Obs                 264
25%            0      -2.40e+07       Sum of Wgt.         264

50%      1005463                      Mean            5391193
                        Largest       Std. Dev.      2.08e+07
75%      5477570       7.43e+07
90%     1.81e+07       9.74e+07       Variance       4.31e+14
95%     3.13e+07       1.30e+08       Skewness       1.620461
99%     9.74e+07       1.50e+08       Kurtosis       25.40836

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * clean AWWA data
. 
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/WaterSubsidy"

. global dataDir = "$dir/data"

. 
. 
. cd "$dir"
/Users/wichman/Dropbox/WaterSubsidy

. 
. 
. import excel "$dataDir/AWWA/2017_AWWA_RFC_Rate_Survey_Data_Analysis_Tool.xlsm", ///
>         sheet("WaterMaster") first allstring

. 
. * drop excel pivot table buried at the bottom of the data
. drop if _n>264
(51 observations deleted)

. 
. foreach var of varlist * {
  2.     replace `var' == "" if `var'=="n/r"
  3.         capture destring `var', replace
  4.     }
== invalid name
r(198);

end of do-file

r(198);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * clean AWWA data
. 
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/WaterSubsidy"

. global dataDir = "$dir/data"

. 
. 
. cd "$dir"
/Users/wichman/Dropbox/WaterSubsidy

. 
. 
. import excel "$dataDir/AWWA/2017_AWWA_RFC_Rate_Survey_Data_Analysis_Tool.xlsm", ///
>         sheet("WaterMaster") first allstring

. 
. * drop excel pivot table buried at the bottom of the data
. drop if _n>264
(51 observations deleted)

. 
. foreach var of varlist * {
  2.     replace `var'="" if `var'=="n/r"
  3.         capture destring `var', replace
  4.     }
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(13 real changes made)
(5 real changes made)
(129 real changes made)
(189 real changes made)
(0 real changes made)
(18 real changes made)
(0 real changes made)
(0 real changes made)
(13 real changes made)
(0 real changes made)
(84 real changes made)
(0 real changes made)
(108 real changes made)
(0 real changes made)
(89 real changes made)
(0 real changes made)
(38 real changes made)
(0 real changes made)
(109 real changes made)
(0 real changes made)
(148 real changes made)
(0 real changes made)
(188 real changes made)
(0 real changes made)
(14 real changes made)
(0 real changes made)
(116 real changes made)
(0 real changes made)
(195 real changes made)
(0 real changes made)
(254 real changes made)
(0 real changes made)
(247 real changes made)
(0 real changes made)
(222 real changes made)
(0 real changes made)
(252 real changes made)
(0 real changes made)
(233 real changes made)
(0 real changes made)
(222 real changes made)
(0 real changes made)
(40 real changes made)
(0 real changes made)
(0 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(68 real changes made)
(0 real changes made)
(0 real changes made)
(141 real changes made)
(0 real changes made)
(0 real changes made)
(151 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(24 real changes made)
(0 real changes made)
(0 real changes made)
(230 real changes made)
(0 real changes made)
(247 real changes made)
(0 real changes made)
(261 real changes made)
(0 real changes made)
(219 real changes made)
(0 real changes made)
(240 real changes made)
(27 real changes made)
(0 real changes made)
(50 real changes made)
(0 real changes made)
(51 real changes made)
(0 real changes made)
(51 real changes made)
(51 real changes made)
(0 real changes made)
(51 real changes made)
(0 real changes made)
(51 real changes made)
(70 real changes made)
(0 real changes made)
(70 real changes made)
(0 real changes made)
(70 real changes made)
(252 real changes made)
(100 real changes made)
(0 real changes made)
(10 real changes made)
(0 real changes made)
(100 real changes made)
(0 real changes made)
(25 real changes made)
(0 real changes made)
(0 real changes made)
(29 real changes made)
(0 real changes made)
(37 real changes made)
(0 real changes made)
(0 real changes made)
(11 real changes made)
(0 real changes made)
(0 real changes made)
(33 real changes made)
(0 real changes made)
(0 real changes made)
(6 real changes made)
(0 real changes made)
(0 real changes made)
(90 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(9 real changes made)
(0 real changes made)
(100 real changes made)
(0 real changes made)
(0 real changes made)
(9 real changes made)
(0 real changes made)
(0 real changes made)
(92 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(18 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(58 real changes made)
(0 real changes made)
(134 real changes made)
(0 real changes made)
(79 real changes made)
(0 real changes made)
(55 real changes made)
(0 real changes made)
(263 real changes made)
(0 real changes made)
(264 real changes made)
(0 real changes made)
(223 real changes made)
(0 real changes made)
(231 real changes made)
(0 real changes made)
(231 real changes made)
(0 real changes made)
(241 real changes made)
(0 real changes made)
(264 real changes made)
(0 real changes made)
(264 real changes made)
(0 real changes made)
(263 real changes made)
(0 real changes made)
(263 real changes made)
(0 real changes made)
(264 real changes made)
(0 real changes made)
(264 real changes made)
(0 real changes made)
(257 real changes made)
(263 real changes made)
(0 real changes made)
(262 real changes made)
(0 real changes made)
(0 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(9 real changes made)
(0 real changes made)
(0 real changes made)
(245 real changes made)
(0 real changes made)
(190 real changes made)
(0 real changes made)
(218 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(247 real changes made)
(0 real changes made)
(157 real changes made)
(0 real changes made)
(211 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(250 real changes made)
(0 real changes made)
(172 real changes made)
(0 real changes made)
(248 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(151 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(259 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(259 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(202 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(256 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(260 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(257 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(263 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(262 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(239 real changes made)
(0 real changes made)
(239 real changes made)
(0 real changes made)
(0 real changes made)
(262 real changes made)
(0 real changes made)
(254 real changes made)
(0 real changes made)
(261 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(262 real changes made)
(0 real changes made)
(247 real changes made)
(0 real changes made)
(262 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(263 real changes made)
(0 real changes made)
(253 real changes made)
(0 real changes made)
(262 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(245 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(263 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(263 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(252 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(262 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(263 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(261 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(264 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(264 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(133 real changes made)
(133 real changes made)
(80 real changes made)
(80 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(110 real changes made)
(110 real changes made)
(109 real changes made)
(109 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(166 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(169 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(171 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(171 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(183 real changes made)
(0 real changes made)
(0 real changes made)
(209 real changes made)
(0 real changes made)
(212 real changes made)
(0 real changes made)
(150 real changes made)
(0 real changes made)
(0 real changes made)
(163 real changes made)
(0 real changes made)
(0 real changes made)
(176 real changes made)
(0 real changes made)
(236 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(61 real changes made)
(0 real changes made)
(188 real changes made)
(0 real changes made)
(0 real changes made)
(201 real changes made)
(0 real changes made)
(246 real changes made)
(0 real changes made)
(255 real changes made)
(0 real changes made)
(257 real changes made)
(237 real changes made)
(0 real changes made)
(259 real changes made)
(0 real changes made)
(213 real changes made)
(0 real changes made)
(0 real changes made)
(215 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(13 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(55 real changes made)
(0 real changes made)
(62 real changes made)
(0 real changes made)
(32 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(105 real changes made)
(0 real changes made)
(0 real changes made)
(92 real changes made)
(0 real changes made)
(0 real changes made)
(90 real changes made)
(0 real changes made)
(88 real changes made)
(0 real changes made)
(0 real changes made)
(255 real changes made)
(0 real changes made)
(260 real changes made)
(0 real changes made)
(246 real changes made)
(0 real changes made)
(252 real changes made)
(0 real changes made)
(259 real changes made)
(0 real changes made)
(127 real changes made)
(0 real changes made)
(221 real changes made)
(226 real changes made)
(0 real changes made)
(0 real changes made)
(90 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(240 real changes made)
(0 real changes made)
(202 real changes made)
(0 real changes made)
(250 real changes made)
(0 real changes made)
(217 real changes made)
(0 real changes made)
(234 real changes made)
(0 real changes made)
(258 real changes made)
(0 real changes made)
(234 real changes made)
(0 real changes made)
(244 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(210 real changes made)
(0 real changes made)
(207 real changes made)
(0 real changes made)
(0 real changes made)
(82 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(29 real changes made)
(0 real changes made)
(24 real changes made)
(0 real changes made)
(126 real changes made)
(0 real changes made)
(145 real changes made)
(0 real changes made)
(129 real changes made)
(0 real changes made)
(0 real changes made)
(61 real changes made)
(0 real changes made)
(0 real changes made)
(59 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(210 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(63 real changes made)
(0 real changes made)
(0 real changes made)
(67 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(230 real changes made)
(0 real changes made)
(200 real changes made)
(0 real changes made)
(229 real changes made)
(0 real changes made)
(145 real changes made)
(0 real changes made)
(221 real changes made)
(0 real changes made)
(253 real changes made)
(0 real changes made)
(200 real changes made)
(0 real changes made)
(234 real changes made)
(0 real changes made)
(242 real changes made)
(0 real changes made)
(239 real changes made)
(0 real changes made)
(0 real changes made)

. 
end of do-file

. ssc install dropmiss
ssc install: "dropmiss" not found at SSC, type search dropmiss
(To find all packages at SSC that start with d, type ssc describe d)
r(601);

. help dropmiss

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * clean AWWA data
. 
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/WaterSubsidy"

. global dataDir = "$dir/data"

. 
. 
. cd "$dir"
/Users/wichman/Dropbox/WaterSubsidy

. 
. 
. import excel "$dataDir/AWWA/2017_AWWA_RFC_Rate_Survey_Data_Analysis_Tool.xlsm", ///
>         sheet("WaterMaster") first allstring

. 
. * drop excel pivot table buried at the bottom of the data
. drop if _n>264
(51 observations deleted)

. 
. foreach var of varlist * {
  2.         * replace "not reported" with a missing string
.     replace `var'="" if `var'=="n/r"
  3.         * destring all numeric vars
.         capture destring `var', replace
  4.         * drop variables with all missing values
.         capture assert mi(`var')
  5.         if !_rc {
  6.                 drop `var'
  7.                 }
  8. }
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(13 real changes made)
(5 real changes made)
(129 real changes made)
(189 real changes made)
(0 real changes made)
(18 real changes made)
(0 real changes made)
(0 real changes made)
(13 real changes made)
(0 real changes made)
(84 real changes made)
(0 real changes made)
(108 real changes made)
(0 real changes made)
(89 real changes made)
(0 real changes made)
(38 real changes made)
(0 real changes made)
(109 real changes made)
(0 real changes made)
(148 real changes made)
(0 real changes made)
(188 real changes made)
(0 real changes made)
(14 real changes made)
(0 real changes made)
(116 real changes made)
(0 real changes made)
(195 real changes made)
(0 real changes made)
(254 real changes made)
(0 real changes made)
(247 real changes made)
(0 real changes made)
(222 real changes made)
(0 real changes made)
(252 real changes made)
(0 real changes made)
(233 real changes made)
(0 real changes made)
(222 real changes made)
(0 real changes made)
(40 real changes made)
(0 real changes made)
(0 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(68 real changes made)
(0 real changes made)
(0 real changes made)
(141 real changes made)
(0 real changes made)
(0 real changes made)
(151 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(24 real changes made)
(0 real changes made)
(0 real changes made)
(230 real changes made)
(0 real changes made)
(247 real changes made)
(0 real changes made)
(261 real changes made)
(0 real changes made)
(219 real changes made)
(0 real changes made)
(240 real changes made)
(27 real changes made)
(0 real changes made)
(50 real changes made)
(0 real changes made)
(51 real changes made)
(0 real changes made)
(51 real changes made)
(51 real changes made)
(0 real changes made)
(51 real changes made)
(0 real changes made)
(51 real changes made)
(70 real changes made)
(0 real changes made)
(70 real changes made)
(0 real changes made)
(70 real changes made)
(252 real changes made)
(100 real changes made)
(0 real changes made)
(10 real changes made)
(0 real changes made)
(100 real changes made)
(0 real changes made)
(25 real changes made)
(0 real changes made)
(0 real changes made)
(29 real changes made)
(0 real changes made)
(37 real changes made)
(0 real changes made)
(0 real changes made)
(11 real changes made)
(0 real changes made)
(0 real changes made)
(33 real changes made)
(0 real changes made)
(0 real changes made)
(6 real changes made)
(0 real changes made)
(0 real changes made)
(90 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(9 real changes made)
(0 real changes made)
(100 real changes made)
(0 real changes made)
(0 real changes made)
(9 real changes made)
(0 real changes made)
(0 real changes made)
(92 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(18 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(58 real changes made)
(0 real changes made)
(134 real changes made)
(0 real changes made)
(79 real changes made)
(0 real changes made)
(55 real changes made)
(0 real changes made)
(263 real changes made)
(0 real changes made)
(264 real changes made)
(0 real changes made)
(223 real changes made)
(0 real changes made)
(231 real changes made)
(0 real changes made)
(231 real changes made)
(0 real changes made)
(241 real changes made)
(0 real changes made)
(264 real changes made)
(0 real changes made)
(264 real changes made)
(0 real changes made)
(263 real changes made)
(0 real changes made)
(263 real changes made)
(0 real changes made)
(264 real changes made)
(0 real changes made)
(264 real changes made)
(0 real changes made)
(257 real changes made)
(263 real changes made)
(0 real changes made)
(262 real changes made)
(0 real changes made)
(0 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(9 real changes made)
(0 real changes made)
(0 real changes made)
(245 real changes made)
(0 real changes made)
(190 real changes made)
(0 real changes made)
(218 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(247 real changes made)
(0 real changes made)
(157 real changes made)
(0 real changes made)
(211 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(250 real changes made)
(0 real changes made)
(172 real changes made)
(0 real changes made)
(248 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(151 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(259 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(259 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(202 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(256 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(260 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(257 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(263 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(262 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(239 real changes made)
(0 real changes made)
(239 real changes made)
(0 real changes made)
(0 real changes made)
(262 real changes made)
(0 real changes made)
(254 real changes made)
(0 real changes made)
(261 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(262 real changes made)
(0 real changes made)
(247 real changes made)
(0 real changes made)
(262 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(263 real changes made)
(0 real changes made)
(253 real changes made)
(0 real changes made)
(262 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(245 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(263 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(263 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(252 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(262 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(263 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(261 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(264 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(264 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(133 real changes made)
(133 real changes made)
(80 real changes made)
(80 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(110 real changes made)
(110 real changes made)
(109 real changes made)
(109 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(166 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(169 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(171 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(171 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(183 real changes made)
(0 real changes made)
(0 real changes made)
(209 real changes made)
(0 real changes made)
(212 real changes made)
(0 real changes made)
(150 real changes made)
(0 real changes made)
(0 real changes made)
(163 real changes made)
(0 real changes made)
(0 real changes made)
(176 real changes made)
(0 real changes made)
(236 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(61 real changes made)
(0 real changes made)
(188 real changes made)
(0 real changes made)
(0 real changes made)
(201 real changes made)
(0 real changes made)
(246 real changes made)
(0 real changes made)
(255 real changes made)
(0 real changes made)
(257 real changes made)
(237 real changes made)
(0 real changes made)
(259 real changes made)
(0 real changes made)
(213 real changes made)
(0 real changes made)
(0 real changes made)
(215 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(13 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(55 real changes made)
(0 real changes made)
(62 real changes made)
(0 real changes made)
(32 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(105 real changes made)
(0 real changes made)
(0 real changes made)
(92 real changes made)
(0 real changes made)
(0 real changes made)
(90 real changes made)
(0 real changes made)
(88 real changes made)
(0 real changes made)
(0 real changes made)
(255 real changes made)
(0 real changes made)
(260 real changes made)
(0 real changes made)
(246 real changes made)
(0 real changes made)
(252 real changes made)
(0 real changes made)
(259 real changes made)
(0 real changes made)
(127 real changes made)
(0 real changes made)
(221 real changes made)
(226 real changes made)
(0 real changes made)
(0 real changes made)
(90 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(240 real changes made)
(0 real changes made)
(202 real changes made)
(0 real changes made)
(250 real changes made)
(0 real changes made)
(217 real changes made)
(0 real changes made)
(234 real changes made)
(0 real changes made)
(258 real changes made)
(0 real changes made)
(234 real changes made)
(0 real changes made)
(244 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(210 real changes made)
(0 real changes made)
(207 real changes made)
(0 real changes made)
(0 real changes made)
(82 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(29 real changes made)
(0 real changes made)
(24 real changes made)
(0 real changes made)
(126 real changes made)
(0 real changes made)
(145 real changes made)
(0 real changes made)
(129 real changes made)
(0 real changes made)
(0 real changes made)
(61 real changes made)
(0 real changes made)
(0 real changes made)
(59 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(210 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(63 real changes made)
(0 real changes made)
(0 real changes made)
(67 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(230 real changes made)
(0 real changes made)
(200 real changes made)
(0 real changes made)
(229 real changes made)
(0 real changes made)
(145 real changes made)
(0 real changes made)
(221 real changes made)
(0 real changes made)
(253 real changes made)
(0 real changes made)
(200 real changes made)
(0 real changes made)
(234 real changes made)
(0 real changes made)
(242 real changes made)
(0 real changes made)
(239 real changes made)
(0 real changes made)
(0 real changes made)

. 
end of do-file

. help im

. help missing

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. hist PIncomeExpAnnualNetIncome
(bin=16, start=-1.282e+08, width=17382236)

. 
end of do-file

. help trim

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab StateProvince

State-Province |      Freq.     Percent        Cum.
---------------+-----------------------------------
            AK |          1        0.38        0.38
            AL |          3        1.14        1.52
            AR |          7        2.65        4.17
            AZ |          5        1.89        6.06
       Alberta |          1        0.38        6.44
            CA |         35       13.26       19.70
            CO |          8        3.03       22.73
            CT |          1        0.38       23.11
            Ca |          1        0.38       23.48
            DE |          1        0.38       23.86
            FL |         14        5.30       29.17
            Fl |          1        0.38       29.55
            GA |          7        2.65       32.20
            HI |          1        0.38       32.58
            IA |          8        3.03       35.61
            IL |          9        3.41       39.02
            IN |          2        0.76       39.77
            Il |          1        0.38       40.15
            KS |          4        1.52       41.67
            KY |          6        2.27       43.94
            LA |          3        1.14       45.08
            MA |          3        1.14       46.21
            MD |          2        0.76       46.97
            ME |          3        1.14       48.11
            MI |          5        1.89       50.00
            MN |          8        3.03       53.03
            MO |          3        1.14       54.17
            MS |          1        0.38       54.55
            Mo |          1        0.38       54.92
            NC |         10        3.79       58.71
            NE |          4        1.52       60.23
            NJ |          2        0.76       60.98
            NM |          2        0.76       61.74
            NV |          7        2.65       64.39
            NY |          3        1.14       65.53
            OH |          7        2.65       68.18
            OR |          6        2.27       70.45
            PA |          8        3.03       73.48
            PR |          1        0.38       73.86
            RI |          3        1.14       75.00
            SC |          5        1.89       76.89
            TN |         12        4.55       81.44
            TX |         18        6.82       88.26
            UT |          2        0.76       89.02
            VA |         16        6.06       95.08
            WA |          6        2.27       97.35
            WI |          5        1.89       99.24
            WY |          2        0.76      100.00
---------------+-----------------------------------
         Total |        264      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. replace StateProvince = upper(StateProvince)
(5 real changes made)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab StateProvince

State-Province |      Freq.     Percent        Cum.
---------------+-----------------------------------
            AK |          1        0.38        0.38
            AL |          3        1.14        1.52
       ALBERTA |          1        0.38        1.89
            AR |          7        2.65        4.55
            AZ |          5        1.89        6.44
            CA |         36       13.64       20.08
            CO |          8        3.03       23.11
            CT |          1        0.38       23.48
            DE |          1        0.38       23.86
            FL |         15        5.68       29.55
            GA |          7        2.65       32.20
            HI |          1        0.38       32.58
            IA |          8        3.03       35.61
            IL |         10        3.79       39.39
            IN |          2        0.76       40.15
            KS |          4        1.52       41.67
            KY |          6        2.27       43.94
            LA |          3        1.14       45.08
            MA |          3        1.14       46.21
            MD |          2        0.76       46.97
            ME |          3        1.14       48.11
            MI |          5        1.89       50.00
            MN |          8        3.03       53.03
            MO |          4        1.52       54.55
            MS |          1        0.38       54.92
            NC |         10        3.79       58.71
            NE |          4        1.52       60.23
            NJ |          2        0.76       60.98
            NM |          2        0.76       61.74
            NV |          7        2.65       64.39
            NY |          3        1.14       65.53
            OH |          7        2.65       68.18
            OR |          6        2.27       70.45
            PA |          8        3.03       73.48
            PR |          1        0.38       73.86
            RI |          3        1.14       75.00
            SC |          5        1.89       76.89
            TN |         12        4.55       81.44
            TX |         18        6.82       88.26
            UT |          2        0.76       89.02
            VA |         16        6.06       95.08
            WA |          6        2.27       97.35
            WI |          5        1.89       99.24
            WY |          2        0.76      100.00
---------------+-----------------------------------
         Total |        264      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum PIncomeExpAnnualNetIncome, d

                 P-IncomeExpAnnualNetIncome
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -5.44e+07      -1.28e+08
 5%     -4017612      -8.61e+07
10%     -1118193      -5.44e+07       Obs                 264
25%            0      -2.40e+07       Sum of Wgt.         264

50%      1005463                      Mean            5391193
                        Largest       Std. Dev.      2.08e+07
75%      5477570       7.43e+07
90%     1.81e+07       9.74e+07       Variance       4.31e+14
95%     3.13e+07       1.30e+08       Skewness       1.620461
99%     9.74e+07       1.50e+08       Kurtosis       25.40836

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * annual operating revenues     from water sales
. sum PIncomeRevWaterSales, d

                    P-IncomeRevWaterSales
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%      1008042              0       Obs                 264
25%      3774110              0       Sum of Wgt.         264

50%     1.83e+07                      Mean           5.48e+07
                        Largest       Std. Dev.      1.19e+08
75%     5.03e+07       6.68e+08
90%     1.21e+08       7.30e+08       Variance       1.41e+16
95%     2.70e+08       7.50e+08       Skewness       4.774618
99%     7.30e+08       1.03e+09       Kurtosis       30.63135

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * annual expenditures before depreciation
. sum PIncomeExpBeforeDepreciation, d

                P-IncomeExpBeforeDepreciation
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%       766378              0       Obs                 264
25%      2793193              0       Sum of Wgt.         264

50%     1.10e+07                      Mean           3.58e+07
                        Largest       Std. Dev.      7.87e+07
75%     3.69e+07       3.77e+08
90%     7.50e+07       3.78e+08       Variance       6.19e+15
95%     1.27e+08       6.43e+08       Skewness       5.556785
99%     3.78e+08       7.38e+08       Kurtosis       41.69495

. 
. * annual depreciation expense
. sum PIncomeExpDepreciation, d

                   P-IncomeExpDepreciation
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs                 264
25%       665398              0       Sum of Wgt.         264

50%      3260479                      Mean           1.09e+07
                        Largest       Std. Dev.      2.47e+07
75%     1.02e+07       9.41e+07
90%     2.60e+07       9.54e+07       Variance       6.08e+14
95%     5.19e+07       1.04e+08       Skewness       6.917104
99%     9.54e+07       2.97e+08       Kurtosis        71.8394

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g operating_revenues = PIncomeRevWaterSales + PIncomeRevOther

. g operating_expenses = PIncomeExpBeforeDepreciation + PIncomeExpBeforeDepreciation

. g operating_rato = operating_revenues - operating_expenses

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum operating_rato, d

                       operating_rato
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -2.31e+08      -7.06e+08
 5%    -6.47e+07      -3.00e+08
10%    -3.77e+07      -2.31e+08       Obs                 264
25%    -1.31e+07      -1.94e+08       Sum of Wgt.         264

50%     -2865067                      Mean          -1.34e+07
                        Largest       Std. Dev.      7.17e+07
75%      -315204       3.45e+07
90%      1144688       3.85e+07       Variance       5.14e+15
95%      9682624       4.72e+07       Skewness       .1950391
99%     3.85e+07       7.25e+08       Kurtosis       77.80519

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * clean AWWA data
. 
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/WaterSubsidy"

. global dataDir = "$dir/data"

. 
. 
. cd "$dir"
/Users/wichman/Dropbox/WaterSubsidy

. 
. 
. import excel "$dataDir/AWWA/2017_AWWA_RFC_Rate_Survey_Data_Analysis_Tool.xlsm", ///
>         sheet("WaterMaster") first allstring

. 
. * drop excel pivot table buried at the bottom of the data
. drop if _n>264
(51 observations deleted)

. 
. qui foreach var of varlist * {

. 
. replace StateProvince = upper(StateProvince)
(5 real changes made)

. tab StateProvince

State-Province |      Freq.     Percent        Cum.
---------------+-----------------------------------
            AK |          1        0.38        0.38
            AL |          3        1.14        1.52
       ALBERTA |          1        0.38        1.89
            AR |          7        2.65        4.55
            AZ |          5        1.89        6.44
            CA |         36       13.64       20.08
            CO |          8        3.03       23.11
            CT |          1        0.38       23.48
            DE |          1        0.38       23.86
            FL |         15        5.68       29.55
            GA |          7        2.65       32.20
            HI |          1        0.38       32.58
            IA |          8        3.03       35.61
            IL |         10        3.79       39.39
            IN |          2        0.76       40.15
            KS |          4        1.52       41.67
            KY |          6        2.27       43.94
            LA |          3        1.14       45.08
            MA |          3        1.14       46.21
            MD |          2        0.76       46.97
            ME |          3        1.14       48.11
            MI |          5        1.89       50.00
            MN |          8        3.03       53.03
            MO |          4        1.52       54.55
            MS |          1        0.38       54.92
            NC |         10        3.79       58.71
            NE |          4        1.52       60.23
            NJ |          2        0.76       60.98
            NM |          2        0.76       61.74
            NV |          7        2.65       64.39
            NY |          3        1.14       65.53
            OH |          7        2.65       68.18
            OR |          6        2.27       70.45
            PA |          8        3.03       73.48
            PR |          1        0.38       73.86
            RI |          3        1.14       75.00
            SC |          5        1.89       76.89
            TN |         12        4.55       81.44
            TX |         18        6.82       88.26
            UT |          2        0.76       89.02
            VA |         16        6.06       95.08
            WA |          6        2.27       97.35
            WI |          5        1.89       99.24
            WY |          2        0.76      100.00
---------------+-----------------------------------
         Total |        264      100.00

. 
. 
. * annual operating revenues     from water sales
. sum PIncomeRevWaterSales, d

                    P-IncomeRevWaterSales
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%      1008042              0       Obs                 264
25%      3774110              0       Sum of Wgt.         264

50%     1.83e+07                      Mean           5.48e+07
                        Largest       Std. Dev.      1.19e+08
75%     5.03e+07       6.68e+08
90%     1.21e+08       7.30e+08       Variance       1.41e+16
95%     2.70e+08       7.50e+08       Skewness       4.774618
99%     7.30e+08       1.03e+09       Kurtosis       30.63135

. 
. * annual operating revenues (other)
. sum PIncomeRevOther, d

                      P-IncomeRevOther
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs                 264
25%       9879.5              0       Sum of Wgt.         264

50%       482604                      Mean            3421359
                        Largest       Std. Dev.       9145069
75%      2412990       3.32e+07
90%      7082504       5.89e+07       Variance       8.36e+13
95%     1.82e+07       7.49e+07       Skewness       5.318845
99%     5.89e+07       7.69e+07       Kurtosis       37.14951

. 
. * annual non-operating revenues
. sum PIncomeRevNonOperatingRevenues, d

               P-IncomeRevNonOperatingRevenues
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs                 264
25%       4659.5              0       Sum of Wgt.         264

50%     306636.5                      Mean            4818773
                        Largest       Std. Dev.      2.34e+07
75%      2317144       5.92e+07
90%      7051099       1.30e+08       Variance       5.47e+14
95%     1.43e+07       1.98e+08       Skewness       9.279826
99%     1.30e+08       2.84e+08       Kurtosis       98.08323

.         
. * annual expenditures before depreciation
. sum PIncomeExpBeforeDepreciation, d

                P-IncomeExpBeforeDepreciation
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%       766378              0       Obs                 264
25%      2793193              0       Sum of Wgt.         264

50%     1.10e+07                      Mean           3.58e+07
                        Largest       Std. Dev.      7.87e+07
75%     3.69e+07       3.77e+08
90%     7.50e+07       3.78e+08       Variance       6.19e+15
95%     1.27e+08       6.43e+08       Skewness       5.556785
99%     3.78e+08       7.38e+08       Kurtosis       41.69495

. 
. * annual depreciation expense
. sum PIncomeExpDepreciation, d

                   P-IncomeExpDepreciation
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs                 264
25%       665398              0       Sum of Wgt.         264

50%      3260479                      Mean           1.09e+07
                        Largest       Std. Dev.      2.47e+07
75%     1.02e+07       9.41e+07
90%     2.60e+07       9.54e+07       Variance       6.08e+14
95%     5.19e+07       1.04e+08       Skewness       6.917104
99%     9.54e+07       2.97e+08       Kurtosis        71.8394

.         
.         
.         
. * annual net income     
. sum PIncomeExpAnnualNetIncome, d

                 P-IncomeExpAnnualNetIncome
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -5.44e+07      -1.28e+08
 5%     -4017612      -8.61e+07
10%     -1118193      -5.44e+07       Obs                 264
25%            0      -2.40e+07       Sum of Wgt.         264

50%      1005463                      Mean            5391193
                        Largest       Std. Dev.      2.08e+07
75%      5477570       7.43e+07
90%     1.81e+07       9.74e+07       Variance       4.31e+14
95%     3.13e+07       1.30e+08       Skewness       1.620461
99%     9.74e+07       1.50e+08       Kurtosis       25.40836

. hist PIncomeExpAnnualNetIncome
(bin=16, start=-1.282e+08, width=17382236)

. 
. 
. g operating_revenues = PIncomeRevWaterSales + PIncomeRevOther

. g operating_expenses = PIncomeExpBeforeDepreciation + PIncomeExpBeforeDepreciation

. g operating_ratio = operating_revenues / operating_expenses
(18 missing values generated)

. sum operating_ratio, d

                       operating_ratio
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .3816857       .1923133
 5%     .4999153       .3266926
10%     .5472736       .3816857       Obs                 246
25%     .6617482       .4181583       Sum of Wgt.         246

50%       .77294                      Mean           1.384333
                        Largest       Std. Dev.      9.097048
75%     .9340727       1.559957
90%     1.055589       1.649802       Variance       82.75629
95%     1.173629       1.956684       Skewness       15.57395
99%     1.649802       143.4418       Kurtosis       243.7008

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum operating_ratio, d

                       operating_ratio
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .3816857       .1923133
 5%     .4999153       .3266926
10%     .5472736       .3816857       Obs                 246
25%     .6617482       .4181583       Sum of Wgt.         246

50%       .77294                      Mean           1.384333
                        Largest       Std. Dev.      9.097048
75%     .9340727       1.559957
90%     1.055589       1.649802       Variance       82.75629
95%     1.173629       1.956684       Skewness       15.57395
99%     1.649802       143.4418       Kurtosis       243.7008

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. hist operating_ratio
(bin=15, start=.19231333, width=9.5499639)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. hist operating_ratio if operating ratio <2
operating ambiguous abbreviation
r(111);

end of do-file

r(111);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. hist operating_ratio if operating_ratio <2
(bin=15, start=.19231333, width=.11762473)

. 
end of do-file

. drop operating_*

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g operating_revenues = PIncomeRevWaterSales + PIncomeRevOther 

. g operating_expenses = PIncomeExpBeforeDepreciation + PIncomeExpDepreciation

. g operating_ratio = operating_revenues / operating_expenses
(18 missing values generated)

. sum operating_ratio, d

                       operating_ratio
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .4881692       .3295163
 5%      .838491       .4105599
10%     .9303922       .4881692       Obs                 246
25%     1.037712       .5265057       Sum of Wgt.         246

50%     1.178211                      Mean           1.978756
                        Largest       Std. Dev.      12.30916
75%     1.352553       1.915809
90%      1.51056       2.109873       Variance       151.5155
95%     1.646192       2.667531       Skewness       15.57751
99%     2.109873       194.2104       Kurtosis       243.7746

. hist operating_ratio if operating_ratio <2
(bin=15, start=.32951626, width=.10575288)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g revenues = PIncomeRevWaterSales + PIncomeRevOther + PIncomeRevNonOperatingRevenues 

. g expenditures = PIncomeExpBeforeDepreciation + PIncomeExpDepreciation + PIncomeExpNonopera
> tingExpenses \\\
invalid '\' 
r(198);

end of do-file

r(198);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g expenditures = PIncomeExpBeforeDepreciation + PIncomeExpDepreciation + PIncomeExpNonopera
> tingExpenses ///
>         + PIncomeExpAnnualNetIncome + PIncomeExpDebtGeneralObligation + PIncomeExpDebtReven
> ueBonds ///
>         + PIncomeExpDebtStateRevolving + PIncomeExpDebtOther

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g net_income = revenues - expenditures

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum net_income, d

                         net_income
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -3.14e+08      -4.40e+08
 5%    -6.69e+07      -3.34e+08
10%    -3.66e+07      -3.14e+08       Obs                 264
25%     -7792923      -3.01e+08       Sum of Wgt.         264

50%     -1769270                      Mean          -1.31e+07
                        Largest       Std. Dev.      6.91e+07
75%      -134395       4.72e+07
90%            0       1.32e+08       Variance       4.77e+15
95%       913000       1.65e+08       Skewness       1.562696
99%     1.32e+08       6.77e+08       Kurtosis       49.36721

. 
end of do-file

. drop expenditures

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * recreate net income:
. g revenues = PIncomeRevWaterSales + PIncomeRevOther + PIncomeRevNonOperatingRevenues 
variable revenues already defined
r(110);

end of do-file

r(110);

. drop revenues

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * recreate net income:
. g revenues = PIncomeRevWaterSales + PIncomeRevOther + PIncomeRevNonOperatingRevenues 

. g expenditures = PIncomeExpBeforeDepreciation + PIncomeExpDepreciation + PIncomeExpNonopera
> tingExpenses ///
>         + PIncomeExpDebtGeneralObligation + PIncomeExpDebtRevenueBonds + PIncomeExpDebtStat
> eRevolving + PIncomeExpDebtOther

. g net_income = revenues - expenditures
variable net_income already defined
r(110);

end of do-file

r(110);

. drop net_income revenues expenditures

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * recreate net income:
. g revenues = PIncomeRevWaterSales + PIncomeRevOther + PIncomeRevNonOperatingRevenues 

. g expenditures = PIncomeExpBeforeDepreciation + PIncomeExpDepreciation + PIncomeExpNonopera
> tingExpenses ///
>         + PIncomeExpDebtGeneralObligation + PIncomeExpDebtRevenueBonds + PIncomeExpDebtStat
> eRevolving + PIncomeExpDebtOther

. g net_income = revenues - expenditures

. sum net_income, d

                         net_income
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -3.16e+08      -4.39e+08
 5%    -7.37e+07      -4.20e+08
10%    -1.57e+07      -3.16e+08       Obs                 264
25%     -3731522      -3.07e+08       Sum of Wgt.         264

50%      -277594                      Mean           -7722764
                        Largest       Std. Dev.      7.26e+07
75%     658694.5       6.44e+07
90%      6757936       1.35e+08       Variance       5.28e+15
95%     1.25e+07       1.87e+08       Skewness       1.606613
99%     1.35e+08       7.26e+08       Kurtosis        52.1571

.         
. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g income_ratio = revenues / expenditures        
(17 missing values generated)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. hist income_ratio
(bin=15, start=.16176564, width=12.936574)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum income_ratio, d

                        income_ratio
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .2441027       .1617656
 5%     .6449484       .2185998
10%     .7341349       .2441027       Obs                 247
25%     .8511645       .2581561       Sum of Wgt.         247

50%     .9584963                      Mean           1.763229
                        Largest       Std. Dev.      12.29996
75%     1.094062       1.893409
90%     1.225444       2.109873       Variance        151.289
95%     1.319576       5.060194       Skewness       15.60134
99%     2.109873       194.2104       Kurtosis        244.601

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. hist income_ratio if income_ratio<10
(bin=15, start=.16176564, width=.32656186)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * clean AWWA data
. 
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/WaterSubsidy"

. global dataDir = "$dir/data"

. 
. 
. cd "$dir"
/Users/wichman/Dropbox/WaterSubsidy

. 
. 
. import excel "$dataDir/AWWA/2017_AWWA_RFC_Rate_Survey_Data_Analysis_Tool.xlsm", ///
>         sheet("WaterMaster") first allstring

. 
. * drop excel pivot table buried at the bottom of the data
. drop if _n>264
(51 observations deleted)

. 
. qui foreach var of varlist * {

. 
. replace StateProvince = upper(StateProvince)
(5 real changes made)

. tab StateProvince

State-Province |      Freq.     Percent        Cum.
---------------+-----------------------------------
            AK |          1        0.38        0.38
            AL |          3        1.14        1.52
       ALBERTA |          1        0.38        1.89
            AR |          7        2.65        4.55
            AZ |          5        1.89        6.44
            CA |         36       13.64       20.08
            CO |          8        3.03       23.11
            CT |          1        0.38       23.48
            DE |          1        0.38       23.86
            FL |         15        5.68       29.55
            GA |          7        2.65       32.20
            HI |          1        0.38       32.58
            IA |          8        3.03       35.61
            IL |         10        3.79       39.39
            IN |          2        0.76       40.15
            KS |          4        1.52       41.67
            KY |          6        2.27       43.94
            LA |          3        1.14       45.08
            MA |          3        1.14       46.21
            MD |          2        0.76       46.97
            ME |          3        1.14       48.11
            MI |          5        1.89       50.00
            MN |          8        3.03       53.03
            MO |          4        1.52       54.55
            MS |          1        0.38       54.92
            NC |         10        3.79       58.71
            NE |          4        1.52       60.23
            NJ |          2        0.76       60.98
            NM |          2        0.76       61.74
            NV |          7        2.65       64.39
            NY |          3        1.14       65.53
            OH |          7        2.65       68.18
            OR |          6        2.27       70.45
            PA |          8        3.03       73.48
            PR |          1        0.38       73.86
            RI |          3        1.14       75.00
            SC |          5        1.89       76.89
            TN |         12        4.55       81.44
            TX |         18        6.82       88.26
            UT |          2        0.76       89.02
            VA |         16        6.06       95.08
            WA |          6        2.27       97.35
            WI |          5        1.89       99.24
            WY |          2        0.76      100.00
---------------+-----------------------------------
         Total |        264      100.00

. 
. * income sheet variables:
. /*
> PIncomeRevWaterSales 
> PIncomeRevOther 
> PIncomeRevNonOperatingRevenues 
> PIncomeExpBeforeDepreciation 
> PIncomeExpDepreciation 
> PIncomeExpNonoperatingExpenses 
> PIncomeExpAnnualNetIncome 
> PIncomeExpDebtGeneralObligation 
> PIncomeExpDebtRevenueBonds 
> PIncomeExpDebtStateRevolving 
> PIncomeExpDebtOther
> */
. 
. * annual operating revenues     from water sales
. sum PIncomeRevWaterSales, d

                    P-IncomeRevWaterSales
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%      1008042              0       Obs                 264
25%      3774110              0       Sum of Wgt.         264

50%     1.83e+07                      Mean           5.48e+07
                        Largest       Std. Dev.      1.19e+08
75%     5.03e+07       6.68e+08
90%     1.21e+08       7.30e+08       Variance       1.41e+16
95%     2.70e+08       7.50e+08       Skewness       4.774618
99%     7.30e+08       1.03e+09       Kurtosis       30.63135

. 
. * annual operating revenues (other)
. sum PIncomeRevOther, d

                      P-IncomeRevOther
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs                 264
25%       9879.5              0       Sum of Wgt.         264

50%       482604                      Mean            3421359
                        Largest       Std. Dev.       9145069
75%      2412990       3.32e+07
90%      7082504       5.89e+07       Variance       8.36e+13
95%     1.82e+07       7.49e+07       Skewness       5.318845
99%     5.89e+07       7.69e+07       Kurtosis       37.14951

. 
. * annual non-operating revenues
. sum PIncomeRevNonOperatingRevenues, d

               P-IncomeRevNonOperatingRevenues
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs                 264
25%       4659.5              0       Sum of Wgt.         264

50%     306636.5                      Mean            4818773
                        Largest       Std. Dev.      2.34e+07
75%      2317144       5.92e+07
90%      7051099       1.30e+08       Variance       5.47e+14
95%     1.43e+07       1.98e+08       Skewness       9.279826
99%     1.30e+08       2.84e+08       Kurtosis       98.08323

.         
. * annual expenditures before depreciation
. sum PIncomeExpBeforeDepreciation, d

                P-IncomeExpBeforeDepreciation
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%       766378              0       Obs                 264
25%      2793193              0       Sum of Wgt.         264

50%     1.10e+07                      Mean           3.58e+07
                        Largest       Std. Dev.      7.87e+07
75%     3.69e+07       3.77e+08
90%     7.50e+07       3.78e+08       Variance       6.19e+15
95%     1.27e+08       6.43e+08       Skewness       5.556785
99%     3.78e+08       7.38e+08       Kurtosis       41.69495

. 
. * annual depreciation expense
. sum PIncomeExpDepreciation, d

                   P-IncomeExpDepreciation
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs                 264
25%       665398              0       Sum of Wgt.         264

50%      3260479                      Mean           1.09e+07
                        Largest       Std. Dev.      2.47e+07
75%     1.02e+07       9.41e+07
90%     2.60e+07       9.54e+07       Variance       6.08e+14
95%     5.19e+07       1.04e+08       Skewness       6.917104
99%     9.54e+07       2.97e+08       Kurtosis        71.8394

.         
.         
.         
. * annual net income     
. sum PIncomeExpAnnualNetIncome, d

                 P-IncomeExpAnnualNetIncome
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -5.44e+07      -1.28e+08
 5%     -4017612      -8.61e+07
10%     -1118193      -5.44e+07       Obs                 264
25%            0      -2.40e+07       Sum of Wgt.         264

50%      1005463                      Mean            5391193
                        Largest       Std. Dev.      2.08e+07
75%      5477570       7.43e+07
90%     1.81e+07       9.74e+07       Variance       4.31e+14
95%     3.13e+07       1.30e+08       Skewness       1.620461
99%     9.74e+07       1.50e+08       Kurtosis       25.40836

. hist PIncomeExpAnnualNetIncome
(bin=16, start=-1.282e+08, width=17382236)

. 
. 
. * recreate net income:
. g revenues = PIncomeRevWaterSales + PIncomeRevOther + PIncomeRevNonOperatingRevenues 

. g expenditures_no_debtservice = PIncomeExpBeforeDepreciation + PIncomeExpDepreciation + PIn
> comeExpNonoperatingExpenses

. g expenditures_debtservice = PIncomeExpDebtGeneralObligation + PIncomeExpDebtRevenueBonds +
>  PIncomeExpDebtStateRevolving + PIncomeExpDebtOther

. g net_income = revenues - expenditures_no_debt_service
expenditures_no_debt_service not found
r(111);

end of do-file

r(111);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g net_income = revenues - expenditures_no_debtservice

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum net_income, d

                         net_income
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -2.40e+07      -1.28e+08
 5%     -3923308      -8.61e+07
10%     -1544888      -2.40e+07       Obs                 264
25%            0      -2.35e+07       Sum of Wgt.         264

50%      1189910                      Mean            9314692
                        Largest       Std. Dev.      5.09e+07
75%      5684379       1.35e+08
90%     1.89e+07       1.50e+08       Variance       2.59e+15
95%     4.25e+07       2.20e+08       Skewness        11.0505
99%     1.50e+08       7.26e+08       Kurtosis       152.5225

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum PIncomeExpAnnualNetIncome, d

                 P-IncomeExpAnnualNetIncome
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -5.44e+07      -1.28e+08
 5%     -4017612      -8.61e+07
10%     -1118193      -5.44e+07       Obs                 264
25%            0      -2.40e+07       Sum of Wgt.         264

50%      1005463                      Mean            5391193
                        Largest       Std. Dev.      2.08e+07
75%      5477570       7.43e+07
90%     1.81e+07       9.74e+07       Variance       4.31e+14
95%     3.13e+07       1.30e+08       Skewness       1.620461
99%     9.74e+07       1.50e+08       Kurtosis       25.40836

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * explore CADC data
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/SCUBA"

. global dataDir = "$dir/rawdata"

. 
. 
. cd "$dir"
/Users/wichman/Dropbox/SCUBA

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * explore CADC data
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/SCUBA"

. global dataDir = "$dir/rawdata"

. 
. 
. cd "$dir"
/Users/wichman/Dropbox/SCUBA

. 
. insheet "$dataDir/mnwd.csv"
"/Users/wichman/Dropbox/SCUBA/rawdata/mnwd.csv invalid varname
r(198);

end of do-file

r(198);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. insheet "$dataDir/mnwd.csv", first allstring
"/Users/wichman/Dropbox/SCUBA/rawdata/mnwd.csv invalid varname
r(198);

end of do-file

r(198);

. help insheet

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. insheet using "$dataDir/mnwd.csv"
(48 vars, 3,836,406 obs)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 cust_loc_id |  3,836,406     1643487     2302743    1287140   1.78e+07
cust_id_fr~y |  3,836,406     39038.4    17483.51      10001      84537
location_i~y |  3,836,406     1331173     2770468     101510    9805092
cust_loc_c~s |          0
cust_lo~lity |          0
-------------+---------------------------------------------------------
cust_l~hsize |  3,836,406    4.165758    5.711864          0        704
cust_loc_~ce |          0
cust_loc_w~e |          0
cust_loc_i~r |          0
cust_loc_i~f |  3,384,417    8881.049    85701.52          1    9999999
-------------+---------------------------------------------------------
cust_loc_apn |          0
cust_loc_s~m |          0
cust_loc_~me |          0
cust_lo~city |          0
cust_lo~tate |          0
-------------+---------------------------------------------------------
cust_loc_zip |  3,836,406    92670.45    14.61559      92629      92692
cust_~t_date |          0
cust_~d_date |          0
cust_loc_i~t |          0
  utility_id |  3,836,406         147           0        147        147
-------------+---------------------------------------------------------
utility_name |          0
census_blo~m |  3,765,666    6.06e+13    1.09e+08   6.06e+13   6.06e+13
et_zone_fr~y |  3,835,484    1.06e+07    36273.44   1.05e+07   1.06e+07
cust_loc~nty |          0
cust_~titude |  3,765,666    33.56294    .0361439   33.48374   33.64141
-------------+---------------------------------------------------------
cust_~gitude |  3,765,666   -117.7011    .0238044  -117.7495  -117.6544
cust_loc_g~y |  3,835,242    .9955324    .0362793          0          1
cust_loc_g~e |          0
cust_loc_m~e |          0
cust_loc_p~e |          0
-------------+---------------------------------------------------------
cust_loc_f~s |          0
        geom |          0
cust_loc_r~s |          0
  usage_year |  3,836,406    2014.125    1.926441       2011       2017
 usage_month |  3,836,406    6.352054    3.398062          1         12
-------------+---------------------------------------------------------
usage_star~e |          0
usage_end_~e |          0
   usage_ccf |  3,836,406    22.36317    140.6237          0      28278
usage_indo~f |  3,597,103    12.93437    44.45142          0      10046
usage_outd~f |  3,597,103    21.44569    257.8063          0      65077
-------------+---------------------------------------------------------
usage_et_~nt |  3,597,103     4.09352    1.706911          0      29.06
    usage_id |  3,836,406    3.42e+07    2.63e+07   1.98e+07   8.84e+07
cust_loc_h~t |  3,836,406    2.780277    .4443044       1.83       6.77
cust_loc_i~u |  3,836,406    4848.989    30467.02          0    2591581
cust_loc_c~g |          0
-------------+---------------------------------------------------------
usage_et_~lt |  3,836,406    4.595472    1.670686    1.69473    7.37876
usage_tota~l |          0
cust_loc_e~s |          0

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_class

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
        COMMERCIAL |     86,759        2.26        2.26
     INSTITUTIONAL |      1,475        0.04        2.30
        IRRIGATION |    167,081        4.36        6.66
             OTHER |     48,702        1.27        7.92
 RESIDENTIAL_MULTI |  1,025,525       26.73       34.66
RESIDENTIAL_SINGLE |  2,506,864       65.34      100.00
-------------------+-----------------------------------
             Total |  3,836,406      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_has_variance

cust_loc_ha |
 s_variance |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |  3,831,540       99.87       99.87
          t |      4,866        0.13      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_water_type

cust_loc_wa |
   ter_type |      Freq.     Percent        Cum.
------------+-----------------------------------
    POTABLE |  3,680,671       95.94       95.94
   RECYCLED |    155,735        4.06      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_class if cus_loc_water_type == "RECYCLED"
cus_loc_water_type not found
r(111);

end of do-file

r(111);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_class if cust_loc_water_type == "RECYCLED" 

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
     INSTITUTIONAL |      1,475        0.95        0.95
        IRRIGATION |    100,960       64.83       65.78
 RESIDENTIAL_MULTI |     53,300       34.22      100.00
-------------------+-----------------------------------
             Total |    155,735      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_is_master_meter

cust_loc_is |
_master_met |
         er |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |  3,713,669       96.80       96.80
          t |    122,737        3.20      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_city

      cust_loc_city |      Freq.     Percent        Cum.
--------------------+-----------------------------------
          ALISO VIE |        121        0.00        0.00
        ALISO VIEJO |  1,008,155       26.28       26.28
         DANA POINT |     47,851        1.25       27.53
       LAGUNA HILLS |    501,147       13.06       40.59
        LAGUNA NIGU |        110        0.00       40.59
      LAGUNA NIGUEL |  1,546,074       40.30       80.89
      MISSION VIEJO |    732,111       19.08       99.98
SAN JUAN CAPISTRANO |        837        0.02      100.00
--------------------+-----------------------------------
              Total |  3,836,406      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

.         replace cust_loc_city = "ALISO VIEJO" if cust_loc_city=="ALISO VIE"
(121 real changes made)

.         replace cust_loc_city = "LAGUNA NIGUEL" if cust_loc_city=="LAGUNA NIGU"
(110 real changes made)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_city

      cust_loc_city |      Freq.     Percent        Cum.
--------------------+-----------------------------------
        ALISO VIEJO |  1,008,276       26.28       26.28
         DANA POINT |     47,851        1.25       27.53
       LAGUNA HILLS |    501,147       13.06       40.59
      LAGUNA NIGUEL |  1,546,184       40.30       80.89
      MISSION VIEJO |    732,111       19.08       99.98
SAN JUAN CAPISTRANO |        837        0.02      100.00
--------------------+-----------------------------------
              Total |  3,836,406      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_is_current

cust_loc_is |
   _current |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |    353,591        9.22        9.22
          t |  3,482,815       90.78      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab utility_name

utility_nam |
          e |      Freq.     Percent        Cum.
------------+-----------------------------------
       MNWD |  3,836,406      100.00      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab et_zone_from_utility

et_zone_fro |
  m_utility |      Freq.     Percent        Cum.
------------+-----------------------------------
   1.05e+07 |      2,940        0.08        0.08
   1.05e+07 |      5,015        0.13        0.21
   1.05e+07 |      3,508        0.09        0.30
   1.05e+07 |     32,372        0.84        1.14
   1.05e+07 |     58,748        1.53        2.67
   1.05e+07 |     32,347        0.84        3.52
   1.05e+07 |     11,384        0.30        3.81
   1.05e+07 |     22,398        0.58        4.40
   1.05e+07 |     42,257        1.10        5.50
   1.05e+07 |     37,743        0.98        6.48
   1.05e+07 |     34,312        0.89        7.38
   1.05e+07 |        268        0.01        7.39
   1.05e+07 |      4,205        0.11        7.50
   1.05e+07 |     56,498        1.47        8.97
   1.05e+07 |     12,906        0.34        9.31
   1.05e+07 |     35,107        0.92       10.22
   1.05e+07 |     23,139        0.60       10.82
   1.05e+07 |     13,605        0.35       11.18
   1.05e+07 |     35,287        0.92       12.10
   1.05e+07 |     12,720        0.33       12.43
   1.05e+07 |     34,902        0.91       13.34
   1.05e+07 |     36,985        0.96       14.30
   1.05e+07 |     70,157        1.83       16.13
   1.05e+07 |     72,453        1.89       18.02
   1.05e+07 |     47,397        1.24       19.26
   1.05e+07 |     18,674        0.49       19.75
   1.05e+07 |     48,601        1.27       21.01
   1.05e+07 |     28,824        0.75       21.76
   1.05e+07 |     53,600        1.40       23.16
   1.05e+07 |     61,916        1.61       24.78
   1.05e+07 |     27,043        0.71       25.48
   1.05e+07 |      9,399        0.25       25.73
   1.05e+07 |     54,801        1.43       27.15
   1.05e+07 |     28,567        0.74       27.90
   1.05e+07 |     52,442        1.37       29.27
   1.05e+07 |     44,437        1.16       30.43
   1.05e+07 |     18,887        0.49       30.92
   1.05e+07 |     11,524        0.30       31.22
   1.05e+07 |      3,223        0.08       31.30
   1.06e+07 |      1,200        0.03       31.33
   1.06e+07 |     31,320        0.82       32.15
   1.06e+07 |     30,709        0.80       32.95
   1.06e+07 |     31,538        0.82       33.77
   1.06e+07 |     61,377        1.60       35.37
   1.06e+07 |     47,970        1.25       36.62
   1.06e+07 |     57,319        1.49       38.12
   1.06e+07 |      9,735        0.25       38.37
   1.06e+07 |      4,573        0.12       38.49
   1.06e+07 |     24,682        0.64       39.13
   1.06e+07 |     63,814        1.66       40.80
   1.06e+07 |     47,856        1.25       42.05
   1.06e+07 |     33,873        0.88       42.93
   1.06e+07 |     84,925        2.21       45.14
   1.06e+07 |     39,120        1.02       46.16
   1.06e+07 |     11,811        0.31       46.47
   1.06e+07 |      8,862        0.23       46.70
   1.06e+07 |     36,687        0.96       47.66
   1.06e+07 |     70,844        1.85       49.51
   1.06e+07 |     65,291        1.70       51.21
   1.06e+07 |     73,662        1.92       53.13
   1.06e+07 |     64,271        1.68       54.80
   1.06e+07 |     31,223        0.81       55.62
   1.06e+07 |     22,486        0.59       56.21
   1.06e+07 |     36,566        0.95       57.16
   1.06e+07 |     23,272        0.61       57.77
   1.06e+07 |     37,541        0.98       58.74
   1.06e+07 |      6,974        0.18       58.93
   1.06e+07 |     93,431        2.44       61.36
   1.06e+07 |     61,869        1.61       62.97
   1.06e+07 |     55,215        1.44       64.41
   1.06e+07 |     43,148        1.12       65.54
   1.06e+07 |     58,254        1.52       67.06
   1.06e+07 |     28,000        0.73       67.79
   1.06e+07 |     33,633        0.88       68.67
   1.06e+07 |     18,367        0.48       69.14
   1.06e+07 |     28,918        0.75       69.90
   1.06e+07 |     19,569        0.51       70.41
   1.06e+07 |     63,172        1.65       72.06
   1.06e+07 |     16,369        0.43       72.48
   1.06e+07 |     84,881        2.21       74.70
   1.06e+07 |     43,456        1.13       75.83
   1.06e+07 |     29,274        0.76       76.59
   1.06e+07 |     52,526        1.37       77.96
   1.06e+07 |     40,199        1.05       79.01
   1.06e+07 |     40,977        1.07       80.08
   1.06e+07 |     23,115        0.60       80.68
   1.06e+07 |      8,545        0.22       80.90
   1.06e+07 |     46,146        1.20       82.11
   1.06e+07 |     44,509        1.16       83.27
   1.06e+07 |     39,861        1.04       84.31
   1.06e+07 |      6,533        0.17       84.48
   1.06e+07 |     17,024        0.44       84.92
   1.06e+07 |     47,712        1.24       86.16
   1.06e+07 |     24,061        0.63       86.79
   1.06e+07 |     33,379        0.87       87.66
   1.06e+07 |     45,359        1.18       88.84
   1.06e+07 |     15,924        0.42       89.26
   1.06e+07 |      1,722        0.04       89.30
   1.06e+07 |     19,669        0.51       89.82
   1.06e+07 |     69,786        1.82       91.64
   1.06e+07 |     61,061        1.59       93.23
   1.06e+07 |      1,788        0.05       93.27
   1.06e+07 |        345        0.01       93.28
   1.06e+07 |     25,921        0.68       93.96
   1.06e+07 |     68,815        1.79       95.75
   1.06e+07 |     31,014        0.81       96.56
   1.06e+07 |     12,996        0.34       96.90
   1.06e+07 |     87,861        2.29       99.19
   1.06e+07 |      9,019        0.24       99.43
   1.06e+07 |      8,555        0.22       99.65
   1.06e+07 |     13,414        0.35      100.00
------------+-----------------------------------
      Total |  3,835,484      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. count if cust_loc_latitiude == .
cust_loc_latitiude not found
r(111);

end of do-file

r(111);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. count if cust_loc_latitude == .
  70,740

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. count if cust_loc_longitude == .
  70,740

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_geocode_accuracy

cust_loc_ge |
ocode_accur |
        acy |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,122        0.06        0.06
         .8 |     75,061        1.96        2.01
          1 |  3,758,059       97.99      100.00
------------+-----------------------------------
      Total |  3,835,242      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_meter_size
no observations

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_class

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
        COMMERCIAL |     86,759        2.26        2.26
     INSTITUTIONAL |      1,475        0.04        2.30
        IRRIGATION |    167,081        4.36        6.66
             OTHER |     48,702        1.27        7.92
 RESIDENTIAL_MULTI |  1,025,525       26.73       34.66
RESIDENTIAL_SINGLE |  2,506,864       65.34      100.00
-------------------+-----------------------------------
             Total |  3,836,406      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. browse if cust_loc_class == "RESIDENTIAL_MULTI"

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum cust_loc_hhsize, d, if cust_loc_class == "RESIDENTIAL_MULTI"

                       cust_loc_hhsize
-------------------------------------------------------------
      Percentiles      Smallest
 1%            3              1
 5%            3              1
10%            3              1       Obs           1,025,525
25%            3              1       Sum of Wgt.   1,025,525

50%            3                      Mean           5.366384
                        Largest       Std. Dev.      10.70042
75%            3            704
90%            7            704       Variance       114.4989
95%           18            704       Skewness       14.68976
99%           40            704       Kurtosis       448.5229

. 
end of do-file

. help date

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g usage_start_date2 = date(usage_start_date, "YMD")
(74,064 missing values generated)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g usage_end_date2 = date(usage_start_date, "YMD")
(74,064 missing values generated)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g usage_days = usage_end_date2 - usage_end_date1
usage_end_date1 not found
r(111);

end of do-file

r(111);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g usage_days = usage_end_date2 - usage_start_date2
(74,064 missing values generated)

. 
end of do-file

. drop usage_start_date2 usage_end_date2 usage_days

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g usage_start_date2 = date(usage_start_date, "YMD")
(74,064 missing values generated)

. g usage_end_date2 = date(usage_end_date, "YMD")

. g usage_billing_period_days = usage_end_date2 - usage_start_date2
(74,064 missing values generated)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum usage_billing_period_days, d

                  usage_billing_period_days
-------------------------------------------------------------
      Percentiles      Smallest
 1%           27              1
 5%           27              1
10%           28              1       Obs           3,762,342
25%           28              2       Sum of Wgt.   3,762,342

50%           29                      Mean           31.85424
                        Largest       Std. Dev.      6.982083
75%           34            124
90%           35            127       Variance       48.74948
95%           36            127       Skewness       3.365571
99%           63            410       Kurtosis        17.0631

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g usage_yrmonth = usage_year*100 + usage_month 

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sort cust_loc_id usage_yrmonth

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_class if usage_start_date2==.

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
        COMMERCIAL |      2,248        3.04        3.04
     INSTITUTIONAL |         20        0.03        3.06
        IRRIGATION |      2,739        3.70        6.76
             OTHER |      1,185        1.60        8.36
 RESIDENTIAL_MULTI |     23,331       31.50       39.86
RESIDENTIAL_SINGLE |     44,541       60.14      100.00
-------------------+-----------------------------------
             Total |     74,064      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. bys cust_loc_id usage_yrmonth: replace usage_start_date2 = usage_end_date2[_n-1] if usage_s
> tart_date2==.
(60 real changes made)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sort cust_loc_id usage_yrmonth

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. bys cust_loc_id: replace usage_start_date2 = usage_end_date2[_n-1] if usage_start_date2==.
(50,818 real changes made)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * explore CADC data
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/SCUBA"

. global dataDir = "$dir/rawdata"

. 
. 
. cd "$dir"
/Users/wichman/Dropbox/SCUBA

. 
. insheet using "$dataDir/mnwd.csv"
(48 vars, 3,836,406 obs)

. sum // 3.6M obs

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 cust_loc_id |  3,836,406     1643487     2302743    1287140   1.78e+07
cust_id_fr~y |  3,836,406     39038.4    17483.51      10001      84537
location_i~y |  3,836,406     1331173     2770468     101510    9805092
cust_loc_c~s |          0
cust_lo~lity |          0
-------------+---------------------------------------------------------
cust_l~hsize |  3,836,406    4.165758    5.711864          0        704
cust_loc_~ce |          0
cust_loc_w~e |          0
cust_loc_i~r |          0
cust_loc_i~f |  3,384,417    8881.049    85701.52          1    9999999
-------------+---------------------------------------------------------
cust_loc_apn |          0
cust_loc_s~m |          0
cust_loc_~me |          0
cust_lo~city |          0
cust_lo~tate |          0
-------------+---------------------------------------------------------
cust_loc_zip |  3,836,406    92670.45    14.61559      92629      92692
cust_~t_date |          0
cust_~d_date |          0
cust_loc_i~t |          0
  utility_id |  3,836,406         147           0        147        147
-------------+---------------------------------------------------------
utility_name |          0
census_blo~m |  3,765,666    6.06e+13    1.09e+08   6.06e+13   6.06e+13
et_zone_fr~y |  3,835,484    1.06e+07    36273.44   1.05e+07   1.06e+07
cust_loc~nty |          0
cust_~titude |  3,765,666    33.56294    .0361439   33.48374   33.64141
-------------+---------------------------------------------------------
cust_~gitude |  3,765,666   -117.7011    .0238044  -117.7495  -117.6544
cust_loc_g~y |  3,835,242    .9955324    .0362793          0          1
cust_loc_g~e |          0
cust_loc_m~e |          0
cust_loc_p~e |          0
-------------+---------------------------------------------------------
cust_loc_f~s |          0
        geom |          0
cust_loc_r~s |          0
  usage_year |  3,836,406    2014.125    1.926441       2011       2017
 usage_month |  3,836,406    6.352054    3.398062          1         12
-------------+---------------------------------------------------------
usage_star~e |          0
usage_end_~e |          0
   usage_ccf |  3,836,406    22.36317    140.6237          0      28278
usage_indo~f |  3,597,103    12.93437    44.45142          0      10046
usage_outd~f |  3,597,103    21.44569    257.8063          0      65077
-------------+---------------------------------------------------------
usage_et_~nt |  3,597,103     4.09352    1.706911          0      29.06
    usage_id |  3,836,406    3.42e+07    2.63e+07   1.98e+07   8.84e+07
cust_loc_h~t |  3,836,406    2.780277    .4443044       1.83       6.77
cust_loc_i~u |  3,836,406    4848.989    30467.02          0    2591581
cust_loc_c~g |          0
-------------+---------------------------------------------------------
usage_et_~lt |  3,836,406    4.595472    1.670686    1.69473    7.37876
usage_tota~l |          0
cust_loc_e~s |          0

. 
. tab cust_loc_class

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
        COMMERCIAL |     86,759        2.26        2.26
     INSTITUTIONAL |      1,475        0.04        2.30
        IRRIGATION |    167,081        4.36        6.66
             OTHER |     48,702        1.27        7.92
 RESIDENTIAL_MULTI |  1,025,525       26.73       34.66
RESIDENTIAL_SINGLE |  2,506,864       65.34      100.00
-------------------+-----------------------------------
             Total |  3,836,406      100.00

.         /*
>                         cust_loc_class |      Freq.     Percent        Cum.
>         -------------------+-----------------------------------
>                         COMMERCIAL |     86,759        2.26        2.26
>                  INSTITUTIONAL |      1,475        0.04        2.30
>                         IRRIGATION |    167,081        4.36        6.66
>                                  OTHER |     48,702        1.27        7.92
>          RESIDENTIAL_MULTI |  1,025,525       26.73       34.66
>         RESIDENTIAL_SINGLE |  2,506,864       65.34      100.00
>         -------------------+-----------------------------------
>                                  Total |  3,836,406      100.00
>         */
. tab cust_loc_has_variance

cust_loc_ha |
 s_variance |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |  3,831,540       99.87       99.87
          t |      4,866        0.13      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab cust_loc_water_type // 4% of obs are recycled water... interesting

cust_loc_wa |
   ter_type |      Freq.     Percent        Cum.
------------+-----------------------------------
    POTABLE |  3,680,671       95.94       95.94
   RECYCLED |    155,735        4.06      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab cust_loc_class if cust_loc_water_type == "RECYCLED" 

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
     INSTITUTIONAL |      1,475        0.95        0.95
        IRRIGATION |    100,960       64.83       65.78
 RESIDENTIAL_MULTI |     53,300       34.22      100.00
-------------------+-----------------------------------
             Total |    155,735      100.00

.         * 65% are irrigation accounts
.         * 34% are multi-unit residential
.         * <1% are institutional
. tab cust_loc_is_master_meter // 3.2% of obs are master meter (?)

cust_loc_is |
_master_met |
         er |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |  3,713,669       96.80       96.80
          t |    122,737        3.20      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab cust_loc_city

      cust_loc_city |      Freq.     Percent        Cum.
--------------------+-----------------------------------
          ALISO VIE |        121        0.00        0.00
        ALISO VIEJO |  1,008,155       26.28       26.28
         DANA POINT |     47,851        1.25       27.53
       LAGUNA HILLS |    501,147       13.06       40.59
        LAGUNA NIGU |        110        0.00       40.59
      LAGUNA NIGUEL |  1,546,074       40.30       80.89
      MISSION VIEJO |    732,111       19.08       99.98
SAN JUAN CAPISTRANO |        837        0.02      100.00
--------------------+-----------------------------------
              Total |  3,836,406      100.00

.         replace cust_loc_city = "ALISO VIEJO" if cust_loc_city=="ALISO VIE"
(121 real changes made)

.         replace cust_loc_city = "LAGUNA NIGUEL" if cust_loc_city=="LAGUNA NIGU"
(110 real changes made)

. tab cust_loc_is_current // 90% true

cust_loc_is |
   _current |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |    353,591        9.22        9.22
          t |  3,482,815       90.78      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab utility_name

utility_nam |
          e |      Freq.     Percent        Cum.
------------+-----------------------------------
       MNWD |  3,836,406      100.00      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab et_zone_from_utility

et_zone_fro |
  m_utility |      Freq.     Percent        Cum.
------------+-----------------------------------
   1.05e+07 |      2,940        0.08        0.08
   1.05e+07 |      5,015        0.13        0.21
   1.05e+07 |      3,508        0.09        0.30
   1.05e+07 |     32,372        0.84        1.14
   1.05e+07 |     58,748        1.53        2.67
   1.05e+07 |     32,347        0.84        3.52
   1.05e+07 |     11,384        0.30        3.81
   1.05e+07 |     22,398        0.58        4.40
   1.05e+07 |     42,257        1.10        5.50
   1.05e+07 |     37,743        0.98        6.48
   1.05e+07 |     34,312        0.89        7.38
   1.05e+07 |        268        0.01        7.39
   1.05e+07 |      4,205        0.11        7.50
   1.05e+07 |     56,498        1.47        8.97
   1.05e+07 |     12,906        0.34        9.31
   1.05e+07 |     35,107        0.92       10.22
   1.05e+07 |     23,139        0.60       10.82
   1.05e+07 |     13,605        0.35       11.18
   1.05e+07 |     35,287        0.92       12.10
   1.05e+07 |     12,720        0.33       12.43
   1.05e+07 |     34,902        0.91       13.34
   1.05e+07 |     36,985        0.96       14.30
   1.05e+07 |     70,157        1.83       16.13
   1.05e+07 |     72,453        1.89       18.02
   1.05e+07 |     47,397        1.24       19.26
   1.05e+07 |     18,674        0.49       19.75
   1.05e+07 |     48,601        1.27       21.01
   1.05e+07 |     28,824        0.75       21.76
   1.05e+07 |     53,600        1.40       23.16
   1.05e+07 |     61,916        1.61       24.78
   1.05e+07 |     27,043        0.71       25.48
   1.05e+07 |      9,399        0.25       25.73
   1.05e+07 |     54,801        1.43       27.15
   1.05e+07 |     28,567        0.74       27.90
   1.05e+07 |     52,442        1.37       29.27
   1.05e+07 |     44,437        1.16       30.43
   1.05e+07 |     18,887        0.49       30.92
   1.05e+07 |     11,524        0.30       31.22
   1.05e+07 |      3,223        0.08       31.30
   1.06e+07 |      1,200        0.03       31.33
   1.06e+07 |     31,320        0.82       32.15
   1.06e+07 |     30,709        0.80       32.95
   1.06e+07 |     31,538        0.82       33.77
   1.06e+07 |     61,377        1.60       35.37
   1.06e+07 |     47,970        1.25       36.62
   1.06e+07 |     57,319        1.49       38.12
   1.06e+07 |      9,735        0.25       38.37
   1.06e+07 |      4,573        0.12       38.49
   1.06e+07 |     24,682        0.64       39.13
   1.06e+07 |     63,814        1.66       40.80
   1.06e+07 |     47,856        1.25       42.05
   1.06e+07 |     33,873        0.88       42.93
   1.06e+07 |     84,925        2.21       45.14
   1.06e+07 |     39,120        1.02       46.16
   1.06e+07 |     11,811        0.31       46.47
   1.06e+07 |      8,862        0.23       46.70
   1.06e+07 |     36,687        0.96       47.66
   1.06e+07 |     70,844        1.85       49.51
   1.06e+07 |     65,291        1.70       51.21
   1.06e+07 |     73,662        1.92       53.13
   1.06e+07 |     64,271        1.68       54.80
   1.06e+07 |     31,223        0.81       55.62
   1.06e+07 |     22,486        0.59       56.21
   1.06e+07 |     36,566        0.95       57.16
   1.06e+07 |     23,272        0.61       57.77
   1.06e+07 |     37,541        0.98       58.74
   1.06e+07 |      6,974        0.18       58.93
   1.06e+07 |     93,431        2.44       61.36
   1.06e+07 |     61,869        1.61       62.97
   1.06e+07 |     55,215        1.44       64.41
   1.06e+07 |     43,148        1.12       65.54
   1.06e+07 |     58,254        1.52       67.06
   1.06e+07 |     28,000        0.73       67.79
   1.06e+07 |     33,633        0.88       68.67
   1.06e+07 |     18,367        0.48       69.14
   1.06e+07 |     28,918        0.75       69.90
   1.06e+07 |     19,569        0.51       70.41
   1.06e+07 |     63,172        1.65       72.06
   1.06e+07 |     16,369        0.43       72.48
   1.06e+07 |     84,881        2.21       74.70
   1.06e+07 |     43,456        1.13       75.83
   1.06e+07 |     29,274        0.76       76.59
   1.06e+07 |     52,526        1.37       77.96
   1.06e+07 |     40,199        1.05       79.01
   1.06e+07 |     40,977        1.07       80.08
   1.06e+07 |     23,115        0.60       80.68
   1.06e+07 |      8,545        0.22       80.90
   1.06e+07 |     46,146        1.20       82.11
   1.06e+07 |     44,509        1.16       83.27
   1.06e+07 |     39,861        1.04       84.31
   1.06e+07 |      6,533        0.17       84.48
   1.06e+07 |     17,024        0.44       84.92
   1.06e+07 |     47,712        1.24       86.16
   1.06e+07 |     24,061        0.63       86.79
   1.06e+07 |     33,379        0.87       87.66
   1.06e+07 |     45,359        1.18       88.84
   1.06e+07 |     15,924        0.42       89.26
   1.06e+07 |      1,722        0.04       89.30
   1.06e+07 |     19,669        0.51       89.82
   1.06e+07 |     69,786        1.82       91.64
   1.06e+07 |     61,061        1.59       93.23
   1.06e+07 |      1,788        0.05       93.27
   1.06e+07 |        345        0.01       93.28
   1.06e+07 |     25,921        0.68       93.96
   1.06e+07 |     68,815        1.79       95.75
   1.06e+07 |     31,014        0.81       96.56
   1.06e+07 |     12,996        0.34       96.90
   1.06e+07 |     87,861        2.29       99.19
   1.06e+07 |      9,019        0.24       99.43
   1.06e+07 |      8,555        0.22       99.65
   1.06e+07 |     13,414        0.35      100.00
------------+-----------------------------------
      Total |  3,835,484      100.00

. count if cust_loc_latitude == .
  70,740

. count if cust_loc_longitude == .
  70,740

. tab cust_loc_geocode_accuracy // 98% == 1

cust_loc_ge |
ocode_accur |
        acy |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,122        0.06        0.06
         .8 |     75,061        1.96        2.01
          1 |  3,758,059       97.99      100.00
------------+-----------------------------------
      Total |  3,835,242      100.00

. 
. 
. * these are interesting: we have metered use for apartment buildings
. browse if cust_loc_class == "RESIDENTIAL_MULTI"

. sum cust_loc_hhsize, d, if cust_loc_class == "RESIDENTIAL_MULTI"

                       cust_loc_hhsize
-------------------------------------------------------------
      Percentiles      Smallest
 1%            3              1
 5%            3              1
10%            3              1       Obs           1,025,525
25%            3              1       Sum of Wgt.   1,025,525

50%            3                      Mean           5.366384
                        Largest       Std. Dev.      10.70042
75%            3            704
90%            7            704       Variance       114.4989
95%           18            704       Skewness       14.68976
99%           40            704       Kurtosis       448.5229

. 
. *
. g usage_yrmonth = usage_year*100 + usage_month 

. g usage_start_date2 = date(usage_start_date, "YMD") // 74k missing start dates
(74,064 missing values generated)

.         tab cust_loc_class if usage_start_date2==.

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
        COMMERCIAL |      2,248        3.04        3.04
     INSTITUTIONAL |         20        0.03        3.06
        IRRIGATION |      2,739        3.70        6.76
             OTHER |      1,185        1.60        8.36
 RESIDENTIAL_MULTI |     23,331       31.50       39.86
RESIDENTIAL_SINGLE |     44,541       60.14      100.00
-------------------+-----------------------------------
             Total |     74,064      100.00

. g usage_end_date2 = date(usage_end_date, "YMD")

. 
. * replace missing start dates with previous month's end date (within a billing account)
. sort cust_loc_id usage_yrmonth

. bys cust_loc_id: replace usage_start_date2 = usage_end_date2[_n-1] if usage_start_date2==.
(50,877 real changes made)

. replace g usage_billing_period_days = usage_end_date2 - usage_start_date2
variable usage_billing_period_days not found
r(111);

end of do-file

r(111);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g usage_billing_period_days = usage_end_date2 - usage_start_date2
(23,187 missing values generated)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. count if usage_billing_period_days==.
  23,187

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. bys cust_loc_id: tab _n if usage_billing_period_days==. 

---------------------------------------------------------------------------------------------
-> cust_loc_id = 1287140
variable _n not found
r(111);

end of do-file

r(111);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. bys cust_loc_id: g missingn = _n if usage_billing_period_days==. 
(3,813,219 missing values generated)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab missingn

   missingn |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |     23,187      100.00      100.00
------------+-----------------------------------
      Total |     23,187      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. drop missingn

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum usage_ccf if usage_billing_period_days==. 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   usage_ccf |     23,187    14.41334    226.1697          0      24507

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum usage_ccf

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   usage_ccf |  3,836,406    22.36317    140.6237          0      28278

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. drop if usage_billing_period_days==. 
(23,187 observations deleted)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. drop usage yr_month
usage ambiguous abbreviation
r(111);

end of do-file

r(111);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. drop usage_yrmonth

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g usage_start_month = month(usage_start_date2)

. g usage_start_year = year(usage_start_date2)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g usage_yrmonth = usage_start_year*100 + usage_start_month

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. label var usage_yrmonth "Year-month for start of billing period"

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. drop usage_start_date2 usage_end_date2

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * explore CADC data
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/SCUBA"

. cd "$dir"
/Users/wichman/Dropbox/SCUBA

. 
. 
. * moulton niguel water district
. insheet using "rawdata/mnwd.csv"
(48 vars, 3,836,406 obs)

. 
. 
. sum // 3.6M obs

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 cust_loc_id |  3,836,406     1643487     2302743    1287140   1.78e+07
cust_id_fr~y |  3,836,406     39038.4    17483.51      10001      84537
location_i~y |  3,836,406     1331173     2770468     101510    9805092
cust_loc_c~s |          0
cust_lo~lity |          0
-------------+---------------------------------------------------------
cust_l~hsize |  3,836,406    4.165758    5.711864          0        704
cust_loc_~ce |          0
cust_loc_w~e |          0
cust_loc_i~r |          0
cust_loc_i~f |  3,384,417    8881.049    85701.52          1    9999999
-------------+---------------------------------------------------------
cust_loc_apn |          0
cust_loc_s~m |          0
cust_loc_~me |          0
cust_lo~city |          0
cust_lo~tate |          0
-------------+---------------------------------------------------------
cust_loc_zip |  3,836,406    92670.45    14.61559      92629      92692
cust_~t_date |          0
cust_~d_date |          0
cust_loc_i~t |          0
  utility_id |  3,836,406         147           0        147        147
-------------+---------------------------------------------------------
utility_name |          0
census_blo~m |  3,765,666    6.06e+13    1.09e+08   6.06e+13   6.06e+13
et_zone_fr~y |  3,835,484    1.06e+07    36273.44   1.05e+07   1.06e+07
cust_loc~nty |          0
cust_~titude |  3,765,666    33.56294    .0361439   33.48374   33.64141
-------------+---------------------------------------------------------
cust_~gitude |  3,765,666   -117.7011    .0238044  -117.7495  -117.6544
cust_loc_g~y |  3,835,242    .9955324    .0362793          0          1
cust_loc_g~e |          0
cust_loc_m~e |          0
cust_loc_p~e |          0
-------------+---------------------------------------------------------
cust_loc_f~s |          0
        geom |          0
cust_loc_r~s |          0
  usage_year |  3,836,406    2014.125    1.926441       2011       2017
 usage_month |  3,836,406    6.352054    3.398062          1         12
-------------+---------------------------------------------------------
usage_star~e |          0
usage_end_~e |          0
   usage_ccf |  3,836,406    22.36317    140.6237          0      28278
usage_indo~f |  3,597,103    12.93437    44.45142          0      10046
usage_outd~f |  3,597,103    21.44569    257.8063          0      65077
-------------+---------------------------------------------------------
usage_et_~nt |  3,597,103     4.09352    1.706911          0      29.06
    usage_id |  3,836,406    3.42e+07    2.63e+07   1.98e+07   8.84e+07
cust_loc_h~t |  3,836,406    2.780277    .4443044       1.83       6.77
cust_loc_i~u |  3,836,406    4848.989    30467.02          0    2591581
cust_loc_c~g |          0
-------------+---------------------------------------------------------
usage_et_~lt |  3,836,406    4.595472    1.670686    1.69473    7.37876
usage_tota~l |          0
cust_loc_e~s |          0

. tab cust_loc_class

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
        COMMERCIAL |     86,759        2.26        2.26
     INSTITUTIONAL |      1,475        0.04        2.30
        IRRIGATION |    167,081        4.36        6.66
             OTHER |     48,702        1.27        7.92
 RESIDENTIAL_MULTI |  1,025,525       26.73       34.66
RESIDENTIAL_SINGLE |  2,506,864       65.34      100.00
-------------------+-----------------------------------
             Total |  3,836,406      100.00

.         /*
>                         cust_loc_class |      Freq.     Percent        Cum.
>         -------------------+-----------------------------------
>                         COMMERCIAL |     86,759        2.26        2.26
>                  INSTITUTIONAL |      1,475        0.04        2.30
>                         IRRIGATION |    167,081        4.36        6.66
>                                  OTHER |     48,702        1.27        7.92
>          RESIDENTIAL_MULTI |  1,025,525       26.73       34.66
>         RESIDENTIAL_SINGLE |  2,506,864       65.34      100.00
>         -------------------+-----------------------------------
>                                  Total |  3,836,406      100.00
>         */
. tab cust_loc_has_variance

cust_loc_ha |
 s_variance |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |  3,831,540       99.87       99.87
          t |      4,866        0.13      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab cust_loc_water_type // 4% of obs are recycled water... interesting

cust_loc_wa |
   ter_type |      Freq.     Percent        Cum.
------------+-----------------------------------
    POTABLE |  3,680,671       95.94       95.94
   RECYCLED |    155,735        4.06      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab cust_loc_class if cust_loc_water_type == "RECYCLED" 

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
     INSTITUTIONAL |      1,475        0.95        0.95
        IRRIGATION |    100,960       64.83       65.78
 RESIDENTIAL_MULTI |     53,300       34.22      100.00
-------------------+-----------------------------------
             Total |    155,735      100.00

.         * 65% are irrigation accounts
.         * 34% are multi-unit residential
.         * <1% are institutional
. tab cust_loc_is_master_meter // 3.2% of obs are master meter (?)

cust_loc_is |
_master_met |
         er |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |  3,713,669       96.80       96.80
          t |    122,737        3.20      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab cust_loc_city

      cust_loc_city |      Freq.     Percent        Cum.
--------------------+-----------------------------------
          ALISO VIE |        121        0.00        0.00
        ALISO VIEJO |  1,008,155       26.28       26.28
         DANA POINT |     47,851        1.25       27.53
       LAGUNA HILLS |    501,147       13.06       40.59
        LAGUNA NIGU |        110        0.00       40.59
      LAGUNA NIGUEL |  1,546,074       40.30       80.89
      MISSION VIEJO |    732,111       19.08       99.98
SAN JUAN CAPISTRANO |        837        0.02      100.00
--------------------+-----------------------------------
              Total |  3,836,406      100.00

.         replace cust_loc_city = "ALISO VIEJO" if cust_loc_city=="ALISO VIE"
(121 real changes made)

.         replace cust_loc_city = "LAGUNA NIGUEL" if cust_loc_city=="LAGUNA NIGU"
(110 real changes made)

. tab cust_loc_is_current // 90% true

cust_loc_is |
   _current |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |    353,591        9.22        9.22
          t |  3,482,815       90.78      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab utility_name

utility_nam |
          e |      Freq.     Percent        Cum.
------------+-----------------------------------
       MNWD |  3,836,406      100.00      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab et_zone_from_utility

et_zone_fro |
  m_utility |      Freq.     Percent        Cum.
------------+-----------------------------------
   1.05e+07 |      2,940        0.08        0.08
   1.05e+07 |      5,015        0.13        0.21
   1.05e+07 |      3,508        0.09        0.30
   1.05e+07 |     32,372        0.84        1.14
   1.05e+07 |     58,748        1.53        2.67
   1.05e+07 |     32,347        0.84        3.52
   1.05e+07 |     11,384        0.30        3.81
   1.05e+07 |     22,398        0.58        4.40
   1.05e+07 |     42,257        1.10        5.50
   1.05e+07 |     37,743        0.98        6.48
   1.05e+07 |     34,312        0.89        7.38
   1.05e+07 |        268        0.01        7.39
   1.05e+07 |      4,205        0.11        7.50
   1.05e+07 |     56,498        1.47        8.97
   1.05e+07 |     12,906        0.34        9.31
   1.05e+07 |     35,107        0.92       10.22
   1.05e+07 |     23,139        0.60       10.82
   1.05e+07 |     13,605        0.35       11.18
   1.05e+07 |     35,287        0.92       12.10
   1.05e+07 |     12,720        0.33       12.43
   1.05e+07 |     34,902        0.91       13.34
   1.05e+07 |     36,985        0.96       14.30
   1.05e+07 |     70,157        1.83       16.13
   1.05e+07 |     72,453        1.89       18.02
   1.05e+07 |     47,397        1.24       19.26
   1.05e+07 |     18,674        0.49       19.75
   1.05e+07 |     48,601        1.27       21.01
   1.05e+07 |     28,824        0.75       21.76
   1.05e+07 |     53,600        1.40       23.16
   1.05e+07 |     61,916        1.61       24.78
   1.05e+07 |     27,043        0.71       25.48
   1.05e+07 |      9,399        0.25       25.73
   1.05e+07 |     54,801        1.43       27.15
   1.05e+07 |     28,567        0.74       27.90
   1.05e+07 |     52,442        1.37       29.27
   1.05e+07 |     44,437        1.16       30.43
   1.05e+07 |     18,887        0.49       30.92
   1.05e+07 |     11,524        0.30       31.22
   1.05e+07 |      3,223        0.08       31.30
   1.06e+07 |      1,200        0.03       31.33
   1.06e+07 |     31,320        0.82       32.15
   1.06e+07 |     30,709        0.80       32.95
   1.06e+07 |     31,538        0.82       33.77
   1.06e+07 |     61,377        1.60       35.37
   1.06e+07 |     47,970        1.25       36.62
   1.06e+07 |     57,319        1.49       38.12
   1.06e+07 |      9,735        0.25       38.37
   1.06e+07 |      4,573        0.12       38.49
   1.06e+07 |     24,682        0.64       39.13
   1.06e+07 |     63,814        1.66       40.80
   1.06e+07 |     47,856        1.25       42.05
   1.06e+07 |     33,873        0.88       42.93
   1.06e+07 |     84,925        2.21       45.14
   1.06e+07 |     39,120        1.02       46.16
   1.06e+07 |     11,811        0.31       46.47
   1.06e+07 |      8,862        0.23       46.70
   1.06e+07 |     36,687        0.96       47.66
   1.06e+07 |     70,844        1.85       49.51
   1.06e+07 |     65,291        1.70       51.21
   1.06e+07 |     73,662        1.92       53.13
   1.06e+07 |     64,271        1.68       54.80
   1.06e+07 |     31,223        0.81       55.62
   1.06e+07 |     22,486        0.59       56.21
   1.06e+07 |     36,566        0.95       57.16
   1.06e+07 |     23,272        0.61       57.77
   1.06e+07 |     37,541        0.98       58.74
   1.06e+07 |      6,974        0.18       58.93
   1.06e+07 |     93,431        2.44       61.36
   1.06e+07 |     61,869        1.61       62.97
   1.06e+07 |     55,215        1.44       64.41
   1.06e+07 |     43,148        1.12       65.54
   1.06e+07 |     58,254        1.52       67.06
   1.06e+07 |     28,000        0.73       67.79
   1.06e+07 |     33,633        0.88       68.67
   1.06e+07 |     18,367        0.48       69.14
   1.06e+07 |     28,918        0.75       69.90
   1.06e+07 |     19,569        0.51       70.41
   1.06e+07 |     63,172        1.65       72.06
   1.06e+07 |     16,369        0.43       72.48
   1.06e+07 |     84,881        2.21       74.70
   1.06e+07 |     43,456        1.13       75.83
   1.06e+07 |     29,274        0.76       76.59
   1.06e+07 |     52,526        1.37       77.96
   1.06e+07 |     40,199        1.05       79.01
   1.06e+07 |     40,977        1.07       80.08
   1.06e+07 |     23,115        0.60       80.68
   1.06e+07 |      8,545        0.22       80.90
   1.06e+07 |     46,146        1.20       82.11
   1.06e+07 |     44,509        1.16       83.27
   1.06e+07 |     39,861        1.04       84.31
   1.06e+07 |      6,533        0.17       84.48
   1.06e+07 |     17,024        0.44       84.92
   1.06e+07 |     47,712        1.24       86.16
   1.06e+07 |     24,061        0.63       86.79
   1.06e+07 |     33,379        0.87       87.66
   1.06e+07 |     45,359        1.18       88.84
   1.06e+07 |     15,924        0.42       89.26
   1.06e+07 |      1,722        0.04       89.30
   1.06e+07 |     19,669        0.51       89.82
   1.06e+07 |     69,786        1.82       91.64
   1.06e+07 |     61,061        1.59       93.23
   1.06e+07 |      1,788        0.05       93.27
   1.06e+07 |        345        0.01       93.28
   1.06e+07 |     25,921        0.68       93.96
   1.06e+07 |     68,815        1.79       95.75
   1.06e+07 |     31,014        0.81       96.56
   1.06e+07 |     12,996        0.34       96.90
   1.06e+07 |     87,861        2.29       99.19
   1.06e+07 |      9,019        0.24       99.43
   1.06e+07 |      8,555        0.22       99.65
   1.06e+07 |     13,414        0.35      100.00
------------+-----------------------------------
      Total |  3,835,484      100.00

. count if cust_loc_latitude == .
  70,740

. count if cust_loc_longitude == .
  70,740

. tab cust_loc_geocode_accuracy // 98% == 1

cust_loc_ge |
ocode_accur |
        acy |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,122        0.06        0.06
         .8 |     75,061        1.96        2.01
          1 |  3,758,059       97.99      100.00
------------+-----------------------------------
      Total |  3,835,242      100.00

. 
. 
. * these are interesting: we have metered use for apartment buildings
. browse if cust_loc_class == "RESIDENTIAL_MULTI"

. sum cust_loc_hhsize, d, if cust_loc_class == "RESIDENTIAL_MULTI"

                       cust_loc_hhsize
-------------------------------------------------------------
      Percentiles      Smallest
 1%            3              1
 5%            3              1
10%            3              1       Obs           1,025,525
25%            3              1       Sum of Wgt.   1,025,525

50%            3                      Mean           5.366384
                        Largest       Std. Dev.      10.70042
75%            3            704
90%            7            704       Variance       114.4989
95%           18            704       Skewness       14.68976
99%           40            704       Kurtosis       448.5229

. 
. *
. g usage_yrmonth = usage_year*100 + usage_month 

. g usage_start_date2 = date(usage_start_date, "YMD") // 74k missing start dates
(74,064 missing values generated)

.         tab cust_loc_class if usage_start_date2==.

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
        COMMERCIAL |      2,248        3.04        3.04
     INSTITUTIONAL |         20        0.03        3.06
        IRRIGATION |      2,739        3.70        6.76
             OTHER |      1,185        1.60        8.36
 RESIDENTIAL_MULTI |     23,331       31.50       39.86
RESIDENTIAL_SINGLE |     44,541       60.14      100.00
-------------------+-----------------------------------
             Total |     74,064      100.00

. g usage_end_date2 = date(usage_end_date, "YMD")

. 
. * replace missing start dates with previous month's end date (within a billing account)
. sort cust_loc_id usage_yrmonth

. bys cust_loc_id: replace usage_start_date2 = usage_end_date2[_n-1] if usage_start_date2==.
(50,877 real changes made)

. g usage_billing_period_days = usage_end_date2 - usage_start_date2
(23,187 missing values generated)

. count if usage_billing_period_days==. // ~23k obs without billing period lengths
  23,187

. bys cust_loc_id: g missingn = _n if usage_billing_period_days==. 
(3,813,219 missing values generated)

. tab missingn // all missing period lengths are the first observation of an account

   missingn |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |     23,187      100.00      100.00
------------+-----------------------------------
      Total |     23,187      100.00

. drop missingn

. sum usage_ccf if usage_billing_period_days==. 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   usage_ccf |     23,187    14.41295    226.1696          0      24507

. sum usage_ccf 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   usage_ccf |  3,836,406    22.36317    140.6237          0      28278

.         /* 
>         usage tends to be smaller levels of consumption, suggesting that this consumption
>         != a full billing period. 
>         Recommendation: drop these variables and use an account's first full billing 
>         period as their first month of consumption.
>         */
. drop if usage_billing_period_days==. 
(23,187 observations deleted)

. drop usage_yrmonth

. g usage_start_month = month(usage_start_date2)

. g usage_start_year = year(usage_start_date2)

. g usage_yrmonth = usage_start_year*100 + usage_start_month

. label var usage_yrmonth "Year-month for start of billing period"

. drop usage_start_date2 usage_end_date2 usage_start_month usage_start_year

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. duplicates t cust_loc_street_num cust_loc_street_num cust_loc_street_name ///
>                    cust_loc_city usage_yrmonth, generate(dup)

Duplicates in terms of cust_loc_street_num cust_loc_street_num cust_loc_street_name
    cust_loc_city usage_yrmonth

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab dup

        dup |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |  3,488,396       91.48       91.48
          1 |     69,250        1.82       93.30
          2 |     54,207        1.42       94.72
          3 |     25,216        0.66       95.38
          4 |     21,135        0.55       95.93
          5 |     14,664        0.38       96.32
          6 |     11,452        0.30       96.62
          7 |     18,680        0.49       97.11
          8 |      8,730        0.23       97.34
          9 |      3,160        0.08       97.42
         10 |      3,421        0.09       97.51
         11 |      2,700        0.07       97.58
         12 |      3,471        0.09       97.67
         13 |        378        0.01       97.68
         14 |      3,225        0.08       97.77
         15 |        624        0.02       97.78
         16 |        697        0.02       97.80
         17 |      2,952        0.08       97.88
         18 |        418        0.01       97.89
         19 |      1,680        0.04       97.93
         20 |      3,150        0.08       98.02
         21 |      2,706        0.07       98.09
         22 |         23        0.00       98.09
         23 |      1,608        0.04       98.13
         25 |      1,560        0.04       98.17
         26 |      1,863        0.05       98.22
         29 |        300        0.01       98.23
         30 |        124        0.00       98.23
         31 |        480        0.01       98.24
         32 |      1,782        0.05       98.29
         33 |      1,258        0.03       98.32
         34 |         35        0.00       98.32
         35 |        108        0.00       98.33
         36 |      1,998        0.05       98.38
         37 |      1,444        0.04       98.42
         38 |        468        0.01       98.43
         39 |      2,600        0.07       98.50
         40 |      1,599        0.04       98.54
         41 |        126        0.00       98.54
         42 |         86        0.00       98.55
         43 |         44        0.00       98.55
         45 |        230        0.01       98.55
         46 |        235        0.01       98.56
         47 |         96        0.00       98.56
         48 |      2,695        0.07       98.63
         49 |        250        0.01       98.64
         50 |        612        0.02       98.66
         51 |      2,912        0.08       98.73
         53 |      4,104        0.11       98.84
         54 |      2,860        0.08       98.91
         66 |      2,546        0.07       98.98
         68 |        207        0.01       98.99
         69 |         70        0.00       98.99
         72 |        146        0.00       98.99
         74 |         75        0.00       98.99
         77 |         78        0.00       99.00
         80 |        162        0.00       99.00
         81 |        246        0.01       99.01
         84 |        255        0.01       99.01
         88 |         89        0.00       99.02
         91 |         92        0.00       99.02
         92 |         93        0.00       99.02
         93 |      4,794        0.13       99.15
         95 |         96        0.00       99.15
         97 |        196        0.01       99.15
         99 |        100        0.00       99.16
        102 |        103        0.00       99.16
        105 |        106        0.00       99.16
        106 |        107        0.00       99.16
        109 |        110        0.00       99.17
        113 |        114        0.00       99.17
        114 |        115        0.00       99.17
        115 |        116        0.00       99.18
        118 |        119        0.00       99.18
        119 |        120        0.00       99.18
        120 |        121        0.00       99.19
        121 |        122        0.00       99.19
        124 |        250        0.01       99.20
        126 |        127        0.00       99.20
        128 |        129        0.00       99.20
        129 |        130        0.00       99.21
        130 |        131        0.00       99.21
        133 |        134        0.00       99.21
        136 |        137        0.00       99.22
        137 |        138        0.00       99.22
        138 |        139        0.00       99.22
        140 |        141        0.00       99.23
        142 |        143        0.00       99.23
        143 |        144        0.00       99.24
        147 |        148        0.00       99.24
        149 |        150        0.00       99.24
        151 |        304        0.01       99.25
        152 |        153        0.00       99.25
        156 |        314        0.01       99.26
        157 |        158        0.00       99.27
        158 |        318        0.01       99.28
        162 |        163        0.00       99.28
        165 |        166        0.00       99.28
        166 |        167        0.00       99.29
        167 |        168        0.00       99.29
        174 |        175        0.00       99.30
        175 |        352        0.01       99.31
        177 |        178        0.00       99.31
        180 |        181        0.00       99.32
        182 |        183        0.00       99.32
        186 |        187        0.00       99.33
        187 |        188        0.00       99.33
        189 |        190        0.00       99.34
        196 |        394        0.01       99.35
        199 |        200        0.01       99.35
        206 |        207        0.01       99.36
        207 |        208        0.01       99.36
        208 |        209        0.01       99.37
        210 |        211        0.01       99.37
        211 |        212        0.01       99.38
        212 |        213        0.01       99.38
        214 |        215        0.01       99.39
        215 |        216        0.01       99.40
        217 |        436        0.01       99.41
        218 |        657        0.02       99.42
        219 |      1,100        0.03       99.45
        220 |      1,547        0.04       99.49
        221 |        888        0.02       99.52
        222 |      1,115        0.03       99.55
        223 |        448        0.01       99.56
        224 |        675        0.02       99.58
        225 |        452        0.01       99.59
        226 |        227        0.01       99.59
        240 |        241        0.01       99.60
        241 |        242        0.01       99.61
        248 |        249        0.01       99.61
        251 |        252        0.01       99.62
        259 |        260        0.01       99.63
        260 |        261        0.01       99.63
        274 |        550        0.01       99.65
        284 |        285        0.01       99.66
        291 |        292        0.01       99.66
        304 |        305        0.01       99.67
        306 |        307        0.01       99.68
        316 |        317        0.01       99.69
        321 |        322        0.01       99.70
        333 |      1,002        0.03       99.72
        334 |        335        0.01       99.73
        335 |        336        0.01       99.74
        336 |        337        0.01       99.75
        337 |        676        0.02       99.77
        338 |        339        0.01       99.77
        339 |      1,360        0.04       99.81
        340 |        682        0.02       99.83
        341 |      1,368        0.04       99.86
        342 |      2,058        0.05       99.92
        344 |      1,035        0.03       99.95
        345 |      1,038        0.03       99.97
        346 |        347        0.01       99.98
        347 |        348        0.01       99.99
        348 |        349        0.01      100.00
------------+-----------------------------------
      Total |  3,813,219      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_class if dup>0

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
        COMMERCIAL |     42,525       13.09       13.09
     INSTITUTIONAL |        820        0.25       13.34
        IRRIGATION |    104,502       32.17       45.52
             OTHER |     30,605        9.42       54.94
 RESIDENTIAL_MULTI |    143,521       44.18       99.12
RESIDENTIAL_SINGLE |      2,850        0.88      100.00
-------------------+-----------------------------------
             Total |    324,823      100.00

. 
end of do-file

. browse

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * explore CADC data
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/SCUBA"

. cd "$dir"
/Users/wichman/Dropbox/SCUBA

. 
. 
. * moulton niguel water district
. insheet using "rawdata/mnwd.csv"
(48 vars, 3,836,406 obs)

. 
. 
. sum // 3.6M obs

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 cust_loc_id |  3,836,406     1643487     2302743    1287140   1.78e+07
cust_id_fr~y |  3,836,406     39038.4    17483.51      10001      84537
location_i~y |  3,836,406     1331173     2770468     101510    9805092
cust_loc_c~s |          0
cust_lo~lity |          0
-------------+---------------------------------------------------------
cust_l~hsize |  3,836,406    4.165758    5.711864          0        704
cust_loc_~ce |          0
cust_loc_w~e |          0
cust_loc_i~r |          0
cust_loc_i~f |  3,384,417    8881.049    85701.52          1    9999999
-------------+---------------------------------------------------------
cust_loc_apn |          0
cust_loc_s~m |          0
cust_loc_~me |          0
cust_lo~city |          0
cust_lo~tate |          0
-------------+---------------------------------------------------------
cust_loc_zip |  3,836,406    92670.45    14.61559      92629      92692
cust_~t_date |          0
cust_~d_date |          0
cust_loc_i~t |          0
  utility_id |  3,836,406         147           0        147        147
-------------+---------------------------------------------------------
utility_name |          0
census_blo~m |  3,765,666    6.06e+13    1.09e+08   6.06e+13   6.06e+13
et_zone_fr~y |  3,835,484    1.06e+07    36273.44   1.05e+07   1.06e+07
cust_loc~nty |          0
cust_~titude |  3,765,666    33.56294    .0361439   33.48374   33.64141
-------------+---------------------------------------------------------
cust_~gitude |  3,765,666   -117.7011    .0238044  -117.7495  -117.6544
cust_loc_g~y |  3,835,242    .9955324    .0362793          0          1
cust_loc_g~e |          0
cust_loc_m~e |          0
cust_loc_p~e |          0
-------------+---------------------------------------------------------
cust_loc_f~s |          0
        geom |          0
cust_loc_r~s |          0
  usage_year |  3,836,406    2014.125    1.926441       2011       2017
 usage_month |  3,836,406    6.352054    3.398062          1         12
-------------+---------------------------------------------------------
usage_star~e |          0
usage_end_~e |          0
   usage_ccf |  3,836,406    22.36317    140.6237          0      28278
usage_indo~f |  3,597,103    12.93437    44.45142          0      10046
usage_outd~f |  3,597,103    21.44569    257.8063          0      65077
-------------+---------------------------------------------------------
usage_et_~nt |  3,597,103     4.09352    1.706911          0      29.06
    usage_id |  3,836,406    3.42e+07    2.63e+07   1.98e+07   8.84e+07
cust_loc_h~t |  3,836,406    2.780277    .4443044       1.83       6.77
cust_loc_i~u |  3,836,406    4848.989    30467.02          0    2591581
cust_loc_c~g |          0
-------------+---------------------------------------------------------
usage_et_~lt |  3,836,406    4.595472    1.670686    1.69473    7.37876
usage_tota~l |          0
cust_loc_e~s |          0

. tab cust_loc_class

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
        COMMERCIAL |     86,759        2.26        2.26
     INSTITUTIONAL |      1,475        0.04        2.30
        IRRIGATION |    167,081        4.36        6.66
             OTHER |     48,702        1.27        7.92
 RESIDENTIAL_MULTI |  1,025,525       26.73       34.66
RESIDENTIAL_SINGLE |  2,506,864       65.34      100.00
-------------------+-----------------------------------
             Total |  3,836,406      100.00

.         /*
>                         cust_loc_class |      Freq.     Percent        Cum.
>         -------------------+-----------------------------------
>                         COMMERCIAL |     86,759        2.26        2.26
>                  INSTITUTIONAL |      1,475        0.04        2.30
>                         IRRIGATION |    167,081        4.36        6.66
>                                  OTHER |     48,702        1.27        7.92
>          RESIDENTIAL_MULTI |  1,025,525       26.73       34.66
>         RESIDENTIAL_SINGLE |  2,506,864       65.34      100.00
>         -------------------+-----------------------------------
>                                  Total |  3,836,406      100.00
>         */
. tab cust_loc_has_variance

cust_loc_ha |
 s_variance |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |  3,831,540       99.87       99.87
          t |      4,866        0.13      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab cust_loc_water_type // 4% of obs are recycled water... interesting

cust_loc_wa |
   ter_type |      Freq.     Percent        Cum.
------------+-----------------------------------
    POTABLE |  3,680,671       95.94       95.94
   RECYCLED |    155,735        4.06      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab cust_loc_class if cust_loc_water_type == "RECYCLED" 

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
     INSTITUTIONAL |      1,475        0.95        0.95
        IRRIGATION |    100,960       64.83       65.78
 RESIDENTIAL_MULTI |     53,300       34.22      100.00
-------------------+-----------------------------------
             Total |    155,735      100.00

.         * 65% are irrigation accounts
.         * 34% are multi-unit residential
.         * <1% are institutional
. tab cust_loc_is_master_meter // 3.2% of obs are master meter (?)

cust_loc_is |
_master_met |
         er |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |  3,713,669       96.80       96.80
          t |    122,737        3.20      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab cust_loc_city

      cust_loc_city |      Freq.     Percent        Cum.
--------------------+-----------------------------------
          ALISO VIE |        121        0.00        0.00
        ALISO VIEJO |  1,008,155       26.28       26.28
         DANA POINT |     47,851        1.25       27.53
       LAGUNA HILLS |    501,147       13.06       40.59
        LAGUNA NIGU |        110        0.00       40.59
      LAGUNA NIGUEL |  1,546,074       40.30       80.89
      MISSION VIEJO |    732,111       19.08       99.98
SAN JUAN CAPISTRANO |        837        0.02      100.00
--------------------+-----------------------------------
              Total |  3,836,406      100.00

.         replace cust_loc_city = "ALISO VIEJO" if cust_loc_city=="ALISO VIE"
(121 real changes made)

.         replace cust_loc_city = "LAGUNA NIGUEL" if cust_loc_city=="LAGUNA NIGU"
(110 real changes made)

. tab cust_loc_is_current // 90% true

cust_loc_is |
   _current |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |    353,591        9.22        9.22
          t |  3,482,815       90.78      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab utility_name

utility_nam |
          e |      Freq.     Percent        Cum.
------------+-----------------------------------
       MNWD |  3,836,406      100.00      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab et_zone_from_utility

et_zone_fro |
  m_utility |      Freq.     Percent        Cum.
------------+-----------------------------------
   1.05e+07 |      2,940        0.08        0.08
   1.05e+07 |      5,015        0.13        0.21
   1.05e+07 |      3,508        0.09        0.30
   1.05e+07 |     32,372        0.84        1.14
   1.05e+07 |     58,748        1.53        2.67
   1.05e+07 |     32,347        0.84        3.52
   1.05e+07 |     11,384        0.30        3.81
   1.05e+07 |     22,398        0.58        4.40
   1.05e+07 |     42,257        1.10        5.50
   1.05e+07 |     37,743        0.98        6.48
   1.05e+07 |     34,312        0.89        7.38
   1.05e+07 |        268        0.01        7.39
   1.05e+07 |      4,205        0.11        7.50
   1.05e+07 |     56,498        1.47        8.97
   1.05e+07 |     12,906        0.34        9.31
   1.05e+07 |     35,107        0.92       10.22
   1.05e+07 |     23,139        0.60       10.82
   1.05e+07 |     13,605        0.35       11.18
   1.05e+07 |     35,287        0.92       12.10
   1.05e+07 |     12,720        0.33       12.43
   1.05e+07 |     34,902        0.91       13.34
   1.05e+07 |     36,985        0.96       14.30
   1.05e+07 |     70,157        1.83       16.13
   1.05e+07 |     72,453        1.89       18.02
   1.05e+07 |     47,397        1.24       19.26
   1.05e+07 |     18,674        0.49       19.75
   1.05e+07 |     48,601        1.27       21.01
   1.05e+07 |     28,824        0.75       21.76
   1.05e+07 |     53,600        1.40       23.16
   1.05e+07 |     61,916        1.61       24.78
   1.05e+07 |     27,043        0.71       25.48
   1.05e+07 |      9,399        0.25       25.73
   1.05e+07 |     54,801        1.43       27.15
   1.05e+07 |     28,567        0.74       27.90
   1.05e+07 |     52,442        1.37       29.27
   1.05e+07 |     44,437        1.16       30.43
   1.05e+07 |     18,887        0.49       30.92
   1.05e+07 |     11,524        0.30       31.22
   1.05e+07 |      3,223        0.08       31.30
   1.06e+07 |      1,200        0.03       31.33
   1.06e+07 |     31,320        0.82       32.15
   1.06e+07 |     30,709        0.80       32.95
   1.06e+07 |     31,538        0.82       33.77
   1.06e+07 |     61,377        1.60       35.37
   1.06e+07 |     47,970        1.25       36.62
   1.06e+07 |     57,319        1.49       38.12
   1.06e+07 |      9,735        0.25       38.37
   1.06e+07 |      4,573        0.12       38.49
   1.06e+07 |     24,682        0.64       39.13
   1.06e+07 |     63,814        1.66       40.80
   1.06e+07 |     47,856        1.25       42.05
   1.06e+07 |     33,873        0.88       42.93
   1.06e+07 |     84,925        2.21       45.14
   1.06e+07 |     39,120        1.02       46.16
   1.06e+07 |     11,811        0.31       46.47
   1.06e+07 |      8,862        0.23       46.70
   1.06e+07 |     36,687        0.96       47.66
   1.06e+07 |     70,844        1.85       49.51
   1.06e+07 |     65,291        1.70       51.21
   1.06e+07 |     73,662        1.92       53.13
   1.06e+07 |     64,271        1.68       54.80
   1.06e+07 |     31,223        0.81       55.62
   1.06e+07 |     22,486        0.59       56.21
   1.06e+07 |     36,566        0.95       57.16
   1.06e+07 |     23,272        0.61       57.77
   1.06e+07 |     37,541        0.98       58.74
   1.06e+07 |      6,974        0.18       58.93
   1.06e+07 |     93,431        2.44       61.36
   1.06e+07 |     61,869        1.61       62.97
   1.06e+07 |     55,215        1.44       64.41
   1.06e+07 |     43,148        1.12       65.54
   1.06e+07 |     58,254        1.52       67.06
   1.06e+07 |     28,000        0.73       67.79
   1.06e+07 |     33,633        0.88       68.67
   1.06e+07 |     18,367        0.48       69.14
   1.06e+07 |     28,918        0.75       69.90
   1.06e+07 |     19,569        0.51       70.41
   1.06e+07 |     63,172        1.65       72.06
   1.06e+07 |     16,369        0.43       72.48
   1.06e+07 |     84,881        2.21       74.70
   1.06e+07 |     43,456        1.13       75.83
   1.06e+07 |     29,274        0.76       76.59
   1.06e+07 |     52,526        1.37       77.96
   1.06e+07 |     40,199        1.05       79.01
   1.06e+07 |     40,977        1.07       80.08
   1.06e+07 |     23,115        0.60       80.68
   1.06e+07 |      8,545        0.22       80.90
   1.06e+07 |     46,146        1.20       82.11
   1.06e+07 |     44,509        1.16       83.27
   1.06e+07 |     39,861        1.04       84.31
   1.06e+07 |      6,533        0.17       84.48
   1.06e+07 |     17,024        0.44       84.92
   1.06e+07 |     47,712        1.24       86.16
   1.06e+07 |     24,061        0.63       86.79
   1.06e+07 |     33,379        0.87       87.66
   1.06e+07 |     45,359        1.18       88.84
   1.06e+07 |     15,924        0.42       89.26
   1.06e+07 |      1,722        0.04       89.30
   1.06e+07 |     19,669        0.51       89.82
   1.06e+07 |     69,786        1.82       91.64
   1.06e+07 |     61,061        1.59       93.23
   1.06e+07 |      1,788        0.05       93.27
   1.06e+07 |        345        0.01       93.28
   1.06e+07 |     25,921        0.68       93.96
   1.06e+07 |     68,815        1.79       95.75
   1.06e+07 |     31,014        0.81       96.56
   1.06e+07 |     12,996        0.34       96.90
   1.06e+07 |     87,861        2.29       99.19
   1.06e+07 |      9,019        0.24       99.43
   1.06e+07 |      8,555        0.22       99.65
   1.06e+07 |     13,414        0.35      100.00
------------+-----------------------------------
      Total |  3,835,484      100.00

. count if cust_loc_latitude == .
  70,740

. count if cust_loc_longitude == .
  70,740

. tab cust_loc_geocode_accuracy // 98% == 1

cust_loc_ge |
ocode_accur |
        acy |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,122        0.06        0.06
         .8 |     75,061        1.96        2.01
          1 |  3,758,059       97.99      100.00
------------+-----------------------------------
      Total |  3,835,242      100.00

. 
. 
. * these are interesting: we have metered use for apartment buildings
. * browse if cust_loc_class == "RESIDENTIAL_MULTI"
. sum cust_loc_hhsize, d, if cust_loc_class == "RESIDENTIAL_MULTI"

                       cust_loc_hhsize
-------------------------------------------------------------
      Percentiles      Smallest
 1%            3              1
 5%            3              1
10%            3              1       Obs           1,025,525
25%            3              1       Sum of Wgt.   1,025,525

50%            3                      Mean           5.366384
                        Largest       Std. Dev.      10.70042
75%            3            704
90%            7            704       Variance       114.4989
95%           18            704       Skewness       14.68976
99%           40            704       Kurtosis       448.5229

. 
. *
. g usage_yrmonth = usage_year*100 + usage_month 

. g usage_start_date2 = date(usage_start_date, "YMD") // 74k missing start dates
(74,064 missing values generated)

. g usage_end_date2 = date(usage_end_date, "YMD")

. 
. * replace missing start dates with previous month's end date (within a billing account)
. sort cust_loc_id usage_yrmonth

. bys cust_loc_id: replace usage_start_date2 = usage_end_date2[_n-1] if usage_start_date2==.
(50,877 real changes made)

. g usage_billing_period_days = usage_end_date2 - usage_start_date2
(23,187 missing values generated)

. count if usage_billing_period_days==. // ~23k obs without billing period lengths
  23,187

. bys cust_loc_id: g missingn = _n if usage_billing_period_days==. 
(3,813,219 missing values generated)

. tab missingn // all missing period lengths are the first observation of an account

   missingn |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |     23,187      100.00      100.00
------------+-----------------------------------
      Total |     23,187      100.00

. drop missingn

. sum usage_ccf if usage_billing_period_days==. 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   usage_ccf |     23,187    14.41256    226.1696          0      24507

. sum usage_ccf 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   usage_ccf |  3,836,406    22.36317    140.6237          0      28278

.         /* 
>         usage tends to be smaller levels of consumption, suggesting that this consumption
>         != a full billing period. 
>         Recommendation: drop these variables and use an account's first full billing 
>         period as their first month of consumption.
>         */
. drop usage_yrmonth usage_year usage_month // these may be based off of billing period end d
> ates

. g usage_month = month(usage_start_date2)
(23,187 missing values generated)

. g usage_year = year(usage_start_date2)
(23,187 missing values generated)

. g usage_yrmonth = usage_year*100 + usage_month
(23,187 missing values generated)

. label var usage_yrmonth "Year-month for start of billing period"

. drop usage_start_date2 usage_end_date2

. 
end of do-file

. tab cust_loc_rate_class

cust_loc_rate |
       _class |      Freq.     Percent        Cum.
--------------+-----------------------------------
   COMMERCIAL |     85,480        2.27        2.27
INSTITUTIONAL |      3,308        0.09        2.36
   IRRIGATION |     62,920        1.67        4.03
          MFR |    100,328        2.67        6.70
        OTHER |     48,537        1.29        7.99
     RECYCLED |     99,351        2.64       10.64
          SFR |  3,360,256       89.36      100.00
--------------+-----------------------------------
        Total |  3,760,180      100.00

. 
. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum usage_total_bill, d

                      usage_total_bill
-------------------------------------------------------------
no observations

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum cust_loc_extras, d // all missing

                       cust_loc_extras
-------------------------------------------------------------
no observations

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * impose sample restrictions
. ************************************
. drop if usage_billing_period_days==. // keep only first full billing period per account
(23,187 observations deleted)

. 
. * keep only key variables to save space
. keep cust_loc_id cust_loc_class cust_loc_hhsize cust_loc_water_type cust_loc_irr_area_sf //
> /
>         utility_name census_block_num et_zone_from_utility cust_loc_latitude cust_loc_longi
> tude ///
>         cust_loc_rate_class usage_start_date usage_end_date usage_ccf usage_indoor_budget_c
> cf ///
>         usage_outdoor_budget_ccf usage_et_amount usage_id cust_loc_hhsize_default ///
>         cust_loc_irr_area_sf_cgu cust_loc_cgu_area_is_avg usage_et_amount_default ///
>         usage_billing_period_days usage_month usage_year usage_yrmonth

. ************************************
. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. compress
  variable usage_billing_period_days was float now int
  variable usage_month was float now byte
  variable usage_year was float now int
  (26,692,533 bytes saved)

. save "cleandata/mnwd.dta", replace
(note: file cleandata/mnwd.dta not found)
file cleandata/mnwd.dta saved

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g usage_ccf_pd = usage_ccf / usage_billing_period_days

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. label var usage_ccf_pd "Ave. daily consumption (ccf)" 

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. bys cust_loc_class: sum usage_ccf_pd

---------------------------------------------------------------------------------------------
-> cust_loc_class = COMMERCIAL

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
usage_ccf_pd |     86,217    1.617539    4.653988          0   268.6571

---------------------------------------------------------------------------------------------
-> cust_loc_class = INSTITUTIONAL

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
usage_ccf_pd |      1,474    6.718766    19.50562          0   222.8571

---------------------------------------------------------------------------------------------
-> cust_loc_class = IRRIGATION

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
usage_ccf_pd |    166,773    4.939729     19.8188          0   842.2759

---------------------------------------------------------------------------------------------
-> cust_loc_class = OTHER

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
usage_ccf_pd |     48,465    .0295611    1.572827          0   197.2857

---------------------------------------------------------------------------------------------
-> cust_loc_class = RESIDENTIAL_MULTI

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
usage_ccf_pd |  1,016,272    .2989874    .6766409  -.6666667   86.82539

---------------------------------------------------------------------------------------------
-> cust_loc_class = RESIDENTIAL_SINGLE

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
usage_ccf_pd |  2,494,018    .4969584    .4289934  -2.133333      152.5


. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum usage_ccf

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   usage_ccf |  3,813,219    22.41151    139.9423          0      28278

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. count if usage_billing_period_days<0 
  2

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * explore CADC data
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/SCUBA"

. cd "$dir"
/Users/wichman/Dropbox/SCUBA

. 
. 
. * moulton niguel water district
. insheet using "rawdata/mnwd.csv"
(48 vars, 3,836,406 obs)

. 
. 
. sum // 3.6M obs

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 cust_loc_id |  3,836,406     1643487     2302743    1287140   1.78e+07
cust_id_fr~y |  3,836,406     39038.4    17483.51      10001      84537
location_i~y |  3,836,406     1331173     2770468     101510    9805092
cust_loc_c~s |          0
cust_lo~lity |          0
-------------+---------------------------------------------------------
cust_l~hsize |  3,836,406    4.165758    5.711864          0        704
cust_loc_~ce |          0
cust_loc_w~e |          0
cust_loc_i~r |          0
cust_loc_i~f |  3,384,417    8881.049    85701.52          1    9999999
-------------+---------------------------------------------------------
cust_loc_apn |          0
cust_loc_s~m |          0
cust_loc_~me |          0
cust_lo~city |          0
cust_lo~tate |          0
-------------+---------------------------------------------------------
cust_loc_zip |  3,836,406    92670.45    14.61559      92629      92692
cust_~t_date |          0
cust_~d_date |          0
cust_loc_i~t |          0
  utility_id |  3,836,406         147           0        147        147
-------------+---------------------------------------------------------
utility_name |          0
census_blo~m |  3,765,666    6.06e+13    1.09e+08   6.06e+13   6.06e+13
et_zone_fr~y |  3,835,484    1.06e+07    36273.44   1.05e+07   1.06e+07
cust_loc~nty |          0
cust_~titude |  3,765,666    33.56294    .0361439   33.48374   33.64141
-------------+---------------------------------------------------------
cust_~gitude |  3,765,666   -117.7011    .0238044  -117.7495  -117.6544
cust_loc_g~y |  3,835,242    .9955324    .0362793          0          1
cust_loc_g~e |          0
cust_loc_m~e |          0
cust_loc_p~e |          0
-------------+---------------------------------------------------------
cust_loc_f~s |          0
        geom |          0
cust_loc_r~s |          0
  usage_year |  3,836,406    2014.125    1.926441       2011       2017
 usage_month |  3,836,406    6.352054    3.398062          1         12
-------------+---------------------------------------------------------
usage_star~e |          0
usage_end_~e |          0
   usage_ccf |  3,836,406    22.36317    140.6237          0      28278
usage_indo~f |  3,597,103    12.93437    44.45142          0      10046
usage_outd~f |  3,597,103    21.44569    257.8063          0      65077
-------------+---------------------------------------------------------
usage_et_~nt |  3,597,103     4.09352    1.706911          0      29.06
    usage_id |  3,836,406    3.42e+07    2.63e+07   1.98e+07   8.84e+07
cust_loc_h~t |  3,836,406    2.780277    .4443044       1.83       6.77
cust_loc_i~u |  3,836,406    4848.989    30467.02          0    2591581
cust_loc_c~g |          0
-------------+---------------------------------------------------------
usage_et_~lt |  3,836,406    4.595472    1.670686    1.69473    7.37876
usage_tota~l |          0
cust_loc_e~s |          0

. tab cust_loc_class

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
        COMMERCIAL |     86,759        2.26        2.26
     INSTITUTIONAL |      1,475        0.04        2.30
        IRRIGATION |    167,081        4.36        6.66
             OTHER |     48,702        1.27        7.92
 RESIDENTIAL_MULTI |  1,025,525       26.73       34.66
RESIDENTIAL_SINGLE |  2,506,864       65.34      100.00
-------------------+-----------------------------------
             Total |  3,836,406      100.00

.         /*
>                         cust_loc_class |      Freq.     Percent        Cum.
>         -------------------+-----------------------------------
>                         COMMERCIAL |     86,759        2.26        2.26
>                  INSTITUTIONAL |      1,475        0.04        2.30
>                         IRRIGATION |    167,081        4.36        6.66
>                                  OTHER |     48,702        1.27        7.92
>          RESIDENTIAL_MULTI |  1,025,525       26.73       34.66
>         RESIDENTIAL_SINGLE |  2,506,864       65.34      100.00
>         -------------------+-----------------------------------
>                                  Total |  3,836,406      100.00
>         */
. tab cust_loc_has_variance

cust_loc_ha |
 s_variance |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |  3,831,540       99.87       99.87
          t |      4,866        0.13      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab cust_loc_water_type // 4% of obs are recycled water... interesting

cust_loc_wa |
   ter_type |      Freq.     Percent        Cum.
------------+-----------------------------------
    POTABLE |  3,680,671       95.94       95.94
   RECYCLED |    155,735        4.06      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab cust_loc_class if cust_loc_water_type == "RECYCLED" 

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
     INSTITUTIONAL |      1,475        0.95        0.95
        IRRIGATION |    100,960       64.83       65.78
 RESIDENTIAL_MULTI |     53,300       34.22      100.00
-------------------+-----------------------------------
             Total |    155,735      100.00

.         * 65% are irrigation accounts
.         * 34% are multi-unit residential
.         * <1% are institutional
. tab cust_loc_is_master_meter // 3.2% of obs are master meter (?)

cust_loc_is |
_master_met |
         er |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |  3,713,669       96.80       96.80
          t |    122,737        3.20      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab cust_loc_city

      cust_loc_city |      Freq.     Percent        Cum.
--------------------+-----------------------------------
          ALISO VIE |        121        0.00        0.00
        ALISO VIEJO |  1,008,155       26.28       26.28
         DANA POINT |     47,851        1.25       27.53
       LAGUNA HILLS |    501,147       13.06       40.59
        LAGUNA NIGU |        110        0.00       40.59
      LAGUNA NIGUEL |  1,546,074       40.30       80.89
      MISSION VIEJO |    732,111       19.08       99.98
SAN JUAN CAPISTRANO |        837        0.02      100.00
--------------------+-----------------------------------
              Total |  3,836,406      100.00

.         replace cust_loc_city = "ALISO VIEJO" if cust_loc_city=="ALISO VIE"
(121 real changes made)

.         replace cust_loc_city = "LAGUNA NIGUEL" if cust_loc_city=="LAGUNA NIGU"
(110 real changes made)

. tab cust_loc_is_current // 90% true

cust_loc_is |
   _current |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |    353,591        9.22        9.22
          t |  3,482,815       90.78      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab utility_name

utility_nam |
          e |      Freq.     Percent        Cum.
------------+-----------------------------------
       MNWD |  3,836,406      100.00      100.00
------------+-----------------------------------
      Total |  3,836,406      100.00

. tab et_zone_from_utility

et_zone_fro |
  m_utility |      Freq.     Percent        Cum.
------------+-----------------------------------
   1.05e+07 |      2,940        0.08        0.08
   1.05e+07 |      5,015        0.13        0.21
   1.05e+07 |      3,508        0.09        0.30
   1.05e+07 |     32,372        0.84        1.14
   1.05e+07 |     58,748        1.53        2.67
   1.05e+07 |     32,347        0.84        3.52
   1.05e+07 |     11,384        0.30        3.81
   1.05e+07 |     22,398        0.58        4.40
   1.05e+07 |     42,257        1.10        5.50
   1.05e+07 |     37,743        0.98        6.48
   1.05e+07 |     34,312        0.89        7.38
   1.05e+07 |        268        0.01        7.39
   1.05e+07 |      4,205        0.11        7.50
   1.05e+07 |     56,498        1.47        8.97
   1.05e+07 |     12,906        0.34        9.31
   1.05e+07 |     35,107        0.92       10.22
   1.05e+07 |     23,139        0.60       10.82
   1.05e+07 |     13,605        0.35       11.18
   1.05e+07 |     35,287        0.92       12.10
   1.05e+07 |     12,720        0.33       12.43
   1.05e+07 |     34,902        0.91       13.34
   1.05e+07 |     36,985        0.96       14.30
   1.05e+07 |     70,157        1.83       16.13
   1.05e+07 |     72,453        1.89       18.02
   1.05e+07 |     47,397        1.24       19.26
   1.05e+07 |     18,674        0.49       19.75
   1.05e+07 |     48,601        1.27       21.01
   1.05e+07 |     28,824        0.75       21.76
   1.05e+07 |     53,600        1.40       23.16
   1.05e+07 |     61,916        1.61       24.78
   1.05e+07 |     27,043        0.71       25.48
   1.05e+07 |      9,399        0.25       25.73
   1.05e+07 |     54,801        1.43       27.15
   1.05e+07 |     28,567        0.74       27.90
   1.05e+07 |     52,442        1.37       29.27
   1.05e+07 |     44,437        1.16       30.43
   1.05e+07 |     18,887        0.49       30.92
   1.05e+07 |     11,524        0.30       31.22
   1.05e+07 |      3,223        0.08       31.30
   1.06e+07 |      1,200        0.03       31.33
   1.06e+07 |     31,320        0.82       32.15
   1.06e+07 |     30,709        0.80       32.95
   1.06e+07 |     31,538        0.82       33.77
   1.06e+07 |     61,377        1.60       35.37
   1.06e+07 |     47,970        1.25       36.62
   1.06e+07 |     57,319        1.49       38.12
   1.06e+07 |      9,735        0.25       38.37
   1.06e+07 |      4,573        0.12       38.49
   1.06e+07 |     24,682        0.64       39.13
   1.06e+07 |     63,814        1.66       40.80
   1.06e+07 |     47,856        1.25       42.05
   1.06e+07 |     33,873        0.88       42.93
   1.06e+07 |     84,925        2.21       45.14
   1.06e+07 |     39,120        1.02       46.16
   1.06e+07 |     11,811        0.31       46.47
   1.06e+07 |      8,862        0.23       46.70
   1.06e+07 |     36,687        0.96       47.66
   1.06e+07 |     70,844        1.85       49.51
   1.06e+07 |     65,291        1.70       51.21
   1.06e+07 |     73,662        1.92       53.13
   1.06e+07 |     64,271        1.68       54.80
   1.06e+07 |     31,223        0.81       55.62
   1.06e+07 |     22,486        0.59       56.21
   1.06e+07 |     36,566        0.95       57.16
   1.06e+07 |     23,272        0.61       57.77
   1.06e+07 |     37,541        0.98       58.74
   1.06e+07 |      6,974        0.18       58.93
   1.06e+07 |     93,431        2.44       61.36
   1.06e+07 |     61,869        1.61       62.97
   1.06e+07 |     55,215        1.44       64.41
   1.06e+07 |     43,148        1.12       65.54
   1.06e+07 |     58,254        1.52       67.06
   1.06e+07 |     28,000        0.73       67.79
   1.06e+07 |     33,633        0.88       68.67
   1.06e+07 |     18,367        0.48       69.14
   1.06e+07 |     28,918        0.75       69.90
   1.06e+07 |     19,569        0.51       70.41
   1.06e+07 |     63,172        1.65       72.06
   1.06e+07 |     16,369        0.43       72.48
   1.06e+07 |     84,881        2.21       74.70
   1.06e+07 |     43,456        1.13       75.83
   1.06e+07 |     29,274        0.76       76.59
   1.06e+07 |     52,526        1.37       77.96
   1.06e+07 |     40,199        1.05       79.01
   1.06e+07 |     40,977        1.07       80.08
   1.06e+07 |     23,115        0.60       80.68
   1.06e+07 |      8,545        0.22       80.90
   1.06e+07 |     46,146        1.20       82.11
   1.06e+07 |     44,509        1.16       83.27
   1.06e+07 |     39,861        1.04       84.31
   1.06e+07 |      6,533        0.17       84.48
   1.06e+07 |     17,024        0.44       84.92
   1.06e+07 |     47,712        1.24       86.16
   1.06e+07 |     24,061        0.63       86.79
   1.06e+07 |     33,379        0.87       87.66
   1.06e+07 |     45,359        1.18       88.84
   1.06e+07 |     15,924        0.42       89.26
   1.06e+07 |      1,722        0.04       89.30
   1.06e+07 |     19,669        0.51       89.82
   1.06e+07 |     69,786        1.82       91.64
   1.06e+07 |     61,061        1.59       93.23
   1.06e+07 |      1,788        0.05       93.27
   1.06e+07 |        345        0.01       93.28
   1.06e+07 |     25,921        0.68       93.96
   1.06e+07 |     68,815        1.79       95.75
   1.06e+07 |     31,014        0.81       96.56
   1.06e+07 |     12,996        0.34       96.90
   1.06e+07 |     87,861        2.29       99.19
   1.06e+07 |      9,019        0.24       99.43
   1.06e+07 |      8,555        0.22       99.65
   1.06e+07 |     13,414        0.35      100.00
------------+-----------------------------------
      Total |  3,835,484      100.00

. count if cust_loc_latitude == .
  70,740

. count if cust_loc_longitude == .
  70,740

. tab cust_loc_geocode_accuracy // 98% == 1

cust_loc_ge |
ocode_accur |
        acy |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      2,122        0.06        0.06
         .8 |     75,061        1.96        2.01
          1 |  3,758,059       97.99      100.00
------------+-----------------------------------
      Total |  3,835,242      100.00

. 
. 
. * these are interesting: we have metered use for apartment buildings
. * browse if cust_loc_class == "RESIDENTIAL_MULTI"
. sum cust_loc_hhsize, d, if cust_loc_class == "RESIDENTIAL_MULTI"

                       cust_loc_hhsize
-------------------------------------------------------------
      Percentiles      Smallest
 1%            3              1
 5%            3              1
10%            3              1       Obs           1,025,525
25%            3              1       Sum of Wgt.   1,025,525

50%            3                      Mean           5.366384
                        Largest       Std. Dev.      10.70042
75%            3            704
90%            7            704       Variance       114.4989
95%           18            704       Skewness       14.68976
99%           40            704       Kurtosis       448.5229

. 
. *
. g usage_yrmonth = usage_year*100 + usage_month 

. g usage_start_date2 = date(usage_start_date, "YMD") // 74k missing start dates
(74,064 missing values generated)

. g usage_end_date2 = date(usage_end_date, "YMD")

. 
. * replace missing start dates with previous month's end date (within a billing account)
. sort cust_loc_id usage_yrmonth

. bys cust_loc_id: replace usage_start_date2 = usage_end_date2[_n-1] if usage_start_date2==.
(50,878 real changes made)

. g usage_billing_period_days = usage_end_date2 - usage_start_date2
(23,186 missing values generated)

. count if usage_billing_period_days==. // ~23k obs without billing period lengths
  23,186

. bys cust_loc_id: g missingn = _n if usage_billing_period_days==. 
(3,813,220 missing values generated)

. tab missingn // all missing period lengths are the first observation of an account

   missingn |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |     23,186      100.00      100.00
------------+-----------------------------------
      Total |     23,186      100.00

. drop missingn

. sum usage_ccf if usage_billing_period_days==. 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   usage_ccf |     23,186    14.41378    226.1745          0      24507

. sum usage_ccf 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   usage_ccf |  3,836,406    22.36317    140.6237          0      28278

.         /* 
>         usage tends to be smaller levels of consumption, suggesting that this consumption
>         != a full billing period. 
>         **Recommendation: drop these observations and use an account's first full billing 
>         period as their first month of consumption.
>         */
. drop usage_yrmonth usage_year usage_month // these may be based off of billing period end d
> ates

. g usage_month = month(usage_start_date2)
(23,186 missing values generated)

. g usage_year = year(usage_start_date2)
(23,186 missing values generated)

. g usage_yrmonth = usage_year*100 + usage_month
(23,186 missing values generated)

. label var usage_yrmonth "Year-month for start of billing period"

. drop usage_start_date2 usage_end_date2

. 
. count if usage_billing_period_days<0 // 2
  1

. 
. * check some usage variables
. sum usage_total_bill, d // all missing

                      usage_total_bill
-------------------------------------------------------------
no observations

. sum cust_loc_extras, d // all missing

                       cust_loc_extras
-------------------------------------------------------------
no observations

. 
. * create daily usage
. g usage_ccfpd = usage_ccf / usage_billing_period_days
(23,186 missing values generated)

. label var usage_ccfpd "Ave. daily consumption (ccf)" 

. 
. 
. * can we link irrigation accounts to residences?
. * TBD
. 
. 
. 
. * impose sample restrictions
. ************************************
. drop if usage_billing_period_days==. // keep only first full billing period per account
(23,186 observations deleted)

. drop if usage_billing_period_days<   // drop begative billing period lengths
invalid syntax
r(198);

end of do-file

r(198);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. drop if usage_billing_period_days<0  // drop begative billing period lengths
(1 observation deleted)

. 
. * keep only key variables to save space
. keep cust_loc_id cust_loc_class cust_loc_hhsize cust_loc_water_type cust_loc_irr_area_sf //
> /
>         utility_name census_block_num et_zone_from_utility cust_loc_latitude cust_loc_longi
> tude ///
>         cust_loc_rate_class usage_start_date usage_end_date usage_ccf usage_ccfpd ///
>         usage_indoor_budget_ccf usage_outdoor_budget_ccf usage_et_amount usage_id ///
>         cust_loc_hhsize_default cust_loc_irr_area_sf_cgu cust_loc_cgu_area_is_avg ///
>         usage_et_amount_default usage_billing_period_days usage_month usage_year usage_yrmo
> nth 

. ************************************
. 
. 
. compress
  variable usage_billing_period_days was float now int
  variable usage_month was float now byte
  variable usage_year was float now int
  (26,692,533 bytes saved)

. save "cleandata/mnwd.dta", replace
file cleandata/mnwd.dta saved

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * summary stats
. use "cleandata/mnwd.dta", replace

. 
. bys cust_loc_class: sum usage_ccf_pd

---------------------------------------------------------------------------------------------
-> cust_loc_class = COMMERCIAL
variable usage_ccf_pd not found
r(111);

end of do-file

r(111);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. bys cust_loc_class: sum usage_ccfpd

---------------------------------------------------------------------------------------------
-> cust_loc_class = COMMERCIAL

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 usage_ccfpd |     86,217    1.617539    4.653988          0   268.6571

---------------------------------------------------------------------------------------------
-> cust_loc_class = INSTITUTIONAL

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 usage_ccfpd |      1,474    6.718766    19.50562          0   222.8571

---------------------------------------------------------------------------------------------
-> cust_loc_class = IRRIGATION

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 usage_ccfpd |    166,773    4.939736     19.8188          0   842.2759

---------------------------------------------------------------------------------------------
-> cust_loc_class = OTHER

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 usage_ccfpd |     48,465    .0295611    1.572827          0   197.2857

---------------------------------------------------------------------------------------------
-> cust_loc_class = RESIDENTIAL_MULTI

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 usage_ccfpd |  1,016,271    .2989897    .6766411          0   86.82539

---------------------------------------------------------------------------------------------
-> cust_loc_class = RESIDENTIAL_SINGLE

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 usage_ccfpd |  2,494,019    .4969587    .4289921          0      152.5


. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * explore CADC data
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/SCUBA"

. cd "$dir"
/Users/wichman/Dropbox/SCUBA

. 
. 
. * moulton niguel water district
. insheet using "rawdata/mnwd.csv"
--Break--
r(1);

end of do-file

--Break--
r(1);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. 
. * summary stats
. use "cleandata/mnwd.dta", replace

. 
. bys cust_loc_class: sum usage_ccfpd

---------------------------------------------------------------------------------------------
-> cust_loc_class = COMMERCIAL

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 usage_ccfpd |     86,217    1.617539    4.653988          0   268.6571

---------------------------------------------------------------------------------------------
-> cust_loc_class = INSTITUTIONAL

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 usage_ccfpd |      1,474    6.718766    19.50562          0   222.8571

---------------------------------------------------------------------------------------------
-> cust_loc_class = IRRIGATION

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 usage_ccfpd |    166,773    4.939736     19.8188          0   842.2759

---------------------------------------------------------------------------------------------
-> cust_loc_class = OTHER

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 usage_ccfpd |     48,465    .0295611    1.572827          0   197.2857

---------------------------------------------------------------------------------------------
-> cust_loc_class = RESIDENTIAL_MULTI

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 usage_ccfpd |  1,016,271    .2989897    .6766411          0   86.82539

---------------------------------------------------------------------------------------------
-> cust_loc_class = RESIDENTIAL_SINGLE

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 usage_ccfpd |  2,494,019    .4969587    .4289921          0      152.5


. hist usage_ccfpd if cust_loc_class=="RESIDENTIAL_SINGLE"
(bin=63, start=0, width=2.4206349)

. 
. 
. 
. 
. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. hist usage_ccfpd if cust_loc_class=="RESIDENTIAL_SINGLE" & usage_ccfpd<50
(bin=63, start=0, width=.49206349)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. hist usage_ccfpd if cust_loc_class=="RESIDENTIAL_SINGLE" & usage_ccfpd<10
(bin=63, start=0, width=.15784833)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. hist usage_ccfpd if cust_loc_class=="RESIDENTIAL_SINGLE" & usage_ccfpd<5
(bin=63, start=0, width=.07892416)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. hist usage_ccfpd if cust_loc_class=="RESIDENTIAL_SINGLE" & usage_ccfpd<3
(bin=63, start=0, width=.04719005)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab usage_yrmonth

 Year-month |
  for start |
 of billing |
     period |      Freq.     Percent        Cum.
------------+-----------------------------------
     201010 |          2        0.00        0.00
     201011 |      3,028        0.08        0.08
     201012 |     37,073        0.97        1.05
     201101 |     37,923        0.99        2.05
     201102 |     37,367        0.98        3.03
     201103 |     38,197        1.00        4.03
     201104 |     37,743        0.99        5.02
     201105 |     38,595        1.01        6.03
     201106 |     38,140        1.00        7.03
     201107 |     39,067        1.02        8.05
     201108 |     38,559        1.01        9.07
     201109 |     39,502        1.04       10.10
     201110 |     39,024        1.02       11.12
     201111 |     39,934        1.05       12.17
     201112 |     39,386        1.03       13.21
     201201 |     40,337        1.06       14.26
     201202 |     39,763        1.04       15.31
     201203 |     40,669        1.07       16.37
     201204 |     40,176        1.05       17.43
     201205 |     41,131        1.08       18.50
     201206 |     40,695        1.07       19.57
     201207 |     41,715        1.09       20.67
     201208 |     41,258        1.08       21.75
     201209 |     42,334        1.11       22.86
     201210 |     41,808        1.10       23.95
     201211 |     42,819        1.12       25.08
     201212 |     42,278        1.11       26.19
     201301 |     43,310        1.14       27.32
     201302 |     42,749        1.12       28.44
     201303 |     43,911        1.15       29.59
     201304 |     43,233        1.13       30.73
     201305 |     44,482        1.17       31.89
     201306 |     43,931        1.15       33.05
     201307 |     45,208        1.19       34.23
     201308 |     44,635        1.17       35.40
     201309 |     46,041        1.21       36.61
     201310 |     45,419        1.19       37.80
     201311 |     46,655        1.22       39.02
     201312 |     46,015        1.21       40.23
     201401 |     47,221        1.24       41.47
     201402 |     46,541        1.22       42.69
     201403 |     47,773        1.25       43.94
     201404 |     47,148        1.24       45.18
     201405 |     48,461        1.27       46.45
     201406 |     47,974        1.26       47.71
     201407 |     49,363        1.29       49.00
     201408 |     48,921        1.28       50.29
     201409 |     50,331        1.32       51.61
     201410 |     49,740        1.30       52.91
     201411 |     51,150        1.34       54.25
     201412 |     50,512        1.32       55.58
     201501 |     51,821        1.36       56.94
     201502 |     50,906        1.33       58.27
     201503 |     51,818        1.36       59.63
     201504 |     50,798        1.33       60.96
     201505 |     51,850        1.36       62.32
     201506 |     50,756        1.33       63.65
     201507 |     51,727        1.36       65.01
     201508 |     50,749        1.33       66.34
     201509 |     51,790        1.36       67.70
     201510 |     50,873        1.33       69.03
     201511 |     51,949        1.36       70.39
     201512 |     54,372        1.43       71.82
     201601 |     54,495        1.43       73.25
     201602 |     54,435        1.43       74.68
     201603 |     54,383        1.43       76.10
     201604 |     54,381        1.43       77.53
     201605 |     54,358        1.43       78.95
     201606 |     54,329        1.42       80.38
     201607 |     51,851        1.36       81.74
     201608 |     47,914        1.26       83.00
     201609 |     54,039        1.42       84.41
     201610 |     54,029        1.42       85.83
     201611 |     54,098        1.42       87.25
     201612 |     54,101        1.42       88.67
     201701 |     54,122        1.42       90.09
     201702 |     54,093        1.42       91.50
     201703 |     54,019        1.42       92.92
     201704 |     54,091        1.42       94.34
     201705 |     53,998        1.42       95.76
     201706 |     53,931        1.41       97.17
     201707 |     53,988        1.42       98.59
     201708 |     53,908        1.41      100.00
------------+-----------------------------------
      Total |  3,813,219      100.00

. 
end of do-file

. help unique

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum usage_yrmonth

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
usage_yrmo~h |  3,813,219    201409.6    193.8801     201010     201708

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. unique cust_loc_id if cust_loc_class=="RESIDENTIAL_SINGLE"
RESIDENTIAL_SINGLE not found
r(111);

end of do-file

r(111);

. tab cust_loc_class

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
        COMMERCIAL |     86,217        2.26        2.26
     INSTITUTIONAL |      1,474        0.04        2.30
        IRRIGATION |    166,773        4.37        6.67
             OTHER |     48,465        1.27        7.94
 RESIDENTIAL_MULTI |  1,016,271       26.65       34.60
RESIDENTIAL_SINGLE |  2,494,019       65.40      100.00
-------------------+-----------------------------------
             Total |  3,813,219      100.00

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. unique cust_loc_id 
Number of unique values of cust_loc_id is  72153
Number of records is  3813219

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. unique cust_loc_id, by(cust_loc_class) 
Number of unique values of cust_loc_id is  72153
Number of records is  3813219
too few variables specified
r(102);

end of do-file

r(102);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. unique cust_loc_id, by(cust_loc_class) gen(counts)
Number of unique values of cust_loc_id is  72153
Number of records is  3813219
variable counts contains number of unique values of cust_loc_id by cust_loc_class

  +-----------------------------+
  |     cust_loc_class   counts |
  |-----------------------------|
  |         COMMERCIAL     2101 |
  |      INSTITUTIONAL       19 |
  |         IRRIGATION     2834 |
  |              OTHER     1106 |
  |  RESIDENTIAL_MULTI    22729 |
  |-----------------------------|
  | RESIDENTIAL_SINGLE    43364 |
  +-----------------------------+

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab usage_yrmonth 

 Year-month |
  for start |
 of billing |
     period |      Freq.     Percent        Cum.
------------+-----------------------------------
     201010 |          2        0.00        0.00
     201011 |      3,028        0.08        0.08
     201012 |     37,073        0.97        1.05
     201101 |     37,923        0.99        2.05
     201102 |     37,367        0.98        3.03
     201103 |     38,197        1.00        4.03
     201104 |     37,743        0.99        5.02
     201105 |     38,595        1.01        6.03
     201106 |     38,140        1.00        7.03
     201107 |     39,067        1.02        8.05
     201108 |     38,559        1.01        9.07
     201109 |     39,502        1.04       10.10
     201110 |     39,024        1.02       11.12
     201111 |     39,934        1.05       12.17
     201112 |     39,386        1.03       13.21
     201201 |     40,337        1.06       14.26
     201202 |     39,763        1.04       15.31
     201203 |     40,669        1.07       16.37
     201204 |     40,176        1.05       17.43
     201205 |     41,131        1.08       18.50
     201206 |     40,695        1.07       19.57
     201207 |     41,715        1.09       20.67
     201208 |     41,258        1.08       21.75
     201209 |     42,334        1.11       22.86
     201210 |     41,808        1.10       23.95
     201211 |     42,819        1.12       25.08
     201212 |     42,278        1.11       26.19
     201301 |     43,310        1.14       27.32
     201302 |     42,749        1.12       28.44
     201303 |     43,911        1.15       29.59
     201304 |     43,233        1.13       30.73
     201305 |     44,482        1.17       31.89
     201306 |     43,931        1.15       33.05
     201307 |     45,208        1.19       34.23
     201308 |     44,635        1.17       35.40
     201309 |     46,041        1.21       36.61
     201310 |     45,419        1.19       37.80
     201311 |     46,655        1.22       39.02
     201312 |     46,015        1.21       40.23
     201401 |     47,221        1.24       41.47
     201402 |     46,541        1.22       42.69
     201403 |     47,773        1.25       43.94
     201404 |     47,148        1.24       45.18
     201405 |     48,461        1.27       46.45
     201406 |     47,974        1.26       47.71
     201407 |     49,363        1.29       49.00
     201408 |     48,921        1.28       50.29
     201409 |     50,331        1.32       51.61
     201410 |     49,740        1.30       52.91
     201411 |     51,150        1.34       54.25
     201412 |     50,512        1.32       55.58
     201501 |     51,821        1.36       56.94
     201502 |     50,906        1.33       58.27
     201503 |     51,818        1.36       59.63
     201504 |     50,798        1.33       60.96
     201505 |     51,850        1.36       62.32
     201506 |     50,756        1.33       63.65
     201507 |     51,727        1.36       65.01
     201508 |     50,749        1.33       66.34
     201509 |     51,790        1.36       67.70
     201510 |     50,873        1.33       69.03
     201511 |     51,949        1.36       70.39
     201512 |     54,372        1.43       71.82
     201601 |     54,495        1.43       73.25
     201602 |     54,435        1.43       74.68
     201603 |     54,383        1.43       76.10
     201604 |     54,381        1.43       77.53
     201605 |     54,358        1.43       78.95
     201606 |     54,329        1.42       80.38
     201607 |     51,851        1.36       81.74
     201608 |     47,914        1.26       83.00
     201609 |     54,039        1.42       84.41
     201610 |     54,029        1.42       85.83
     201611 |     54,098        1.42       87.25
     201612 |     54,101        1.42       88.67
     201701 |     54,122        1.42       90.09
     201702 |     54,093        1.42       91.50
     201703 |     54,019        1.42       92.92
     201704 |     54,091        1.42       94.34
     201705 |     53,998        1.42       95.76
     201706 |     53,931        1.41       97.17
     201707 |     53,988        1.42       98.59
     201708 |     53,908        1.41      100.00
------------+-----------------------------------
      Total |  3,813,219      100.00

. 
end of do-file

. drop counts

. save "/Users/wichman/Dropbox/SCUBA/script/cleanMNWD.dta"
file /Users/wichman/Dropbox/SCUBA/script/cleanMNWD.dta saved

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * process CADC-SCUBA data for Western Municipal Water Districts
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/SCUBA"

. cd "$dir"
/Users/wichman/Dropbox/SCUBA

. 
. 
. * western municipal water districts
. insheet using "rawdata/wmwd.csv"
(48 vars, 2,097,552 obs)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum // 3.6M obs

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 cust_loc_id |  2,097,552    2.05e+07     10374.2   2.04e+07   2.05e+07
cust_id_fr~y |  2,097,552    15465.36    11585.52          2      43763
location_i~y |          0
cust_loc_c~s |          0
cust_lo~lity |  2,097,552    138.2257    168.4815          0        999
-------------+---------------------------------------------------------
cust_l~hsize |  1,947,182    4.107661    5.841713          3        821
cust_loc_~ce |          0
cust_loc_w~e |          0
cust_loc_i~r |          0
cust_loc_i~f |  1,992,766       10975    41742.17          0   1.08e+07
-------------+---------------------------------------------------------
cust_loc_apn |          0
cust_loc_s~m |  2,070,116    16655.54    8154.407          0      47980
cust_loc_~me |          0
cust_lo~city |          0
cust_lo~tate |          0
-------------+---------------------------------------------------------
cust_loc_zip |          0
cust_~t_date |          0
cust_~d_date |          0
cust_loc_i~t |          0
  utility_id |  2,097,552         142           0        142        142
-------------+---------------------------------------------------------
utility_name |          0
census_blo~m |  2,093,580    6.07e+13    6.79e+07   6.07e+13   6.07e+13
et_zone_fr~y |  2,092,291    1.08e+07    113246.8    1094077   1.10e+07
cust_loc~nty |          0
cust_~titude |  2,093,743    33.84394    .1146611   33.43306    40.7675
-------------+---------------------------------------------------------
cust_~gitude |  2,093,580   -117.3399    .0651594   -117.649  -117.1277
cust_loc_g~y |     75,059    .7604898    .1733423          0         .8
cust_loc_g~e |          0
cust_loc_m~e |          0
cust_loc_p~e |          0
-------------+---------------------------------------------------------
cust_loc_f~s |          0
        geom |          0
cust_loc_r~s |          0
  usage_year |  2,097,552    2014.018    2.337071       2009       2018
 usage_month |  2,097,552    6.441559    3.516661          1         12
-------------+---------------------------------------------------------
usage_star~e |          0
usage_end_~e |          0
   usage_ccf |  2,097,552    36.35878    324.2387          0      99977
usage_indo~f |  2,097,552    7.504431    113.7687          0    72938.5
usage_outd~f |  2,097,552    20.33173    79.65065          0    40317.7
-------------+---------------------------------------------------------
usage_et_~nt |  1,406,392    5.297527    1.883039       1.84       8.83
    usage_id |  2,097,552    1.00e+08    693804.1   9.91e+07   1.02e+08
cust_loc_h~t |  2,097,552    3.537199    .5664093        1.6       4.89
cust_loc_i~u |  2,097,552     50132.6    523699.2          0   4.51e+07
cust_loc_c~g |          0
-------------+---------------------------------------------------------
usage_et_~lt |  2,097,552    4.860378     1.85403    1.75594    8.14676
usage_tota~l |  2,097,552    128.8892     1167.81  -829938.9   139328.4
cust_loc_e~s |          0

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_class

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
      AGRICULTURAL |      7,765        0.37        0.37
        COMMERCIAL |     40,469        1.93        2.30
        INDUSTRIAL |        570        0.03        2.33
     INSTITUTIONAL |      5,924        0.28        2.61
        IRRIGATION |     46,705        2.23        4.84
             OTHER |     28,068        1.34        6.17
 RESIDENTIAL_MULTI |      2,420        0.12        6.29
RESIDENTIAL_SINGLE |  1,965,631       93.71      100.00
-------------------+-----------------------------------
             Total |  2,097,552      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_has_variance

cust_loc_ha |
 s_variance |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |  2,029,845       96.77       96.77
          t |     67,707        3.23      100.00
------------+-----------------------------------
      Total |  2,097,552      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_water_type // 4% of obs are recycled water... interesting

cust_loc_wa |
   ter_type |      Freq.     Percent        Cum.
------------+-----------------------------------
 NONPOTABLE |     10,239        0.49        0.49
      OTHER |        465        0.02        0.51
    POTABLE |  2,086,848       99.49      100.00
------------+-----------------------------------
      Total |  2,097,552      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_class if cust_loc_water_type == "nonpotable" 
no observations

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_class if cust_loc_water_type == "NONPOTABLE" 

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
      AGRICULTURAL |      4,044       39.50       39.50
        IRRIGATION |      5,572       54.42       93.92
             OTHER |        623        6.08      100.00
-------------------+-----------------------------------
             Total |     10,239      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_class if cust_loc_water_type == "OTHER" 

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
             OTHER |        465      100.00      100.00
-------------------+-----------------------------------
             Total |        465      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_is_master_meter // 3.2% of obs are master meter (?)

cust_loc_is |
_master_met |
         er |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |  2,095,132       99.88       99.88
          t |      2,420        0.12      100.00
------------+-----------------------------------
      Total |  2,097,552      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_city

       cust_loc_city |      Freq.     Percent        Cum.
---------------------+-----------------------------------
BETWEEN COTTONWOOD & |          4        0.00        0.00
              CORONA |        623        0.03        0.03
         GLEN VALLEY |         39        0.00        0.03
       Gavilan Hills |          5        0.00        0.03
         LAKE MATHEW |         90        0.00        0.04
        LAKE MATHEWS |         92        0.00        0.04
       Lake Matthews |         11        0.00        0.04
       MORENO VALLEY |        605        0.03        0.07
            MURRIETA |    239,158       11.45       11.52
            Murrieta |        204        0.01       11.53
    N OF REGENCY CIR |         93        0.00       11.54
              PERRIS |    196,460        9.41       20.95
              Perris |        461        0.02       20.97
          RIVBERSIDE |         45        0.00       20.97
           RIVERSIDE |  1,644,306       78.74       99.71
          RIVERSIDEC |         61        0.00       99.72
            RIVESIDE |         53        0.00       99.72
           Riverside |      1,882        0.09       99.81
            TEMECULA |      3,997        0.19      100.00
---------------------+-----------------------------------
               Total |  2,088,189      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

.         replace cust_loc_city = upper(cust_loc_city)
(2,563 real changes made)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_city

       cust_loc_city |      Freq.     Percent        Cum.
---------------------+-----------------------------------
BETWEEN COTTONWOOD & |          4        0.00        0.00
              CORONA |        623        0.03        0.03
       GAVILAN HILLS |          5        0.00        0.03
         GLEN VALLEY |         39        0.00        0.03
         LAKE MATHEW |         90        0.00        0.04
        LAKE MATHEWS |         92        0.00        0.04
       LAKE MATTHEWS |         11        0.00        0.04
       MORENO VALLEY |        605        0.03        0.07
            MURRIETA |    239,362       11.46       11.53
    N OF REGENCY CIR |         93        0.00       11.54
              PERRIS |    196,921        9.43       20.97
          RIVBERSIDE |         45        0.00       20.97
           RIVERSIDE |  1,646,188       78.83       99.80
          RIVERSIDEC |         61        0.00       99.81
            RIVESIDE |         53        0.00       99.81
            TEMECULA |      3,997        0.19      100.00
---------------------+-----------------------------------
               Total |  2,088,189      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

.         replace cust_loc_city = "LAKE MATHEWS" if cust_loc_city=="LAKE MATHEW"
(90 real changes made)

.         replace cust_loc_city = "LAKE MATHEWS" if cust_loc_city=="LAKE MATTHEWS"
(11 real changes made)

.         replace cust_loc_city = "RIVERSIDE" if cust_loc_city=="RIVBERSIDE"
(45 real changes made)

.         replace cust_loc_city = "RIVERSIDE" if cust_loc_city=="RIVBERSIDE"
(0 real changes made)

.         replace cust_loc_city = "RIVERSIDE" if cust_loc_city=="RIVERCIDEC"
(0 real changes made)

.         replace cust_loc_city = "RIVERSIDE" if cust_loc_city=="RIVESIDE"
(53 real changes made)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

.         replace cust_loc_city = "RIVERSIDE" if cust_loc_city=="RIVERSIDEC"
(61 real changes made)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_city

       cust_loc_city |      Freq.     Percent        Cum.
---------------------+-----------------------------------
BETWEEN COTTONWOOD & |          4        0.00        0.00
              CORONA |        623        0.03        0.03
       GAVILAN HILLS |          5        0.00        0.03
         GLEN VALLEY |         39        0.00        0.03
        LAKE MATHEWS |        193        0.01        0.04
       MORENO VALLEY |        605        0.03        0.07
            MURRIETA |    239,362       11.46       11.53
    N OF REGENCY CIR |         93        0.00       11.54
              PERRIS |    196,921        9.43       20.97
           RIVERSIDE |  1,646,347       78.84       99.81
            TEMECULA |      3,997        0.19      100.00
---------------------+-----------------------------------
               Total |  2,088,189      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_is_current // 90% true

cust_loc_is |
   _current |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |    457,135       21.79       21.79
          t |  1,640,417       78.21      100.00
------------+-----------------------------------
      Total |  2,097,552      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab utility_name

utility_nam |
          e |      Freq.     Percent        Cum.
------------+-----------------------------------
       WMWD |  2,097,552      100.00      100.00
------------+-----------------------------------
      Total |  2,097,552      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab et_zone_from_utility

et_zone_fro |
  m_utility |      Freq.     Percent        Cum.
------------+-----------------------------------
    1094077 |         48        0.00        0.00
   1.04e+07 |        634        0.03        0.03
   1.04e+07 |        270        0.01        0.05
   1.04e+07 |      1,147        0.05        0.10
   1.04e+07 |        434        0.02        0.12
   1.05e+07 |      1,461        0.07        0.19
   1.05e+07 |        917        0.04        0.23
   1.05e+07 |      3,814        0.18        0.42
   1.05e+07 |        341        0.02        0.43
   1.05e+07 |        181        0.01        0.44
   1.06e+07 |      1,778        0.08        0.53
   1.06e+07 |     15,726        0.75        1.28
   1.06e+07 |     21,568        1.03        2.31
   1.06e+07 |      6,933        0.33        2.64
   1.06e+07 |      2,708        0.13        2.77
   1.06e+07 |      1,067        0.05        2.82
   1.06e+07 |     15,240        0.73        3.55
   1.06e+07 |     26,967        1.29        4.84
   1.06e+07 |      8,764        0.42        5.26
   1.06e+07 |      4,494        0.21        5.47
   1.06e+07 |        359        0.02        5.49
   1.06e+07 |     24,362        1.16        6.65
   1.06e+07 |     32,419        1.55        8.20
   1.06e+07 |     11,006        0.53        8.73
   1.06e+07 |        417        0.02        8.75
   1.06e+07 |     27,670        1.32       10.07
   1.06e+07 |     16,437        0.79       10.86
   1.08e+07 |        385        0.02       10.88
   1.08e+07 |      1,186        0.06       10.93
   1.08e+07 |      4,287        0.20       11.14
   1.08e+07 |      2,038        0.10       11.23
   1.08e+07 |         13        0.00       11.24
   1.08e+07 |        101        0.00       11.24
   1.08e+07 |         39        0.00       11.24
   1.08e+07 |        579        0.03       11.27
   1.08e+07 |      2,493        0.12       11.39
   1.08e+07 |      4,162        0.20       11.59
   1.08e+07 |     10,512        0.50       12.09
   1.08e+07 |      3,162        0.15       12.24
   1.08e+07 |        183        0.01       12.25
   1.08e+07 |         88        0.00       12.25
   1.08e+07 |        179        0.01       12.26
   1.08e+07 |        342        0.02       12.28
   1.08e+07 |      2,352        0.11       12.39
   1.08e+07 |      3,465        0.17       12.56
   1.08e+07 |      4,121        0.20       12.75
   1.08e+07 |      2,025        0.10       12.85
   1.08e+07 |      1,169        0.06       12.91
   1.08e+07 |      1,646        0.08       12.99
   1.08e+07 |        183        0.01       12.99
   1.08e+07 |      2,443        0.12       13.11
   1.08e+07 |         92        0.00       13.12
   1.08e+07 |        361        0.02       13.13
   1.08e+07 |     11,648        0.56       13.69
   1.08e+07 |        455        0.02       13.71
   1.08e+07 |      1,412        0.07       13.78
   1.08e+07 |      1,757        0.08       13.86
   1.08e+07 |        547        0.03       13.89
   1.08e+07 |      5,840        0.28       14.17
   1.08e+07 |      3,710        0.18       14.34
   1.08e+07 |      1,214        0.06       14.40
   1.08e+07 |      1,926        0.09       14.49
   1.08e+07 |         91        0.00       14.50
   1.08e+07 |     12,780        0.61       15.11
   1.08e+07 |        694        0.03       15.14
   1.08e+07 |      2,734        0.13       15.27
   1.08e+07 |        177        0.01       15.28
   1.08e+07 |         92        0.00       15.29
   1.08e+07 |      3,721        0.18       15.46
   1.08e+07 |      4,536        0.22       15.68
   1.08e+07 |      4,999        0.24       15.92
   1.08e+07 |      3,321        0.16       16.08
   1.08e+07 |      2,671        0.13       16.21
   1.08e+07 |      4,509        0.22       16.42
   1.08e+07 |      1,938        0.09       16.51
   1.08e+07 |         17        0.00       16.52
   1.08e+07 |         93        0.00       16.52
   1.08e+07 |        179        0.01       16.53
   1.08e+07 |        171        0.01       16.54
   1.08e+07 |      1,468        0.07       16.61
   1.08e+07 |      2,650        0.13       16.73
   1.08e+07 |      4,712        0.23       16.96
   1.08e+07 |      2,017        0.10       17.06
   1.08e+07 |      7,866        0.38       17.43
   1.08e+07 |         83        0.00       17.44
   1.08e+07 |         12        0.00       17.44
   1.08e+07 |      1,662        0.08       17.52
   1.08e+07 |      1,569        0.07       17.59
   1.08e+07 |      7,249        0.35       17.94
   1.08e+07 |      2,793        0.13       18.07
   1.08e+07 |     13,060        0.62       18.69
   1.08e+07 |     12,398        0.59       19.29
   1.09e+07 |        265        0.01       19.30
   1.09e+07 |          4        0.00       19.30
   1.09e+07 |      3,725        0.18       19.48
   1.09e+07 |      6,816        0.33       19.80
   1.09e+07 |     13,063        0.62       20.43
   1.09e+07 |     14,425        0.69       21.12
   1.09e+07 |      7,633        0.36       21.48
   1.09e+07 |     10,148        0.49       21.97
   1.09e+07 |      3,766        0.18       22.15
   1.09e+07 |      9,050        0.43       22.58
   1.09e+07 |     20,498        0.98       23.56
   1.09e+07 |     33,977        1.62       25.18
   1.09e+07 |        379        0.02       25.20
   1.09e+07 |        843        0.04       25.24
   1.09e+07 |        534        0.03       25.27
   1.09e+07 |      1,461        0.07       25.34
   1.09e+07 |      1,570        0.08       25.41
   1.09e+07 |      7,388        0.35       25.77
   1.09e+07 |     13,425        0.64       26.41
   1.09e+07 |     18,816        0.90       27.31
   1.09e+07 |      7,489        0.36       27.66
   1.09e+07 |      2,953        0.14       27.81
   1.09e+07 |     11,052        0.53       28.33
   1.09e+07 |      5,412        0.26       28.59
   1.09e+07 |        716        0.03       28.63
   1.09e+07 |      3,446        0.16       28.79
   1.09e+07 |     15,601        0.75       29.54
   1.09e+07 |      7,974        0.38       29.92
   1.09e+07 |     27,115        1.30       31.21
   1.09e+07 |     38,079        1.82       33.03
   1.09e+07 |     21,502        1.03       34.06
   1.09e+07 |      2,528        0.12       34.18
   1.09e+07 |      3,332        0.16       34.34
   1.09e+07 |      8,083        0.39       34.73
   1.09e+07 |      2,184        0.10       34.83
   1.09e+07 |      8,029        0.38       35.22
   1.09e+07 |      6,025        0.29       35.50
   1.09e+07 |      6,258        0.30       35.80
   1.09e+07 |      6,064        0.29       36.09
   1.09e+07 |      5,970        0.29       36.38
   1.09e+07 |     17,212        0.82       37.20
   1.09e+07 |     15,774        0.75       37.95
   1.09e+07 |      8,726        0.42       38.37
   1.09e+07 |      2,988        0.14       38.51
   1.09e+07 |        275        0.01       38.53
   1.09e+07 |     21,238        1.02       39.54
   1.09e+07 |         88        0.00       39.55
   1.09e+07 |        249        0.01       39.56
   1.09e+07 |      1,271        0.06       39.62
   1.09e+07 |     29,155        1.39       41.01
   1.09e+07 |     23,772        1.14       42.15
   1.09e+07 |      7,988        0.38       42.53
   1.09e+07 |      6,771        0.32       42.85
   1.09e+07 |      1,124        0.05       42.91
   1.09e+07 |     12,554        0.60       43.51
   1.09e+07 |     30,926        1.48       44.99
   1.09e+07 |      5,976        0.29       45.27
   1.09e+07 |     12,600        0.60       45.87
   1.09e+07 |     16,125        0.77       46.64
   1.09e+07 |     17,533        0.84       47.48
   1.09e+07 |     15,749        0.75       48.24
   1.09e+07 |     16,172        0.77       49.01
   1.09e+07 |     38,897        1.86       50.87
   1.09e+07 |     40,560        1.94       52.81
   1.09e+07 |     60,533        2.89       55.70
   1.09e+07 |     12,087        0.58       56.28
   1.09e+07 |      1,452        0.07       56.35
   1.09e+07 |     12,301        0.59       56.93
   1.09e+07 |         90        0.00       56.94
   1.09e+07 |        427        0.02       56.96
   1.09e+07 |         89        0.00       56.96
   1.09e+07 |      2,011        0.10       57.06
   1.09e+07 |        369        0.02       57.08
   1.09e+07 |      2,126        0.10       57.18
   1.09e+07 |      4,151        0.20       57.38
   1.09e+07 |      4,461        0.21       57.59
   1.09e+07 |      1,620        0.08       57.67
   1.09e+07 |     16,021        0.77       58.43
   1.09e+07 |     18,113        0.87       59.30
   1.09e+07 |      5,070        0.24       59.54
   1.09e+07 |      5,798        0.28       59.82
   1.09e+07 |     20,362        0.97       60.79
   1.09e+07 |     36,807        1.76       62.55
   1.09e+07 |     69,914        3.34       65.89
   1.09e+07 |     55,868        2.67       68.56
   1.09e+07 |     55,636        2.66       71.22
   1.09e+07 |     26,415        1.26       72.48
   1.09e+07 |        595        0.03       72.51
   1.09e+07 |        691        0.03       72.55
   1.09e+07 |        174        0.01       72.55
   1.09e+07 |      8,304        0.40       72.95
   1.09e+07 |      7,742        0.37       73.32
   1.09e+07 |      1,530        0.07       73.39
   1.09e+07 |     10,122        0.48       73.88
   1.09e+07 |     17,207        0.82       74.70
   1.09e+07 |     35,968        1.72       76.42
   1.09e+07 |     60,837        2.91       79.33
   1.09e+07 |     15,094        0.72       80.05
   1.09e+07 |     50,644        2.42       82.47
   1.09e+07 |     28,498        1.36       83.83
   1.09e+07 |      1,777        0.08       83.92
   1.09e+07 |        133        0.01       83.92
   1.09e+07 |        672        0.03       83.95
   1.09e+07 |        448        0.02       83.98
   1.09e+07 |      3,287        0.16       84.13
   1.09e+07 |     12,836        0.61       84.75
   1.09e+07 |     34,272        1.64       86.38
   1.09e+07 |     57,444        2.75       89.13
   1.09e+07 |     66,289        3.17       92.30
   1.09e+07 |      2,419        0.12       92.41
   1.09e+07 |      1,443        0.07       92.48
   1.09e+07 |        709        0.03       92.52
   1.09e+07 |        259        0.01       92.53
   1.09e+07 |        326        0.02       92.54
   1.09e+07 |        631        0.03       92.57
   1.09e+07 |     15,270        0.73       93.30
   1.09e+07 |     50,097        2.39       95.70
   1.09e+07 |     11,801        0.56       96.26
   1.09e+07 |      5,291        0.25       96.52
   1.09e+07 |      2,207        0.11       96.62
   1.09e+07 |      2,771        0.13       96.75
   1.09e+07 |        666        0.03       96.79
   1.09e+07 |      5,449        0.26       97.05
   1.09e+07 |     28,835        1.38       98.42
   1.09e+07 |     26,477        1.27       99.69
   1.09e+07 |      3,918        0.19       99.88
   1.09e+07 |        872        0.04       99.92
   1.09e+07 |      1,525        0.07       99.99
   1.10e+07 |        180        0.01      100.00
------------+-----------------------------------
      Total |  2,092,291      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. count if cust_loc_latitude == .
  3,809

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. count if cust_loc_longitude == .
  3,972

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_geocode_accuracy // 98% == 1

cust_loc_ge |
ocode_accur |
        acy |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      3,707        4.94        4.94
         .8 |     71,352       95.06      100.00
------------+-----------------------------------
      Total |     75,059      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g usage_yrmonth = usage_year*100 + usage_month 

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g usage_start_date2 = date(usage_start_date, "YMD") // 74k missing start dates

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. count if usage_start_date2 == . // 74k missing start dates
  0

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g usage_end_date2 = date(usage_end_date, "YMD")

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * replace missing start dates with previous month's end date (within a billing account)
. sort cust_loc_id usage_yrmonth

. bys cust_loc_id: replace usage_start_date2 = usage_end_date2[_n-1] if usage_start_date2==.
(0 real changes made)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g usage_billing_period_days = usage_end_date2 - usage_start_date2

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. count if usage_billing_period_days==. // ~23k obs without billing period lengths
  0

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. bys cust_loc_id: g missingn = _n if usage_billing_period_days==. 
(2,097,552 missing values generated)

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab missingn // all missing period lengths are the first observation of an account
no observations

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. drop usage_yrmonth usage_year usage_month // these may be based off of billing period end d
> ates

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. g usage_month = month(usage_start_date2)

. g usage_year = year(usage_start_date2)

. g usage_yrmonth = usage_year*100 + usage_month

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. label var usage_yrmonth "Year-month for start of billing period"

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. drop usage_start_date2 usage_end_date2

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. count if usage_billing_period_days<0 // 2
  0

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. sum usage_total_bill, d // all missing

                      usage_total_bill
-------------------------------------------------------------
      Percentiles      Smallest
 1%        22.38      -829938.9
 5%        32.44      -586475.5
10%        39.97      -580836.8       Obs           2,097,552
25%        54.16      -580444.9       Sum of Wgt.   2,097,552

50%        77.64                      Mean           128.8892
                        Largest       Std. Dev.       1167.81
75%       120.16       92868.51
90%       193.96       97175.43       Variance        1363780
95%       277.02       100802.8       Skewness        -343.64
99%       779.22       139328.4       Kurtosis       212688.5

. sum cust_loc_extras, d // all missing

                       cust_loc_extras
-------------------------------------------------------------
no observations

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. tab cust_loc_extras

cust_loc_ex |
       tras |      Freq.     Percent        Cum.
------------+-----------------------------------
       : 0} |          1        0.00        0.00
      : 10} |      3,727        0.18        0.18
      : 11} |        270        0.01        0.19
       : 1} |  1,217,031       58.02       58.21
       : 2} |    483,180       23.04       81.25
       : 3} |     40,151        1.91       83.16
       : 4} |     27,253        1.30       84.46
       : 5} |     51,567        2.46       86.92
       : 6} |     30,885        1.47       88.39
       : 7} |    197,623        9.42       97.81
       : 8} |     41,653        1.99       99.80
       : 9} |      4,211        0.20      100.00
------------+-----------------------------------
      Total |  2,097,552      100.00

. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * process CADC-SCUBA data for Western Municipal Water Districts
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/SCUBA"

. cd "$dir"
/Users/wichman/Dropbox/SCUBA

. 
. 
. * western municipal water districts
. insheet using "rawdata/wmwd.csv"
(48 vars, 2,097,552 obs)

. 
. 
. sum // 2.09M obs

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 cust_loc_id |  2,097,552    2.05e+07     10374.2   2.04e+07   2.05e+07
cust_id_fr~y |  2,097,552    15465.36    11585.52          2      43763
location_i~y |          0
cust_loc_c~s |          0
cust_lo~lity |  2,097,552    138.2257    168.4815          0        999
-------------+---------------------------------------------------------
cust_l~hsize |  1,947,182    4.107661    5.841713          3        821
cust_loc_~ce |          0
cust_loc_w~e |          0
cust_loc_i~r |          0
cust_loc_i~f |  1,992,766       10975    41742.17          0   1.08e+07
-------------+---------------------------------------------------------
cust_loc_apn |          0
cust_loc_s~m |  2,070,116    16655.54    8154.407          0      47980
cust_loc_~me |          0
cust_lo~city |          0
cust_lo~tate |          0
-------------+---------------------------------------------------------
cust_loc_zip |          0
cust_~t_date |          0
cust_~d_date |          0
cust_loc_i~t |          0
  utility_id |  2,097,552         142           0        142        142
-------------+---------------------------------------------------------
utility_name |          0
census_blo~m |  2,093,580    6.07e+13    6.79e+07   6.07e+13   6.07e+13
et_zone_fr~y |  2,092,291    1.08e+07    113246.8    1094077   1.10e+07
cust_loc~nty |          0
cust_~titude |  2,093,743    33.84394    .1146611   33.43306    40.7675
-------------+---------------------------------------------------------
cust_~gitude |  2,093,580   -117.3399    .0651594   -117.649  -117.1277
cust_loc_g~y |     75,059    .7604898    .1733423          0         .8
cust_loc_g~e |          0
cust_loc_m~e |          0
cust_loc_p~e |          0
-------------+---------------------------------------------------------
cust_loc_f~s |          0
        geom |          0
cust_loc_r~s |          0
  usage_year |  2,097,552    2014.018    2.337071       2009       2018
 usage_month |  2,097,552    6.441559    3.516661          1         12
-------------+---------------------------------------------------------
usage_star~e |          0
usage_end_~e |          0
   usage_ccf |  2,097,552    36.35878    324.2387          0      99977
usage_indo~f |  2,097,552    7.504431    113.7687          0    72938.5
usage_outd~f |  2,097,552    20.33173    79.65065          0    40317.7
-------------+---------------------------------------------------------
usage_et_~nt |  1,406,392    5.297527    1.883039       1.84       8.83
    usage_id |  2,097,552    1.00e+08    693804.1   9.91e+07   1.02e+08
cust_loc_h~t |  2,097,552    3.537199    .5664093        1.6       4.89
cust_loc_i~u |  2,097,552     50132.6    523699.2          0   4.51e+07
cust_loc_c~g |          0
-------------+---------------------------------------------------------
usage_et_~lt |  2,097,552    4.860378     1.85403    1.75594    8.14676
usage_tota~l |  2,097,552    128.8892     1167.81  -829938.9   139328.4
cust_loc_e~s |          0

. tab cust_loc_class

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
      AGRICULTURAL |      7,765        0.37        0.37
        COMMERCIAL |     40,469        1.93        2.30
        INDUSTRIAL |        570        0.03        2.33
     INSTITUTIONAL |      5,924        0.28        2.61
        IRRIGATION |     46,705        2.23        4.84
             OTHER |     28,068        1.34        6.17
 RESIDENTIAL_MULTI |      2,420        0.12        6.29
RESIDENTIAL_SINGLE |  1,965,631       93.71      100.00
-------------------+-----------------------------------
             Total |  2,097,552      100.00

.         /*
>                 cust_loc_class |      Freq.     Percent        Cum.
>         -------------------+-----------------------------------
>                   AGRICULTURAL |      7,765        0.37        0.37
>                         COMMERCIAL |     40,469        1.93        2.30
>                         INDUSTRIAL |        570        0.03        2.33
>                  INSTITUTIONAL |      5,924        0.28        2.61
>                         IRRIGATION |     46,705        2.23        4.84
>                                  OTHER |     28,068        1.34        6.17
>          RESIDENTIAL_MULTI |      2,420        0.12        6.29
>         RESIDENTIAL_SINGLE |  1,965,631       93.71      100.00
>         -------------------+-----------------------------------
>                                  Total |  2,097,552      100.00
>         */
. tab cust_loc_has_variance

cust_loc_ha |
 s_variance |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |  2,029,845       96.77       96.77
          t |     67,707        3.23      100.00
------------+-----------------------------------
      Total |  2,097,552      100.00

. tab cust_loc_water_type // >1% are nonpotable or other

cust_loc_wa |
   ter_type |      Freq.     Percent        Cum.
------------+-----------------------------------
 NONPOTABLE |     10,239        0.49        0.49
      OTHER |        465        0.02        0.51
    POTABLE |  2,086,848       99.49      100.00
------------+-----------------------------------
      Total |  2,097,552      100.00

. tab cust_loc_class if cust_loc_water_type == "NONPOTABLE" 

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
      AGRICULTURAL |      4,044       39.50       39.50
        IRRIGATION |      5,572       54.42       93.92
             OTHER |        623        6.08      100.00
-------------------+-----------------------------------
             Total |     10,239      100.00

. tab cust_loc_class if cust_loc_water_type == "OTHER" 

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
             OTHER |        465      100.00      100.00
-------------------+-----------------------------------
             Total |        465      100.00

. tab cust_loc_is_master_meter // 0.12% of obs are master meter (?)

cust_loc_is |
_master_met |
         er |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |  2,095,132       99.88       99.88
          t |      2,420        0.12      100.00
------------+-----------------------------------
      Total |  2,097,552      100.00

. tab cust_loc_city

       cust_loc_city |      Freq.     Percent        Cum.
---------------------+-----------------------------------
BETWEEN COTTONWOOD & |          4        0.00        0.00
              CORONA |        623        0.03        0.03
         GLEN VALLEY |         39        0.00        0.03
       Gavilan Hills |          5        0.00        0.03
         LAKE MATHEW |         90        0.00        0.04
        LAKE MATHEWS |         92        0.00        0.04
       Lake Matthews |         11        0.00        0.04
       MORENO VALLEY |        605        0.03        0.07
            MURRIETA |    239,158       11.45       11.52
            Murrieta |        204        0.01       11.53
    N OF REGENCY CIR |         93        0.00       11.54
              PERRIS |    196,460        9.41       20.95
              Perris |        461        0.02       20.97
          RIVBERSIDE |         45        0.00       20.97
           RIVERSIDE |  1,644,306       78.74       99.71
          RIVERSIDEC |         61        0.00       99.72
            RIVESIDE |         53        0.00       99.72
           Riverside |      1,882        0.09       99.81
            TEMECULA |      3,997        0.19      100.00
---------------------+-----------------------------------
               Total |  2,088,189      100.00

.         replace cust_loc_city = upper(cust_loc_city)
(2,563 real changes made)

.         replace cust_loc_city = "LAKE MATHEWS" if cust_loc_city=="LAKE MATHEW"
(90 real changes made)

.         replace cust_loc_city = "LAKE MATHEWS" if cust_loc_city=="LAKE MATTHEWS"
(11 real changes made)

.         replace cust_loc_city = "RIVERSIDE" if cust_loc_city=="RIVBERSIDE"
(45 real changes made)

.         replace cust_loc_city = "RIVERSIDE" if cust_loc_city=="RIVBERSIDE"
(0 real changes made)

.         replace cust_loc_city = "RIVERSIDE" if cust_loc_city=="RIVERSIDEC"
(61 real changes made)

.         replace cust_loc_city = "RIVERSIDE" if cust_loc_city=="RIVESIDE"
(53 real changes made)

. tab cust_loc_is_current // 78% true (?)

cust_loc_is |
   _current |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |    457,135       21.79       21.79
          t |  1,640,417       78.21      100.00
------------+-----------------------------------
      Total |  2,097,552      100.00

. tab utility_name

utility_nam |
          e |      Freq.     Percent        Cum.
------------+-----------------------------------
       WMWD |  2,097,552      100.00      100.00
------------+-----------------------------------
      Total |  2,097,552      100.00

. tab et_zone_from_utility

et_zone_fro |
  m_utility |      Freq.     Percent        Cum.
------------+-----------------------------------
    1094077 |         48        0.00        0.00
   1.04e+07 |        634        0.03        0.03
   1.04e+07 |        270        0.01        0.05
   1.04e+07 |      1,147        0.05        0.10
   1.04e+07 |        434        0.02        0.12
   1.05e+07 |      1,461        0.07        0.19
   1.05e+07 |        917        0.04        0.23
   1.05e+07 |      3,814        0.18        0.42
   1.05e+07 |        341        0.02        0.43
   1.05e+07 |        181        0.01        0.44
   1.06e+07 |      1,778        0.08        0.53
   1.06e+07 |     15,726        0.75        1.28
   1.06e+07 |     21,568        1.03        2.31
   1.06e+07 |      6,933        0.33        2.64
   1.06e+07 |      2,708        0.13        2.77
   1.06e+07 |      1,067        0.05        2.82
   1.06e+07 |     15,240        0.73        3.55
   1.06e+07 |     26,967        1.29        4.84
   1.06e+07 |      8,764        0.42        5.26
   1.06e+07 |      4,494        0.21        5.47
   1.06e+07 |        359        0.02        5.49
   1.06e+07 |     24,362        1.16        6.65
   1.06e+07 |     32,419        1.55        8.20
   1.06e+07 |     11,006        0.53        8.73
   1.06e+07 |        417        0.02        8.75
   1.06e+07 |     27,670        1.32       10.07
   1.06e+07 |     16,437        0.79       10.86
   1.08e+07 |        385        0.02       10.88
   1.08e+07 |      1,186        0.06       10.93
   1.08e+07 |      4,287        0.20       11.14
   1.08e+07 |      2,038        0.10       11.23
   1.08e+07 |         13        0.00       11.24
   1.08e+07 |        101        0.00       11.24
   1.08e+07 |         39        0.00       11.24
   1.08e+07 |        579        0.03       11.27
   1.08e+07 |      2,493        0.12       11.39
   1.08e+07 |      4,162        0.20       11.59
   1.08e+07 |     10,512        0.50       12.09
   1.08e+07 |      3,162        0.15       12.24
   1.08e+07 |        183        0.01       12.25
   1.08e+07 |         88        0.00       12.25
   1.08e+07 |        179        0.01       12.26
   1.08e+07 |        342        0.02       12.28
   1.08e+07 |      2,352        0.11       12.39
   1.08e+07 |      3,465        0.17       12.56
   1.08e+07 |      4,121        0.20       12.75
   1.08e+07 |      2,025        0.10       12.85
   1.08e+07 |      1,169        0.06       12.91
   1.08e+07 |      1,646        0.08       12.99
   1.08e+07 |        183        0.01       12.99
   1.08e+07 |      2,443        0.12       13.11
   1.08e+07 |         92        0.00       13.12
   1.08e+07 |        361        0.02       13.13
   1.08e+07 |     11,648        0.56       13.69
   1.08e+07 |        455        0.02       13.71
   1.08e+07 |      1,412        0.07       13.78
   1.08e+07 |      1,757        0.08       13.86
   1.08e+07 |        547        0.03       13.89
   1.08e+07 |      5,840        0.28       14.17
   1.08e+07 |      3,710        0.18       14.34
   1.08e+07 |      1,214        0.06       14.40
   1.08e+07 |      1,926        0.09       14.49
   1.08e+07 |         91        0.00       14.50
   1.08e+07 |     12,780        0.61       15.11
   1.08e+07 |        694        0.03       15.14
   1.08e+07 |      2,734        0.13       15.27
   1.08e+07 |        177        0.01       15.28
   1.08e+07 |         92        0.00       15.29
   1.08e+07 |      3,721        0.18       15.46
   1.08e+07 |      4,536        0.22       15.68
   1.08e+07 |      4,999        0.24       15.92
   1.08e+07 |      3,321        0.16       16.08
   1.08e+07 |      2,671        0.13       16.21
   1.08e+07 |      4,509        0.22       16.42
   1.08e+07 |      1,938        0.09       16.51
   1.08e+07 |         17        0.00       16.52
   1.08e+07 |         93        0.00       16.52
   1.08e+07 |        179        0.01       16.53
   1.08e+07 |        171        0.01       16.54
   1.08e+07 |      1,468        0.07       16.61
   1.08e+07 |      2,650        0.13       16.73
   1.08e+07 |      4,712        0.23       16.96
   1.08e+07 |      2,017        0.10       17.06
   1.08e+07 |      7,866        0.38       17.43
   1.08e+07 |         83        0.00       17.44
   1.08e+07 |         12        0.00       17.44
   1.08e+07 |      1,662        0.08       17.52
   1.08e+07 |      1,569        0.07       17.59
   1.08e+07 |      7,249        0.35       17.94
   1.08e+07 |      2,793        0.13       18.07
   1.08e+07 |     13,060        0.62       18.69
   1.08e+07 |     12,398        0.59       19.29
   1.09e+07 |        265        0.01       19.30
   1.09e+07 |          4        0.00       19.30
   1.09e+07 |      3,725        0.18       19.48
   1.09e+07 |      6,816        0.33       19.80
   1.09e+07 |     13,063        0.62       20.43
   1.09e+07 |     14,425        0.69       21.12
   1.09e+07 |      7,633        0.36       21.48
   1.09e+07 |     10,148        0.49       21.97
   1.09e+07 |      3,766        0.18       22.15
   1.09e+07 |      9,050        0.43       22.58
   1.09e+07 |     20,498        0.98       23.56
   1.09e+07 |     33,977        1.62       25.18
   1.09e+07 |        379        0.02       25.20
   1.09e+07 |        843        0.04       25.24
   1.09e+07 |        534        0.03       25.27
   1.09e+07 |      1,461        0.07       25.34
   1.09e+07 |      1,570        0.08       25.41
   1.09e+07 |      7,388        0.35       25.77
   1.09e+07 |     13,425        0.64       26.41
   1.09e+07 |     18,816        0.90       27.31
   1.09e+07 |      7,489        0.36       27.66
   1.09e+07 |      2,953        0.14       27.81
   1.09e+07 |     11,052        0.53       28.33
   1.09e+07 |      5,412        0.26       28.59
   1.09e+07 |        716        0.03       28.63
   1.09e+07 |      3,446        0.16       28.79
   1.09e+07 |     15,601        0.75       29.54
   1.09e+07 |      7,974        0.38       29.92
   1.09e+07 |     27,115        1.30       31.21
   1.09e+07 |     38,079        1.82       33.03
   1.09e+07 |     21,502        1.03       34.06
   1.09e+07 |      2,528        0.12       34.18
   1.09e+07 |      3,332        0.16       34.34
   1.09e+07 |      8,083        0.39       34.73
   1.09e+07 |      2,184        0.10       34.83
   1.09e+07 |      8,029        0.38       35.22
   1.09e+07 |      6,025        0.29       35.50
   1.09e+07 |      6,258        0.30       35.80
   1.09e+07 |      6,064        0.29       36.09
   1.09e+07 |      5,970        0.29       36.38
   1.09e+07 |     17,212        0.82       37.20
   1.09e+07 |     15,774        0.75       37.95
   1.09e+07 |      8,726        0.42       38.37
   1.09e+07 |      2,988        0.14       38.51
   1.09e+07 |        275        0.01       38.53
   1.09e+07 |     21,238        1.02       39.54
   1.09e+07 |         88        0.00       39.55
   1.09e+07 |        249        0.01       39.56
   1.09e+07 |      1,271        0.06       39.62
   1.09e+07 |     29,155        1.39       41.01
   1.09e+07 |     23,772        1.14       42.15
   1.09e+07 |      7,988        0.38       42.53
   1.09e+07 |      6,771        0.32       42.85
   1.09e+07 |      1,124        0.05       42.91
   1.09e+07 |     12,554        0.60       43.51
   1.09e+07 |     30,926        1.48       44.99
   1.09e+07 |      5,976        0.29       45.27
   1.09e+07 |     12,600        0.60       45.87
   1.09e+07 |     16,125        0.77       46.64
   1.09e+07 |     17,533        0.84       47.48
   1.09e+07 |     15,749        0.75       48.24
   1.09e+07 |     16,172        0.77       49.01
   1.09e+07 |     38,897        1.86       50.87
   1.09e+07 |     40,560        1.94       52.81
   1.09e+07 |     60,533        2.89       55.70
   1.09e+07 |     12,087        0.58       56.28
   1.09e+07 |      1,452        0.07       56.35
   1.09e+07 |     12,301        0.59       56.93
   1.09e+07 |         90        0.00       56.94
   1.09e+07 |        427        0.02       56.96
   1.09e+07 |         89        0.00       56.96
   1.09e+07 |      2,011        0.10       57.06
   1.09e+07 |        369        0.02       57.08
   1.09e+07 |      2,126        0.10       57.18
   1.09e+07 |      4,151        0.20       57.38
   1.09e+07 |      4,461        0.21       57.59
   1.09e+07 |      1,620        0.08       57.67
   1.09e+07 |     16,021        0.77       58.43
   1.09e+07 |     18,113        0.87       59.30
   1.09e+07 |      5,070        0.24       59.54
   1.09e+07 |      5,798        0.28       59.82
   1.09e+07 |     20,362        0.97       60.79
   1.09e+07 |     36,807        1.76       62.55
   1.09e+07 |     69,914        3.34       65.89
   1.09e+07 |     55,868        2.67       68.56
   1.09e+07 |     55,636        2.66       71.22
   1.09e+07 |     26,415        1.26       72.48
   1.09e+07 |        595        0.03       72.51
   1.09e+07 |        691        0.03       72.55
   1.09e+07 |        174        0.01       72.55
   1.09e+07 |      8,304        0.40       72.95
   1.09e+07 |      7,742        0.37       73.32
   1.09e+07 |      1,530        0.07       73.39
   1.09e+07 |     10,122        0.48       73.88
   1.09e+07 |     17,207        0.82       74.70
   1.09e+07 |     35,968        1.72       76.42
   1.09e+07 |     60,837        2.91       79.33
   1.09e+07 |     15,094        0.72       80.05
   1.09e+07 |     50,644        2.42       82.47
   1.09e+07 |     28,498        1.36       83.83
   1.09e+07 |      1,777        0.08       83.92
   1.09e+07 |        133        0.01       83.92
   1.09e+07 |        672        0.03       83.95
   1.09e+07 |        448        0.02       83.98
   1.09e+07 |      3,287        0.16       84.13
   1.09e+07 |     12,836        0.61       84.75
   1.09e+07 |     34,272        1.64       86.38
   1.09e+07 |     57,444        2.75       89.13
   1.09e+07 |     66,289        3.17       92.30
   1.09e+07 |      2,419        0.12       92.41
   1.09e+07 |      1,443        0.07       92.48
   1.09e+07 |        709        0.03       92.52
   1.09e+07 |        259        0.01       92.53
   1.09e+07 |        326        0.02       92.54
   1.09e+07 |        631        0.03       92.57
   1.09e+07 |     15,270        0.73       93.30
   1.09e+07 |     50,097        2.39       95.70
   1.09e+07 |     11,801        0.56       96.26
   1.09e+07 |      5,291        0.25       96.52
   1.09e+07 |      2,207        0.11       96.62
   1.09e+07 |      2,771        0.13       96.75
   1.09e+07 |        666        0.03       96.79
   1.09e+07 |      5,449        0.26       97.05
   1.09e+07 |     28,835        1.38       98.42
   1.09e+07 |     26,477        1.27       99.69
   1.09e+07 |      3,918        0.19       99.88
   1.09e+07 |        872        0.04       99.92
   1.09e+07 |      1,525        0.07       99.99
   1.10e+07 |        180        0.01      100.00
------------+-----------------------------------
      Total |  2,092,291      100.00

. count if cust_loc_latitude == .
  3,809

. count if cust_loc_longitude == .
  3,972

. tab cust_loc_geocode_accuracy // 95% == 1

cust_loc_ge |
ocode_accur |
        acy |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      3,707        4.94        4.94
         .8 |     71,352       95.06      100.00
------------+-----------------------------------
      Total |     75,059      100.00

. 
. 
. *
. g usage_yrmonth = usage_year*100 + usage_month 

. g usage_start_date2 = date(usage_start_date, "YMD") 

. g usage_end_date2 = date(usage_end_date, "YMD")

. 
. drop usage_yrmonth usage_year usage_month // these may be based off of billing period end d
> ates

. g usage_month = month(usage_start_date2)

. g usage_year = year(usage_start_date2)

. g usage_yrmonth = usage_year*100 + usage_month

. label var usage_yrmonth "Year-month for start of billing period"

. drop usage_start_date2 usage_end_date2

. 
. count if usage_billing_period_days<0 // 0
usage_billing_period_days not found
r(111);

end of do-file

r(111);

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * process CADC-SCUBA data for Western Municipal Water Districts
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/SCUBA"

. cd "$dir"
/Users/wichman/Dropbox/SCUBA

. 
. 
. * western municipal water districts
. insheet using "rawdata/wmwd.csv"
(48 vars, 2,097,552 obs)

. 
. 
. sum // 2.09M obs

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 cust_loc_id |  2,097,552    2.05e+07     10374.2   2.04e+07   2.05e+07
cust_id_fr~y |  2,097,552    15465.36    11585.52          2      43763
location_i~y |          0
cust_loc_c~s |          0
cust_lo~lity |  2,097,552    138.2257    168.4815          0        999
-------------+---------------------------------------------------------
cust_l~hsize |  1,947,182    4.107661    5.841713          3        821
cust_loc_~ce |          0
cust_loc_w~e |          0
cust_loc_i~r |          0
cust_loc_i~f |  1,992,766       10975    41742.17          0   1.08e+07
-------------+---------------------------------------------------------
cust_loc_apn |          0
cust_loc_s~m |  2,070,116    16655.54    8154.407          0      47980
cust_loc_~me |          0
cust_lo~city |          0
cust_lo~tate |          0
-------------+---------------------------------------------------------
cust_loc_zip |          0
cust_~t_date |          0
cust_~d_date |          0
cust_loc_i~t |          0
  utility_id |  2,097,552         142           0        142        142
-------------+---------------------------------------------------------
utility_name |          0
census_blo~m |  2,093,580    6.07e+13    6.79e+07   6.07e+13   6.07e+13
et_zone_fr~y |  2,092,291    1.08e+07    113246.8    1094077   1.10e+07
cust_loc~nty |          0
cust_~titude |  2,093,743    33.84394    .1146611   33.43306    40.7675
-------------+---------------------------------------------------------
cust_~gitude |  2,093,580   -117.3399    .0651594   -117.649  -117.1277
cust_loc_g~y |     75,059    .7604898    .1733423          0         .8
cust_loc_g~e |          0
cust_loc_m~e |          0
cust_loc_p~e |          0
-------------+---------------------------------------------------------
cust_loc_f~s |          0
        geom |          0
cust_loc_r~s |          0
  usage_year |  2,097,552    2014.018    2.337071       2009       2018
 usage_month |  2,097,552    6.441559    3.516661          1         12
-------------+---------------------------------------------------------
usage_star~e |          0
usage_end_~e |          0
   usage_ccf |  2,097,552    36.35878    324.2387          0      99977
usage_indo~f |  2,097,552    7.504431    113.7687          0    72938.5
usage_outd~f |  2,097,552    20.33173    79.65065          0    40317.7
-------------+---------------------------------------------------------
usage_et_~nt |  1,406,392    5.297527    1.883039       1.84       8.83
    usage_id |  2,097,552    1.00e+08    693804.1   9.91e+07   1.02e+08
cust_loc_h~t |  2,097,552    3.537199    .5664093        1.6       4.89
cust_loc_i~u |  2,097,552     50132.6    523699.2          0   4.51e+07
cust_loc_c~g |          0
-------------+---------------------------------------------------------
usage_et_~lt |  2,097,552    4.860378     1.85403    1.75594    8.14676
usage_tota~l |  2,097,552    128.8892     1167.81  -829938.9   139328.4
cust_loc_e~s |          0

. tab cust_loc_class

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
      AGRICULTURAL |      7,765        0.37        0.37
        COMMERCIAL |     40,469        1.93        2.30
        INDUSTRIAL |        570        0.03        2.33
     INSTITUTIONAL |      5,924        0.28        2.61
        IRRIGATION |     46,705        2.23        4.84
             OTHER |     28,068        1.34        6.17
 RESIDENTIAL_MULTI |      2,420        0.12        6.29
RESIDENTIAL_SINGLE |  1,965,631       93.71      100.00
-------------------+-----------------------------------
             Total |  2,097,552      100.00

.         /*
>                 cust_loc_class |      Freq.     Percent        Cum.
>         -------------------+-----------------------------------
>                   AGRICULTURAL |      7,765        0.37        0.37
>                         COMMERCIAL |     40,469        1.93        2.30
>                         INDUSTRIAL |        570        0.03        2.33
>                  INSTITUTIONAL |      5,924        0.28        2.61
>                         IRRIGATION |     46,705        2.23        4.84
>                                  OTHER |     28,068        1.34        6.17
>          RESIDENTIAL_MULTI |      2,420        0.12        6.29
>         RESIDENTIAL_SINGLE |  1,965,631       93.71      100.00
>         -------------------+-----------------------------------
>                                  Total |  2,097,552      100.00
>         */
. tab cust_loc_has_variance

cust_loc_ha |
 s_variance |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |  2,029,845       96.77       96.77
          t |     67,707        3.23      100.00
------------+-----------------------------------
      Total |  2,097,552      100.00

. tab cust_loc_water_type // >1% are nonpotable or other

cust_loc_wa |
   ter_type |      Freq.     Percent        Cum.
------------+-----------------------------------
 NONPOTABLE |     10,239        0.49        0.49
      OTHER |        465        0.02        0.51
    POTABLE |  2,086,848       99.49      100.00
------------+-----------------------------------
      Total |  2,097,552      100.00

. tab cust_loc_class if cust_loc_water_type == "NONPOTABLE" 

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
      AGRICULTURAL |      4,044       39.50       39.50
        IRRIGATION |      5,572       54.42       93.92
             OTHER |        623        6.08      100.00
-------------------+-----------------------------------
             Total |     10,239      100.00

. tab cust_loc_class if cust_loc_water_type == "OTHER" 

    cust_loc_class |      Freq.     Percent        Cum.
-------------------+-----------------------------------
             OTHER |        465      100.00      100.00
-------------------+-----------------------------------
             Total |        465      100.00

. tab cust_loc_is_master_meter // 0.12% of obs are master meter (?)

cust_loc_is |
_master_met |
         er |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |  2,095,132       99.88       99.88
          t |      2,420        0.12      100.00
------------+-----------------------------------
      Total |  2,097,552      100.00

. tab cust_loc_city

       cust_loc_city |      Freq.     Percent        Cum.
---------------------+-----------------------------------
BETWEEN COTTONWOOD & |          4        0.00        0.00
              CORONA |        623        0.03        0.03
         GLEN VALLEY |         39        0.00        0.03
       Gavilan Hills |          5        0.00        0.03
         LAKE MATHEW |         90        0.00        0.04
        LAKE MATHEWS |         92        0.00        0.04
       Lake Matthews |         11        0.00        0.04
       MORENO VALLEY |        605        0.03        0.07
            MURRIETA |    239,158       11.45       11.52
            Murrieta |        204        0.01       11.53
    N OF REGENCY CIR |         93        0.00       11.54
              PERRIS |    196,460        9.41       20.95
              Perris |        461        0.02       20.97
          RIVBERSIDE |         45        0.00       20.97
           RIVERSIDE |  1,644,306       78.74       99.71
          RIVERSIDEC |         61        0.00       99.72
            RIVESIDE |         53        0.00       99.72
           Riverside |      1,882        0.09       99.81
            TEMECULA |      3,997        0.19      100.00
---------------------+-----------------------------------
               Total |  2,088,189      100.00

.         replace cust_loc_city = upper(cust_loc_city)
(2,563 real changes made)

.         replace cust_loc_city = "LAKE MATHEWS" if cust_loc_city=="LAKE MATHEW"
(90 real changes made)

.         replace cust_loc_city = "LAKE MATHEWS" if cust_loc_city=="LAKE MATTHEWS"
(11 real changes made)

.         replace cust_loc_city = "RIVERSIDE" if cust_loc_city=="RIVBERSIDE"
(45 real changes made)

.         replace cust_loc_city = "RIVERSIDE" if cust_loc_city=="RIVBERSIDE"
(0 real changes made)

.         replace cust_loc_city = "RIVERSIDE" if cust_loc_city=="RIVERSIDEC"
(61 real changes made)

.         replace cust_loc_city = "RIVERSIDE" if cust_loc_city=="RIVESIDE"
(53 real changes made)

. tab cust_loc_is_current // 78% true (?)

cust_loc_is |
   _current |      Freq.     Percent        Cum.
------------+-----------------------------------
          f |    457,135       21.79       21.79
          t |  1,640,417       78.21      100.00
------------+-----------------------------------
      Total |  2,097,552      100.00

. tab utility_name

utility_nam |
          e |      Freq.     Percent        Cum.
------------+-----------------------------------
       WMWD |  2,097,552      100.00      100.00
------------+-----------------------------------
      Total |  2,097,552      100.00

. tab et_zone_from_utility

et_zone_fro |
  m_utility |      Freq.     Percent        Cum.
------------+-----------------------------------
    1094077 |         48        0.00        0.00
   1.04e+07 |        634        0.03        0.03
   1.04e+07 |        270        0.01        0.05
   1.04e+07 |      1,147        0.05        0.10
   1.04e+07 |        434        0.02        0.12
   1.05e+07 |      1,461        0.07        0.19
   1.05e+07 |        917        0.04        0.23
   1.05e+07 |      3,814        0.18        0.42
   1.05e+07 |        341        0.02        0.43
   1.05e+07 |        181        0.01        0.44
   1.06e+07 |      1,778        0.08        0.53
   1.06e+07 |     15,726        0.75        1.28
   1.06e+07 |     21,568        1.03        2.31
   1.06e+07 |      6,933        0.33        2.64
   1.06e+07 |      2,708        0.13        2.77
   1.06e+07 |      1,067        0.05        2.82
   1.06e+07 |     15,240        0.73        3.55
   1.06e+07 |     26,967        1.29        4.84
   1.06e+07 |      8,764        0.42        5.26
   1.06e+07 |      4,494        0.21        5.47
   1.06e+07 |        359        0.02        5.49
   1.06e+07 |     24,362        1.16        6.65
   1.06e+07 |     32,419        1.55        8.20
   1.06e+07 |     11,006        0.53        8.73
   1.06e+07 |        417        0.02        8.75
   1.06e+07 |     27,670        1.32       10.07
   1.06e+07 |     16,437        0.79       10.86
   1.08e+07 |        385        0.02       10.88
   1.08e+07 |      1,186        0.06       10.93
   1.08e+07 |      4,287        0.20       11.14
   1.08e+07 |      2,038        0.10       11.23
   1.08e+07 |         13        0.00       11.24
   1.08e+07 |        101        0.00       11.24
   1.08e+07 |         39        0.00       11.24
   1.08e+07 |        579        0.03       11.27
   1.08e+07 |      2,493        0.12       11.39
   1.08e+07 |      4,162        0.20       11.59
   1.08e+07 |     10,512        0.50       12.09
   1.08e+07 |      3,162        0.15       12.24
   1.08e+07 |        183        0.01       12.25
   1.08e+07 |         88        0.00       12.25
   1.08e+07 |        179        0.01       12.26
   1.08e+07 |        342        0.02       12.28
   1.08e+07 |      2,352        0.11       12.39
   1.08e+07 |      3,465        0.17       12.56
   1.08e+07 |      4,121        0.20       12.75
   1.08e+07 |      2,025        0.10       12.85
   1.08e+07 |      1,169        0.06       12.91
   1.08e+07 |      1,646        0.08       12.99
   1.08e+07 |        183        0.01       12.99
   1.08e+07 |      2,443        0.12       13.11
   1.08e+07 |         92        0.00       13.12
   1.08e+07 |        361        0.02       13.13
   1.08e+07 |     11,648        0.56       13.69
   1.08e+07 |        455        0.02       13.71
   1.08e+07 |      1,412        0.07       13.78
   1.08e+07 |      1,757        0.08       13.86
   1.08e+07 |        547        0.03       13.89
   1.08e+07 |      5,840        0.28       14.17
   1.08e+07 |      3,710        0.18       14.34
   1.08e+07 |      1,214        0.06       14.40
   1.08e+07 |      1,926        0.09       14.49
   1.08e+07 |         91        0.00       14.50
   1.08e+07 |     12,780        0.61       15.11
   1.08e+07 |        694        0.03       15.14
   1.08e+07 |      2,734        0.13       15.27
   1.08e+07 |        177        0.01       15.28
   1.08e+07 |         92        0.00       15.29
   1.08e+07 |      3,721        0.18       15.46
   1.08e+07 |      4,536        0.22       15.68
   1.08e+07 |      4,999        0.24       15.92
   1.08e+07 |      3,321        0.16       16.08
   1.08e+07 |      2,671        0.13       16.21
   1.08e+07 |      4,509        0.22       16.42
   1.08e+07 |      1,938        0.09       16.51
   1.08e+07 |         17        0.00       16.52
   1.08e+07 |         93        0.00       16.52
   1.08e+07 |        179        0.01       16.53
   1.08e+07 |        171        0.01       16.54
   1.08e+07 |      1,468        0.07       16.61
   1.08e+07 |      2,650        0.13       16.73
   1.08e+07 |      4,712        0.23       16.96
   1.08e+07 |      2,017        0.10       17.06
   1.08e+07 |      7,866        0.38       17.43
   1.08e+07 |         83        0.00       17.44
   1.08e+07 |         12        0.00       17.44
   1.08e+07 |      1,662        0.08       17.52
   1.08e+07 |      1,569        0.07       17.59
   1.08e+07 |      7,249        0.35       17.94
   1.08e+07 |      2,793        0.13       18.07
   1.08e+07 |     13,060        0.62       18.69
   1.08e+07 |     12,398        0.59       19.29
   1.09e+07 |        265        0.01       19.30
   1.09e+07 |          4        0.00       19.30
   1.09e+07 |      3,725        0.18       19.48
   1.09e+07 |      6,816        0.33       19.80
   1.09e+07 |     13,063        0.62       20.43
   1.09e+07 |     14,425        0.69       21.12
   1.09e+07 |      7,633        0.36       21.48
   1.09e+07 |     10,148        0.49       21.97
   1.09e+07 |      3,766        0.18       22.15
   1.09e+07 |      9,050        0.43       22.58
   1.09e+07 |     20,498        0.98       23.56
   1.09e+07 |     33,977        1.62       25.18
   1.09e+07 |        379        0.02       25.20
   1.09e+07 |        843        0.04       25.24
   1.09e+07 |        534        0.03       25.27
   1.09e+07 |      1,461        0.07       25.34
   1.09e+07 |      1,570        0.08       25.41
   1.09e+07 |      7,388        0.35       25.77
   1.09e+07 |     13,425        0.64       26.41
   1.09e+07 |     18,816        0.90       27.31
   1.09e+07 |      7,489        0.36       27.66
   1.09e+07 |      2,953        0.14       27.81
   1.09e+07 |     11,052        0.53       28.33
   1.09e+07 |      5,412        0.26       28.59
   1.09e+07 |        716        0.03       28.63
   1.09e+07 |      3,446        0.16       28.79
   1.09e+07 |     15,601        0.75       29.54
   1.09e+07 |      7,974        0.38       29.92
   1.09e+07 |     27,115        1.30       31.21
   1.09e+07 |     38,079        1.82       33.03
   1.09e+07 |     21,502        1.03       34.06
   1.09e+07 |      2,528        0.12       34.18
   1.09e+07 |      3,332        0.16       34.34
   1.09e+07 |      8,083        0.39       34.73
   1.09e+07 |      2,184        0.10       34.83
   1.09e+07 |      8,029        0.38       35.22
   1.09e+07 |      6,025        0.29       35.50
   1.09e+07 |      6,258        0.30       35.80
   1.09e+07 |      6,064        0.29       36.09
   1.09e+07 |      5,970        0.29       36.38
   1.09e+07 |     17,212        0.82       37.20
   1.09e+07 |     15,774        0.75       37.95
   1.09e+07 |      8,726        0.42       38.37
   1.09e+07 |      2,988        0.14       38.51
   1.09e+07 |        275        0.01       38.53
   1.09e+07 |     21,238        1.02       39.54
   1.09e+07 |         88        0.00       39.55
   1.09e+07 |        249        0.01       39.56
   1.09e+07 |      1,271        0.06       39.62
   1.09e+07 |     29,155        1.39       41.01
   1.09e+07 |     23,772        1.14       42.15
   1.09e+07 |      7,988        0.38       42.53
   1.09e+07 |      6,771        0.32       42.85
   1.09e+07 |      1,124        0.05       42.91
   1.09e+07 |     12,554        0.60       43.51
   1.09e+07 |     30,926        1.48       44.99
   1.09e+07 |      5,976        0.29       45.27
   1.09e+07 |     12,600        0.60       45.87
   1.09e+07 |     16,125        0.77       46.64
   1.09e+07 |     17,533        0.84       47.48
   1.09e+07 |     15,749        0.75       48.24
   1.09e+07 |     16,172        0.77       49.01
   1.09e+07 |     38,897        1.86       50.87
   1.09e+07 |     40,560        1.94       52.81
   1.09e+07 |     60,533        2.89       55.70
   1.09e+07 |     12,087        0.58       56.28
   1.09e+07 |      1,452        0.07       56.35
   1.09e+07 |     12,301        0.59       56.93
   1.09e+07 |         90        0.00       56.94
   1.09e+07 |        427        0.02       56.96
   1.09e+07 |         89        0.00       56.96
   1.09e+07 |      2,011        0.10       57.06
   1.09e+07 |        369        0.02       57.08
   1.09e+07 |      2,126        0.10       57.18
   1.09e+07 |      4,151        0.20       57.38
   1.09e+07 |      4,461        0.21       57.59
   1.09e+07 |      1,620        0.08       57.67
   1.09e+07 |     16,021        0.77       58.43
   1.09e+07 |     18,113        0.87       59.30
   1.09e+07 |      5,070        0.24       59.54
   1.09e+07 |      5,798        0.28       59.82
   1.09e+07 |     20,362        0.97       60.79
   1.09e+07 |     36,807        1.76       62.55
   1.09e+07 |     69,914        3.34       65.89
   1.09e+07 |     55,868        2.67       68.56
   1.09e+07 |     55,636        2.66       71.22
   1.09e+07 |     26,415        1.26       72.48
   1.09e+07 |        595        0.03       72.51
   1.09e+07 |        691        0.03       72.55
   1.09e+07 |        174        0.01       72.55
   1.09e+07 |      8,304        0.40       72.95
   1.09e+07 |      7,742        0.37       73.32
   1.09e+07 |      1,530        0.07       73.39
   1.09e+07 |     10,122        0.48       73.88
   1.09e+07 |     17,207        0.82       74.70
   1.09e+07 |     35,968        1.72       76.42
   1.09e+07 |     60,837        2.91       79.33
   1.09e+07 |     15,094        0.72       80.05
   1.09e+07 |     50,644        2.42       82.47
   1.09e+07 |     28,498        1.36       83.83
   1.09e+07 |      1,777        0.08       83.92
   1.09e+07 |        133        0.01       83.92
   1.09e+07 |        672        0.03       83.95
   1.09e+07 |        448        0.02       83.98
   1.09e+07 |      3,287        0.16       84.13
   1.09e+07 |     12,836        0.61       84.75
   1.09e+07 |     34,272        1.64       86.38
   1.09e+07 |     57,444        2.75       89.13
   1.09e+07 |     66,289        3.17       92.30
   1.09e+07 |      2,419        0.12       92.41
   1.09e+07 |      1,443        0.07       92.48
   1.09e+07 |        709        0.03       92.52
   1.09e+07 |        259        0.01       92.53
   1.09e+07 |        326        0.02       92.54
   1.09e+07 |        631        0.03       92.57
   1.09e+07 |     15,270        0.73       93.30
   1.09e+07 |     50,097        2.39       95.70
   1.09e+07 |     11,801        0.56       96.26
   1.09e+07 |      5,291        0.25       96.52
   1.09e+07 |      2,207        0.11       96.62
   1.09e+07 |      2,771        0.13       96.75
   1.09e+07 |        666        0.03       96.79
   1.09e+07 |      5,449        0.26       97.05
   1.09e+07 |     28,835        1.38       98.42
   1.09e+07 |     26,477        1.27       99.69
   1.09e+07 |      3,918        0.19       99.88
   1.09e+07 |        872        0.04       99.92
   1.09e+07 |      1,525        0.07       99.99
   1.10e+07 |        180        0.01      100.00
------------+-----------------------------------
      Total |  2,092,291      100.00

. count if cust_loc_latitude == .
  3,809

. count if cust_loc_longitude == .
  3,972

. tab cust_loc_geocode_accuracy // 95% == 1

cust_loc_ge |
ocode_accur |
        acy |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      3,707        4.94        4.94
         .8 |     71,352       95.06      100.00
------------+-----------------------------------
      Total |     75,059      100.00

. 
. 
. *
. g usage_yrmonth = usage_year*100 + usage_month 

. g usage_start_date2 = date(usage_start_date, "YMD") 

. g usage_end_date2 = date(usage_end_date, "YMD")

. 
. drop usage_yrmonth usage_year usage_month // these may be based off of billing period end d
> ates

. g usage_month = month(usage_start_date2)

. g usage_year = year(usage_start_date2)

. g usage_yrmonth = usage_year*100 + usage_month

. label var usage_yrmonth "Year-month for start of billing period"

. g usage_billing_period_days = usage_end_date2 - usage_start_date2

. label var usage_billing_period_days "Days in billing period"

. drop usage_start_date2 usage_end_date2

. 
. count if usage_billing_period_days<0 // 0
  0

. 
. * check some usage variables
. sum usage_total_bill, d 

                      usage_total_bill
-------------------------------------------------------------
      Percentiles      Smallest
 1%        22.38      -829938.9
 5%        32.44      -586475.5
10%        39.97      -580836.8       Obs           2,097,552
25%        54.16      -580444.9       Sum of Wgt.   2,097,552

50%        77.64                      Mean           128.8892
                        Largest       Std. Dev.       1167.81
75%       120.16       92868.51
90%       193.96       97175.43       Variance        1363780
95%       277.02       100802.8       Skewness        -343.64
99%       779.22       139328.4       Kurtosis       212688.5

. tab cust_loc_extras

cust_loc_ex |
       tras |      Freq.     Percent        Cum.
------------+-----------------------------------
       : 0} |          1        0.00        0.00
      : 10} |      3,727        0.18        0.18
      : 11} |        270        0.01        0.19
       : 1} |  1,217,031       58.02       58.21
       : 2} |    483,180       23.04       81.25
       : 3} |     40,151        1.91       83.16
       : 4} |     27,253        1.30       84.46
       : 5} |     51,567        2.46       86.92
       : 6} |     30,885        1.47       88.39
       : 7} |    197,623        9.42       97.81
       : 8} |     41,653        1.99       99.80
       : 9} |      4,211        0.20      100.00
------------+-----------------------------------
      Total |  2,097,552      100.00

. 
. * create daily usage
. g usage_ccfpd = usage_ccf / usage_billing_period_days
(94 missing values generated)

. label var usage_ccfpd "Ave. daily consumption (ccf)" 

. 
. 
. 
. ************************************
. * impose sample restrictions
. ************************************
. drop if usage_billing_period_days==. // keep only first full billing period per account
(0 observations deleted)

. drop if usage_billing_period_days<0  // drop begative billing period lengths
(0 observations deleted)

. 
. * keep only key variables to save space
. keep cust_loc_id cust_loc_class cust_loc_hhsize cust_loc_water_type cust_loc_irr_area_sf //
> /
>         utility_name census_block_num et_zone_from_utility cust_loc_latitude cust_loc_longi
> tude ///
>         cust_loc_rate_class usage_start_date usage_end_date usage_ccf usage_ccfpd ///
>         usage_indoor_budget_ccf usage_outdoor_budget_ccf usage_et_amount usage_id ///
>         cust_loc_hhsize_default cust_loc_irr_area_sf_cgu cust_loc_cgu_area_is_avg ///
>         usage_et_amount_default usage_billing_period_days usage_month usage_year ///
>         usage_total_bill cust_loc_extras usage_yrmonth 

. ************************************
. 
. 
. compress
  variable usage_month was float now byte
  variable usage_year was float now int
  variable usage_billing_period_days was float now int
  (14,682,864 bytes saved)

. save "cleandata/wmwd.dta", replace
(note: file cleandata/wmwd.dta not found)
file cleandata/wmwd.dta saved

. 
. 
end of do-file

. do "/var/folders/g1/8_c6lnw53lx9l509sxwngcx1w519ht/T//SD22585.000000"

. * process CADC-SCUBA data for Western Municipal Water Districts
. 
. clear all

. 
. global dir = "/Users/wichman/Dropbox/SCUBA"

. cd "$dir"
/Users/wichman/Dropbox/SCUBA

. 
. 
. log using "log/cleanWMWD.txt", text replace
log file already open
r(604);

end of do-file

r(604);

. log close
      name:  <unnamed>
       log:  /Users/wichman/Dropbox/IHS/results/illustration_log.txt
  log type:  text
 closed on:   6 Jun 2018, 18:55:35
---------------------------------------------------------------------------------------------
